(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{509:function(a,t,s){a.exports=s.p+"assets/img/git-command.2480129f.jpg"},587:function(a,t,s){"use strict";s.r(t);var e=s(38),r=Object(e.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"git-常用命令集合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令集合","aria-hidden":"true"}},[a._v("#")]),a._v(" Git 常用命令集合")]),a._v(" "),e("p",[e("img",{attrs:{src:s(509),alt:"git 常用命令"}})]),a._v(" "),e("blockquote",[e("p",[a._v("Git 常用命令集合，Fork 于"),e("a",{attrs:{href:"https://github.com/521xueweihan/git-tips#%E6%9F%A5%E7%9C%8B%E6%9F%90%E6%AE%B5%E4%BB%A3%E7%A0%81%E6%98%AF%E8%B0%81%E5%86%99%E7%9A%84",target:"_blank",rel:"noopener noreferrer"}},[a._v("tips"),e("OutboundLink")],1),a._v("项目")])]),a._v(" "),e("p",[a._v("Git 是一个“分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过“回撤”这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用“回撤”是找不回来的。而“版本管理工具”能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。")]),a._v(" "),e("p",[a._v('下面的内容就是列举了常用的 Git 命令和一些小技巧，可以通过"页面内查找"的方式进行快速查询：'),e("code",[a._v("Ctrl/Command+f")]),a._v("。")]),a._v(" "),e("h2",{attrs:{id:"开卷必读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开卷必读","aria-hidden":"true"}},[a._v("#")]),a._v(" 开卷必读")]),a._v(" "),e("p",[a._v("如果之前未使用过 Git，可以学习"),e("a",{attrs:{href:"https://backlog.com/git-tutorial/cn/intro/intro1_1.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("猴子都能懂的 GIT 入门"),e("OutboundLink")],1)]),a._v(" "),e("p",[e("strong",[a._v("统一概念:")])]),a._v(" "),e("p",[e("strong",[a._v("工作区")]),a._v("：本地电脑存放项目文件的地方，比如 learnGitProject 文件夹；")]),a._v(" "),e("p",[e("strong",[a._v("暂存区")]),a._v("：暂存区（Index/Stage）：在使用 git 管理项目文件的时候，其本地的项目文件会多出一个.git 的文件夹，将这个.git 文件夹称之为版本库。其中.git 文件夹中包含了两个部分，一个是暂存区（Index 或者 Stage）,顾名思义就是暂时存放文件的地方，通常使用 add 命令将工作区的文件添加到暂存区里；")]),a._v(" "),e("p",[e("strong",[a._v("本地仓库(简称：本地)")]),a._v("：.git 文件夹里还包括 git 自动创建的 master 分支，并且将 HEAD 指针指向 master 分支。使用 commit 命令可以将暂存区中的文件添加到本地仓库中；。")]),a._v(" "),e("p",[e("strong",[a._v("远程仓库(简称：远程)")]),a._v("：不是在本地仓库中，项目代码在远程 git 服务器上，比如项目放在 github 上，就是一个远程仓库，通常使用 clone 命令将远程仓库拷贝到本地仓库中，开发后推送到远程仓库中即可；")]),a._v(" "),e("p",[e("strong",[a._v("commit-id")]),a._v("：输出命令："),e("code",[a._v("git log")]),a._v("，最上面那行"),e("code",[a._v("commit xxxxxx")]),a._v("，后面的字符串就是 commit-id")]),a._v(" "),e("h2",{attrs:{id:"基本操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 基本操作")]),a._v(" "),e("h3",{attrs:{id:"展示帮助信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示帮助信息","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示帮助信息")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" -g\n")])])]),e("h3",{attrs:{id:"创建数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建数据库","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建数据库")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" init\n")])])]),e("h3",{attrs:{id:"添加文件或目录到索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加文件或目录到索引","aria-hidden":"true"}},[a._v("#")]),a._v(" 添加文件或目录到索引")]),a._v(" "),e("p",[a._v('在 filepattern 可以直接指定文件名。此外，也可以指令通配字符 ( 例如“*.txt” )。如果指令 ".” , 可以将子目录里的所有文件添加到索引。')]),a._v(" "),e("p",[a._v("添加-p 选项，就可以只添加文件修改的其中一部分。 如果添加 -i 选项，那么可以选择用对话形式显示添加在索引的文件。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filepattern"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"提交追加到索引的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交追加到索引的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 提交追加到索引的文件")]),a._v(" "),e("h2",{attrs:{id:"gis-设定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gis-设定","aria-hidden":"true"}},[a._v("#")]),a._v(" GIS 设定")]),a._v(" "),e("h3",{attrs:{id:"显示设定清单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示设定清单","aria-hidden":"true"}},[a._v("#")]),a._v(" 显示设定清单")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global --list\n")])])]),e("h3",{attrs:{id:"删除全局设置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除全局设置","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除全局设置")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global --unset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("entry-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"输出彩色"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#输出彩色","aria-hidden":"true"}},[a._v("#")]),a._v(" 输出彩色")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global color.ui auto\n")])])]),e("h3",{attrs:{id:"设定-用户名-电子邮件地址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设定-用户名-电子邮件地址","aria-hidden":"true"}},[a._v("#")]),a._v(" 设定 用户名/电子邮件地址")]),a._v(" "),e("p",[a._v("如果不添加--global 选项，此设定只对该数据库有效。")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"username"')]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"email"')]),a._v("\n")])])]),e("h3",{attrs:{id:"查看全局的用户名和邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看全局的用户名和邮箱","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看全局的用户名和邮箱")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.name\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.email\n")])])]),e("h3",{attrs:{id:"查看-git-配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-git-配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看 git 配置")]),a._v(" "),e("p",[a._v("在项目的根目录下，输入")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打开 .git 目录")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" .git \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看里面的文件")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 打开 config 文件")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" config\n")])])]),e("h3",{attrs:{id:"给-git-命令起别名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给-git-命令起别名","aria-hidden":"true"}},[a._v("#")]),a._v(" 给 git 命令起别名")]),a._v(" "),e("p",[a._v("简化命令")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias."),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("handle"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("command"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n比如：git status 改成 "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" st，这样可以简化命令\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.st status\n")])])]),e("h3",{attrs:{id:"把不需要用的文件归类到非管理对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把不需要用的文件归类到非管理对象","aria-hidden":"true"}},[a._v("#")]),a._v(" 把不需要用的文件归类到非管理对象")]),a._v(" "),e("p",[a._v("记录为.gitignore 的文件是 Git 的非管理对象，但是需要提交.gitignore 本身。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" .gitignore\n")])])]),e("h2",{attrs:{id:"设定-ssh-连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设定-ssh-连接","aria-hidden":"true"}},[a._v("#")]),a._v(" 设定 SSH 连接")]),a._v(" "),e("p",[a._v("SSH key 可以让你在你的电脑和 Git 远程仓库之间建立安全的加密连接。")]),a._v(" "),e("h3",{attrs:{id:"mac"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac","aria-hidden":"true"}},[a._v("#")]),a._v(" Mac")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("ssh-keygen\n")])])]),e("p",[a._v("接着会显示以下的内容输出，在有需要的地方输入设定验证密码的文字，然后按“Enter”键。")]),a._v(" "),e("p",[a._v("如果不设定验证密码，请不要输入任何文字，直接按“Enter”键即可。")]),a._v(" "),e("p",[a._v("执行下一个命令就可以确认形成SSH键公钥的内容。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" ~/.ssh/id_rsa.pub\n")])])]),e("p",[a._v("接下来，在远程数据库设定公钥。")]),a._v(" "),e("h3",{attrs:{id:"window"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#window","aria-hidden":"true"}},[a._v("#")]),a._v(" window")]),a._v(" "),e("p",[a._v("先下载 cmder 命令行（linux）工具，之后跟 mac 一样的命令行操作即可。")]),a._v(" "),e("h3",{attrs:{id:"git-配置多个-ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-配置多个-ssh-key","aria-hidden":"true"}},[a._v("#")]),a._v(" Git 配置多个 SSH-Key")]),a._v(" "),e("p",[a._v("一般公司用的是 gitlab 提交代码，使用的是公司的用户名和公司的邮箱，而在个人的开源项目中，我们托管于 github，那么这个时候就需要两个 SSH-Key 去登录。")]),a._v(" "),e("h4",{attrs:{id:"查看所有-ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看所有-ssh-key","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看所有 SSH-Key")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" ~/.ssh/\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),e("h4",{attrs:{id:"公司的-gitlab-生成一个-ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公司的-gitlab-生成一个-ssh-key","aria-hidden":"true"}},[a._v("#")]),a._v(" 公司的 GitLab 生成一个 SSH-Key")]),a._v(" "),e("p",[a._v("在"),e("code",[a._v("~/.ssh/")]),a._v("目录会生成"),e("code",[a._v("gitlab_id-rsa")]),a._v("和"),e("code",[a._v("gitlab_id-rsa.pub")]),a._v("私钥和公钥。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('$ ssh-keygen -t rsa -C "xxx@xxx.com" -f ~/.ssh/gitlab_id-rsa\n')])])]),e("p",[a._v("查看你的public key，我们将"),e("code",[a._v("gitlab_id-rsa.pub")]),a._v("中的内容粘帖到公司"),e("code",[a._v("GitLab")]),a._v("服务器的"),e("code",[a._v("SSH-key")]),a._v("的配置中。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 把文件内容打印到命令行工具上，方便复制")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" ~/.ssh/gitlab_id-rsa.pub \n")])])]),e("h4",{attrs:{id:"github-生成一个-ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-生成一个-ssh-key","aria-hidden":"true"}},[a._v("#")]),a._v(" Github 生成一个 SSH-Key")]),a._v(" "),e("p",[a._v("在"),e("code",[a._v("~/.ssh/")]),a._v("目录会生成"),e("code",[a._v("github_id-rsa")]),a._v("和"),e("code",[a._v("github_id-rsa.pub")]),a._v("私钥和公钥。我们将"),e("code",[a._v("github_id-rsa.pub")]),a._v("中的内容粘帖到"),e("code",[a._v("github")]),a._v("服务器的"),e("code",[a._v("SSH-key")]),a._v("的配置中。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v('$ ssh-keygen -t rsa -C "xxxxx@xxxx.com” -f ~/.ssh/github_id-rsa\n')])])]),e("h4",{attrs:{id:"在-ssh-目录下添加config配置文件用于区分多个-ssh-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-ssh-目录下添加config配置文件用于区分多个-ssh-key","aria-hidden":"true"}},[a._v("#")]),a._v(" 在 ~/.ssh 目录下添加"),e("code",[a._v("config")]),a._v("配置文件用于区分多个 SSH-Key")]),a._v(" "),e("p",[a._v("添加 config 配置文件")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("vi")]),a._v(" ~/.ssh/config\n")])])]),e("p",[a._v("设置文件内容如下：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gitlab")]),a._v("\nHost gitlab.com\n  HostName gitlab.com\n  PreferredAuthentications publickey\n  IdentityFile ~/.ssh/gitlab_id-rsa\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# github ")]),a._v("\nHost github.com\n  HostName github.com\n  PreferredAuthentications publickey\n  IdentityFile ~/.ssh/github_id-rsa\n")])])]),e("p",[a._v("配置文件参数：")]),a._v(" "),e("ul",[e("li",[a._v("Host：可以看作是一个你要识别的模式，对识别的模式，进行配置对应的"),e("code",[a._v("主机名")]),a._v("和 "),e("code",[a._v("ssh")]),a._v(" 文件。")]),a._v(" "),e("li",[a._v("HostName: 要登录主机的主机名。")]),a._v(" "),e("li",[a._v("User: 登录名。")]),a._v(" "),e("li",[a._v("IdentityFile: 知指明上面 User 对应的 identityFile 路径。")])]),a._v(" "),e("h4",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试","aria-hidden":"true"}},[a._v("#")]),a._v(" 测试")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ssh")]),a._v(" -T git@github.com\n")])])]),e("p",[a._v("输出：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("Hi Jecyu"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" You've successfully authenticated, but GitHub does not provide shell access.\n")])])]),e("p",[a._v("就表示成功的连上 github 了。也可以试试连接公司的 gitlab。")]),a._v(" "),e("blockquote",[e("p",[a._v("更进一步阅读，了解 SSH  知识：https://segmentfault.com/q/1010000000835302 和 《SSH，The Secure Shell》 书本。")])]),a._v(" "),e("h2",{attrs:{id:"回到远程仓库的状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到远程仓库的状态","aria-hidden":"true"}},[a._v("#")]),a._v(" 回到远程仓库的状态")]),a._v(" "),e("p",[a._v("抛弃本地所有的修改，回到远程仓库的状态。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch --all "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset --hard origin/master\n")])])]),e("h2",{attrs:{id:"展示工作区和暂存区的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示工作区和暂存区的不同","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示工作区和暂存区的不同")]),a._v(" "),e("p",[a._v("输出"),e("strong",[a._v("工作区")]),a._v("和"),e("strong",[a._v("暂存区")]),a._v("的 different(不同)。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v("\n")])])]),e("p",[a._v("还可以展示本地仓库中任意两个 commit 之间的文件变动：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"展示暂存区和最近版本的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区和最近版本的不同","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示暂存区和最近版本的不同")]),a._v(" "),e("p",[a._v("输出"),e("strong",[a._v("暂存区")]),a._v("和本地最近的版本(commit)的 different(不同)。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --cached\n")])])]),e("h2",{attrs:{id:"展示暂存区、工作区和最近版本的不同"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示暂存区、工作区和最近版本的不同","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示暂存区、工作区和最近版本的不同")]),a._v(" "),e("p",[a._v("输出"),e("strong",[a._v("工作区")]),a._v("、"),e("strong",[a._v("暂存区")]),a._v(" 和本地最近的版本(commit)的 different(不同)。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" HEAD\n")])])]),e("h2",{attrs:{id:"操作分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作分支")]),a._v(" "),e("h3",{attrs:{id:"创建并切换到本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换到本地分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建并切换到本地分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"创建并切换到远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换到远程分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建并切换到远程分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" origin/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"删除本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除本地分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("local-branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"删除远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除远程分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除远程分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --delete "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("p",[a._v("或者")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin :"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-branchname"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"重命名本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重命名本地分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 重命名本地分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -m "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("new-branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"快速切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速切换分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 快速切换分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -\n")])])]),e("h3",{attrs:{id:"删除已经合并到-master-的分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除已经合并到-master-的分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除已经合并到 master 的分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch --merged master "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" -v "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'^\\*\\|  master'")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("xargs")]),a._v(" -n "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d\n")])])]),e("h3",{attrs:{id:"展示本地分支关联远程仓库的情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示本地分支关联远程仓库的情况","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示本地分支关联远程仓库的情况")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -vv\n")])])]),e("h3",{attrs:{id:"关联远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关联远程分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 关联远程分支")]),a._v(" "),e("p",[a._v("关联之后，"),e("code",[a._v("git branch -vv")]),a._v("就可以展示关联的远程分支名了，同时推送到远程仓库直接："),e("code",[a._v("git push")]),a._v("，不需要指定远程仓库了。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -u origin/mybranch\n")])])]),e("p",[a._v("或者在 push 时加上"),e("code",[a._v("-u")]),a._v("参数")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin/mybranch -u\n")])])]),e("h3",{attrs:{id:"列出所有远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 列出所有远程分支")]),a._v(" "),e("p",[a._v("-r 参数相当于：remote")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -r\n")])])]),e("h3",{attrs:{id:"合并分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 合并分支")]),a._v(" "),e("p",[a._v("在 git 中合并分支有三种方法，分别是 merge，rebase，cherry-pick，而其中 merge 又有三种区别\nhttps://yanhaijing.com/git/2017/07/14/four-method-for-git-merge/")]),a._v(" "),e("h4",{attrs:{id:"merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#merge","aria-hidden":"true"}},[a._v("#")]),a._v(" merge")]),a._v(" "),e("p",[a._v("如果添加 --no-ff 选项，就是 fast-forward 合并也可以建立合并提交。这是记录分支存在过的非常有用的选项。考虑一下“功能”分支上的一系列次要提交共同构成一个新功能的情况：如果你只是在没有--no-ff的情况下执行“git merge feature_branch”，那么就不可能从Git历史中看到哪一个 提交对象一起实现了一个功能 - 您必须手动读取所有日志消息。好处就是 GUI界面可以直观看到信息。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h4",{attrs:{id:"cherry-pick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick","aria-hidden":"true"}},[a._v("#")]),a._v(" cherry-pick")]),a._v(" "),e("p",[a._v("这命令简直就是神器，给你自由，你想把那个节点 merge 过来就把那个节点 merge 过来，其合入的不是分支而是提交节点")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cherry-pick commitId\n")])])]),a._v(" "),e("h4",{attrs:{id:"rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase","aria-hidden":"true"}},[a._v("#")]),a._v(" rebase")]),a._v(" "),e("blockquote",[e("p",[a._v("rebase 作用简要为：可以对某一段线性提交历史进行编辑、删除、赋值、 粘贴，合理适应 rebase 命令可以让我们的提交历史干净、简介\n注意：不要通过rebase对任何已经提交到公共仓库中的commit进行修改（你自己一个人玩的分支除外）")])]),a._v(" "),e("h5",{attrs:{id:"合并多个-commit-为一个完整的-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并多个-commit-为一个完整的-commit","aria-hidden":"true"}},[a._v("#")]),a._v(" 合并多个 commit 为一个完整的 commit")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase -i "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("startponit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("endpoint"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),e("p",[a._v("其中 -i 意思是 "),e("code",[a._v("--ineractive")]),a._v("，即弹交互式的界面让用户编辑完成合并操作，"),e("code",[a._v("[startponit]")]),a._v(" "),e("code",[a._v("endpoint")]),a._v(" 指定了一个编辑区间。如果不指定 "),e("code",[a._v("[endponit]")]),a._v(" 则该区间的默认是当前分支 "),e("code",[a._v("HEAD")]),a._v(" 所指向的 "),e("code",[a._v("commit")]),a._v(".")]),a._v(" "),e("h5",{attrs:{id:"将某一段-commit-粘贴到另外一个分支上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将某一段-commit-粘贴到另外一个分支上","aria-hidden":"true"}},[a._v("#")]),a._v(" 将某一段 commit 粘贴到另外一个分支上")]),a._v(" "),e("p",[a._v("参考资料："),e("a",{attrs:{href:"https://www.jianshu.com/p/4a8f4af4e803",target:"_blank",rel:"noopener noreferrer"}},[a._v("rebase 用法小结"),e("OutboundLink")],1)]),a._v(" "),e("h4",{attrs:{id:"从其他分支合并指定文件或文件夹"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从其他分支合并指定文件或文件夹","aria-hidden":"true"}},[a._v("#")]),a._v(" 从其他分支合并指定文件或文件夹")]),a._v(" "),e("p",[a._v("功能分为2个分支，分别为A、B。\nA上面有个列表页功能\nB上面有个详情页功能，还有个系统消息功能")]),a._v(" "),e("p",[a._v("产品经理说先上列表功能，于是我们就开发A分支，列表功能很快开发完成。\n第二天按常理开发B分支，开发到一半，产品经理说目前的系统消息功能需要急着上线，要和列表功能一起上线，当时就懵逼了，然后赶紧放下详情页的开发，立马去开发系统消息功能，开发完之后需要将列表功能和系统消息功能放在一个分支上提测，这时候分支合并就派上用场了。")]),a._v(" "),e("p",[a._v("使用git merge 命令进行分支合并是通用的做法，但是git merge 合并的时候会将两个分支的内容完全合并，如果想合并一部分肯定是不行的。那怎么办？")]),a._v(" "),e("p",[a._v("如何从其他分支merge指定文件到当前分支，git checkout 是个合适的工具。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout source_branch "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])])]),e("ul",[e("li",[a._v("强制合并")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch 当前位于 A 分支上\n  * A  \n    B\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在使用git checkout某文件到当前分支时，会将当前分支的对应文件强行覆盖")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout B xxx.html xxx.js\n")])])]),e("ul",[e("li",[a._v("智能合并")])]),a._v(" "),e("ol",[e("li",[a._v("使用git checkout 将根据A分支创建一个A_temp分支，避免影响A分支")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b A_temp\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[a._v("将B分支合并到A_temp分支")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge --no-ff B\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[a._v("切换到A分支，并使用git checkout 将A_temp分支上的系统消息功能相关文件或文件夹覆盖到A分支")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout A\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'A'")]),a._v("\n\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout A_temp message.html message.css message.js other.js\n")])])]),e("h3",{attrs:{id:"列出本地和远程分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出本地和远程分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 列出本地和远程分支")]),a._v(" "),e("p",[a._v("-a 参数相当于：all")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -a\n")])])]),e("h3",{attrs:{id:"以最后提交的顺序列出所有-git-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以最后提交的顺序列出所有-git-分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 以最后提交的顺序列出所有 Git 分支")]),a._v(" "),e("p",[a._v("最新的放在最上面")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" for-each-ref --sort"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-committerdate --format"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'%(refname:short)'")]),a._v(" refs/heads/\n")])])]),e("h2",{attrs:{id:"stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stash","aria-hidden":"true"}},[a._v("#")]),a._v(" stash")]),a._v(" "),e("h3",{attrs:{id:"存储当前的修改，但不用提交-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#存储当前的修改，但不用提交-commit","aria-hidden":"true"}},[a._v("#")]),a._v(" 存储当前的修改，但不用提交 commit")]),a._v(" "),e("p",[a._v("详解可以参考"),e("a",{attrs:{href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000",target:"_blank",rel:"noopener noreferrer"}},[a._v("廖雪峰老师的 git 教程"),e("OutboundLink")],1)]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash\n")])])]),e("h3",{attrs:{id:"展示所有-stashes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-stashes","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示所有 stashes")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash list\n")])])]),e("h3",{attrs:{id:"回到某个-stash-的状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到某个-stash-的状态","aria-hidden":"true"}},[a._v("#")]),a._v(" 回到某个 stash 的状态")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash apply "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("stash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"保存当前状态，包括-untracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#保存当前状态，包括-untracked-的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 保存当前状态，包括 untracked 的文件")]),a._v(" "),e("p",[a._v("untracked 文件：新建的文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash -u\n")])])]),e("h3",{attrs:{id:"回到最后一个-stash-的状态，并删除这个-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到最后一个-stash-的状态，并删除这个-stash","aria-hidden":"true"}},[a._v("#")]),a._v(" 回到最后一个 stash 的状态，并删除这个 stash")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash pop\n")])])]),e("h3",{attrs:{id:"删除所有的-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除所有的-stash","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除所有的 stash")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" stash "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("clear")]),a._v("\n")])])]),e("h3",{attrs:{id:"从-stash-中拿出某个文件的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从-stash-中拿出某个文件的修改","aria-hidden":"true"}},[a._v("#")]),a._v(" 从 stash 中拿出某个文件的修改")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("stash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -- "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"操作标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作标签","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作标签")]),a._v(" "),e("h3",{attrs:{id:"本地创建标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#本地创建标签","aria-hidden":"true"}},[a._v("#")]),a._v(" 本地创建标签")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version-number"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("p",[a._v("默认 tag 是打在最近的一次 commit 上，如果需要指定 commit 打 tag：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -a "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("version-number"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -m "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"v1.0 发布(描述)"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"删除本地标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除本地标签","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除本地标签")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -d "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"查看标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看标签","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看标签")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git tag\n")])])]),e("p",[a._v("展示当前分支的最近的 tag")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" describe --tags --abbrev"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])]),e("h3",{attrs:{id:"推送标签到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送标签到远程仓库","aria-hidden":"true"}},[a._v("#")]),a._v(" 推送标签到远程仓库")]),a._v(" "),e("p",[a._v("首先要保证本地创建好了标签才可以推送标签到远程仓库：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("local-version-number"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("p",[a._v("一次性推送所有标签，同步到远程仓库：")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --tags\n")])])]),e("h3",{attrs:{id:"删除远程标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除远程标签","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除远程标签")]),a._v(" "),e("p",[a._v("删除远程标签需要"),e("strong",[a._v("先删除本地标签")]),a._v("，再执行下面的命令：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin :refs/tags/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("tag-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"切回到某个标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#切回到某个标签","aria-hidden":"true"}},[a._v("#")]),a._v(" 切回到某个标签")]),a._v(" "),e("p",[a._v("一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b branch_name tag_name\n")])])]),e("h2",{attrs:{id:"放弃工作区的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#放弃工作区的修改","aria-hidden":"true"}},[a._v("#")]),a._v(" 放弃工作区的修改")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("p",[a._v("放弃所有修改：")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),e("h2",{attrs:{id:"恢复删除的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#恢复删除的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 恢复删除的文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rev-list -n "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" HEAD -- "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#得到 deleting_commit")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("deleting_commit"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("^ -- "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file_path"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回到删除文件 deleting_commit 之前的状态")]),a._v("\n")])])]),e("h2",{attrs:{id:"改写提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改写提交","aria-hidden":"true"}},[a._v("#")]),a._v(" 改写提交")]),a._v(" "),e("h3",{attrs:{id:"恢复-git-reset-hard-的误操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#恢复-git-reset-hard-的误操作","aria-hidden":"true"}},[a._v("#")]),a._v(" 恢复 git reset --hard 的误操作")]),a._v(" "),e("p",[a._v("有时候使用Git工作得小心翼翼，特别是涉及到一些高级操作，例如 reset, rebase 和 merge。甚至一些很小的操作，例如删除一个分支，我都担心数据丢失。")]),a._v(" "),e("p",[a._v("git的历史记录是不可修改的，也就是说你不能更 改任何已经发生的事情。你做的任何操作都只是在原来的操作上修改。也就是说，即使你删除了一个分支，修改了一个提交，或者强制重置，你仍然可以回滚这些操作。")]),a._v(" "),e("p",[a._v("但是 "),e("code",[a._v("reflog")]),a._v(" 就是用来解决这个问题的。简单的说，它会记录所有HEAD的历史，也就是说当你做 reset，checkout等操作的时候，这些操作会被记录在reflog中。")]),a._v(" "),e("p",[a._v("如果你因为reset等操作丢失一个提交的时候，你总是可以把它找回来。除非你的操作已经被git当做垃圾处理掉了，一般是30天以后。")]),a._v(" "),e("p",[a._v("原文："),e("a",{attrs:{href:"https://www.cnblogs.com/mliudong/archive/2013/04/08/3007303.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("恢复 git reset --hard 的误操作"),e("OutboundLink")],1)]),a._v(" "),e("h3",{attrs:{id:"查看-commit-历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-commit-历史","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看 commit 历史")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log\n")])])]),e("h3",{attrs:{id:"修改最近的提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改最近的提交","aria-hidden":"true"}},[a._v("#")]),a._v(" 修改最近的提交")]),a._v(" "),e("p",[a._v("指定 amend 选项执行提交的话，可以修改同一个分支最近的提交内容和注解")]),a._v(" "),e("p",[a._v("主要使用的场合：")]),a._v(" "),e("ul",[e("li",[a._v("添加最近提交时漏掉的档案")]),a._v(" "),e("li",[a._v("修改最近提交的注解")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend\n")])])]),e("h3",{attrs:{id:"重设第一个-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重设第一个-commit","aria-hidden":"true"}},[a._v("#")]),a._v(" 重设第一个 commit")]),a._v(" "),e("p",[a._v("也就是把所有的改动都重新放回工作区，并"),e("strong",[a._v("清空所有的 commit")]),a._v("，这样就可以重新提交第一个 commit 了")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-ref -d HEAD\n")])])]),e("h3",{attrs:{id:"以新增一个-commit-的方式还原某一个-commit-的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#以新增一个-commit-的方式还原某一个-commit-的修改","aria-hidden":"true"}},[a._v("#")]),a._v(" 以新增一个 commit 的方式还原某一个 commit 的修改")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" revert "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"回到某个-commit-的状态，并删除后面的-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回到某个-commit-的状态，并删除后面的-commit","aria-hidden":"true"}},[a._v("#")]),a._v(" 回到某个 commit 的状态，并删除后面的 commit")]),a._v(" "),e("p",[a._v("和 revert 的区别：reset 命令会抹去某个 commit id 之后的所有 commit")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#默认就是-mixed参数。")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –mixed HEAD^  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –soft HEAD~3  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可  ")]),a._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset –hard "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容")]),a._v("\n")])])]),e("h3",{attrs:{id:"取消过去的提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#取消过去的提交","aria-hidden":"true"}},[a._v("#")]),a._v(" 取消过去的提交")]),a._v(" "),e("h3",{attrs:{id:"提取提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提取提交","aria-hidden":"true"}},[a._v("#")]),a._v(" 提取提交")]),a._v(" "),e("h3",{attrs:{id:"查看某段代码是谁写的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看某段代码是谁写的","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看某段代码是谁写的")]),a._v(" "),e("p",[a._v("blame 的意思为‘责怪’，你懂的。")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" blame "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"显示本地更新过-head-的-git-命令记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#显示本地更新过-head-的-git-命令记录","aria-hidden":"true"}},[a._v("#")]),a._v(" 显示本地更新过 HEAD 的 git 命令记录")]),a._v(" "),e("p",[a._v("每次更新了 HEAD 的 git 命令比如 commint、amend、cherry-pick、reset、revert 等都会被记录下来（不限分支），就像 shell 的 history 一样。\n这样你可以 reset 到任何一次更新了 HEAD 的操作之后，而不仅仅是回到当前分支下的某个 commit 之后的状态。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git reflog\n")])])]),e("h3",{attrs:{id:"修改作者名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改作者名","aria-hidden":"true"}},[a._v("#")]),a._v(" 修改作者名")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend --author"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Author Name <email@address.com>'")]),a._v("\n")])])]),e("h3",{attrs:{id:"把-a-分支的某一个-commit，放到-b-分支上"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把-a-分支的某一个-commit，放到-b-分支上","aria-hidden":"true"}},[a._v("#")]),a._v(" 把 A 分支的某一个 commit，放到 B 分支上")]),a._v(" "),e("p",[a._v("这个过程需要"),e("code",[a._v("cherry-pick")]),a._v("命令，"),e("a",{attrs:{href:"http://sg552.iteye.com/blog/1300713#bc2367928",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考"),e("OutboundLink")],1)]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cherry-pick "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("commit-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"远程数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#远程数据库","aria-hidden":"true"}},[a._v("#")]),a._v(" 远程数据库")]),a._v(" "),e("h3",{attrs:{id:"列出所有远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#列出所有远程仓库","aria-hidden":"true"}},[a._v("#")]),a._v(" 列出所有远程仓库")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote\n")])])]),e("h3",{attrs:{id:"修改远程仓库的-url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改远程仓库的-url","aria-hidden":"true"}},[a._v("#")]),a._v(" 修改远程仓库的 url")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote set-url origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("URL"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"增加远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增加远程仓库","aria-hidden":"true"}},[a._v("#")]),a._v(" 增加远程仓库")]),a._v(" "),e("p",[a._v("通常用于非 clone 的模式，如远程构建好仓库后，本地同时也构建本地的仓库，这时就需要通过下面命令进行关联")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" origin "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-url"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"从远程仓库根据-id，拉下某一状态，到本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从远程仓库根据-id，拉下某一状态，到本地分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 从远程仓库根据 ID，拉下某一状态，到本地分支")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch origin pull/"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("id"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/head:"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"clone-下来指定的单一分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone-下来指定的单一分支","aria-hidden":"true"}},[a._v("#")]),a._v(" clone 下来指定的单一分支")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" --single-branch https://github.com/user/repo.git\n")])])]),e("h2",{attrs:{id:"查看两个星期内的改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看两个星期内的改动","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看两个星期内的改动")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" whatchanged --since"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'2 weeks ago'")]),a._v("\n")])])]),e("h2",{attrs:{id:"展示所有-tracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-tracked-的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示所有 tracked 的文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files -t\n")])])]),e("h2",{attrs:{id:"展示所有-untracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-untracked-的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示所有 untracked 的文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files --others\n")])])]),e("h2",{attrs:{id:"展示所有忽略的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有忽略的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示所有忽略的文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" ls-files --others -i --exclude-standard\n")])])]),e("h2",{attrs:{id:"强制删除-untracked-的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制删除-untracked-的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 强制删除 untracked 的文件")]),a._v(" "),e("p",[a._v("可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的 untracked 文件。"),e("code",[a._v("clean")]),a._v("命令，"),e("strong",[a._v("注意两点")]),a._v("：")]),a._v(" "),e("ol",[e("li",[a._v("clean 后，删除的文件无法找回")]),a._v(" "),e("li",[a._v("不会影响 tracked 的文件的改动，只会删除 untracked 的文件")])]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -f\n")])])]),e("h2",{attrs:{id:"强制删除-untracked-的目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制删除-untracked-的目录","aria-hidden":"true"}},[a._v("#")]),a._v(" 强制删除 untracked 的目录")]),a._v(" "),e("p",[a._v("可以用来删除新建的目录，"),e("strong",[a._v("注意")]),a._v(":这个命令也可以用来删除 untracked 的文件。详情见上一条")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("directory-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -df\n")])])]),e("h2",{attrs:{id:"展示简化的-commit-历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示简化的-commit-历史","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示简化的 commit 历史")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("oneline --graph --decorate --all\n")])])]),e("h2",{attrs:{id:"把某一个分支到导出成一个文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把某一个分支到导出成一个文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 把某一个分支到导出成一个文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" bundle create "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"从包中导入分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从包中导入分支","aria-hidden":"true"}},[a._v("#")]),a._v(" 从包中导入分支")]),a._v(" "),e("p",[a._v("新建一个分支，分支内容就是上面"),e("code",[a._v("git bundle create")]),a._v("命令导出的内容")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone repo.bundle "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("repo-dir"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" -b "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"执行-rebase-之前自动-stash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行-rebase-之前自动-stash","aria-hidden":"true"}},[a._v("#")]),a._v(" 执行 rebase 之前自动 stash")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rebase --autostash\n")])])]),e("h2",{attrs:{id:"查看-git-fetch-之后的文件更改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看-git-fetch-之后的文件更改","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看 git fetch 之后的文件更改")]),a._v(" "),e("p",[a._v("查看 commit j 记录")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log origin/master ^master\n")])])]),e("p",[a._v("如果你只是想看看如果你使用 "),e("code",[a._v("git pull")]),a._v("，会修改哪些文件，那么就这样做")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" HEAD @"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("u"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" --name-only\n")])])]),e("p",[a._v("如果您想查看当前版本和即将到来的版本之间的所有差异，包括未提交的本地修改，请键入以下内容")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" @"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("u"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" --name-only\n")])])]),e("h2",{attrs:{id:"详细展示一行中的修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#详细展示一行中的修改","aria-hidden":"true"}},[a._v("#")]),a._v(" 详细展示一行中的修改")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --word-diff\n")])])]),e("h2",{attrs:{id:"清除-gitignore-文件中记录的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#清除-gitignore-文件中记录的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 清除 gitignore 文件中记录的文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clean -X -f\n")])])]),e("h2",{attrs:{id:"展示所有-alias-和-configs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示所有-alias-和-configs","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示所有 alias 和 configs")]),a._v(" "),e("p",[e("strong",[a._v("注意：")]),a._v(" config 分为：当前目录（local）和全局（golbal）的 config，默认为当前目录的 config")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --local --list "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("当前目录"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global --list "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("全局"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),e("p",[a._v("让 git 记录不忽视大小写，避免驼峰命名更改没变化。")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global core.ignorecase "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n")])])]),e("h2",{attrs:{id:"展示忽略的文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示忽略的文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示忽略的文件")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status --ignored\n")])])]),e("h2",{attrs:{id:"commit-历史中显示-branch1-有的，但是-branch2-没有-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-历史中显示-branch1-有的，但是-branch2-没有-commit","aria-hidden":"true"}},[a._v("#")]),a._v(" commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log Branch1 ^Branch2\n")])])]),e("h2",{attrs:{id:"在-commit-log-中显示-gpg-签名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-commit-log-中显示-gpg-签名","aria-hidden":"true"}},[a._v("#")]),a._v(" 在 commit log 中显示 GPG 签名")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --show-signature\n")])])]),e("h2",{attrs:{id:"新建并切换到新分支上，同时这个分支没有任何-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新建并切换到新分支上，同时这个分支没有任何-commit","aria-hidden":"true"}},[a._v("#")]),a._v(" 新建并切换到新分支上，同时这个分支没有任何 commit")]),a._v(" "),e("p",[a._v("相当于保存修改，但是重写 commit 历史")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout --orphan "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"展示任意分支某一文件的内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展示任意分支某一文件的内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 展示任意分支某一文件的内容")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" show "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(":"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"忽略某个文件的改动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略某个文件的改动","aria-hidden":"true"}},[a._v("#")]),a._v(" 忽略某个文件的改动")]),a._v(" "),e("p",[a._v("关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git update-index --assume-unchanged path/to/file\n")])])]),e("p",[a._v("恢复 track 指定文件的改动")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("git update-index --no-assume-unchanged path/to/file\n")])])]),e("h2",{attrs:{id:"忽略文件的权限变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件的权限变化","aria-hidden":"true"}},[a._v("#")]),a._v(" 忽略文件的权限变化")]),a._v(" "),e("p",[a._v("不再将文件的权限变化视作改动")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config core.fileMode "),e("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("\n")])])]),e("h2",{attrs:{id:"在-commit-log-中查找相关内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-commit-log-中查找相关内容","aria-hidden":"true"}},[a._v("#")]),a._v(" 在 commit log 中查找相关内容")]),a._v(" "),e("p",[a._v("通过 grep 查找，given-text：所需要查找的字段")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --all --grep"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("'<given-text>'")]),a._v("\n")])])]),e("h2",{attrs:{id:"把暂存区的指定-file-放到工作区中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把暂存区的指定-file-放到工作区中","aria-hidden":"true"}},[a._v("#")]),a._v(" 把暂存区的指定 file 放到工作区中")]),a._v(" "),e("p",[a._v("不添加参数，默认是-mixed")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("file-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h2",{attrs:{id:"强制推送"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制推送","aria-hidden":"true"}},[a._v("#")]),a._v(" 强制推送")]),a._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -f "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("remote-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("branch-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("p",[e("strong",[e("a",{attrs:{href:"#"}},[a._v("⬆ 返回顶部")])])])])},[],!1,null,null,null);t.default=r.exports}}]);