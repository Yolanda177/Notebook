(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{452:function(t,s,a){t.exports=a.p+"assets/img/2021-07-19-16-37-34.f0c4afa3.png"},453:function(t,s,a){t.exports=a.p+"assets/img/2021-02-19-16-51-02.a65e7eb2.png"},454:function(t,s,a){t.exports=a.p+"assets/img/2021-02-19-16-59-39.64dcdb80.png"},455:function(t,s,a){t.exports=a.p+"assets/img/image2.16ea706d.png"},456:function(t,s,a){t.exports=a.p+"assets/img/image3.11cd146b.png"},563:function(t,s,a){"use strict";a.r(s);var n=a(38),e=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"常见问题-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见问题-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见问题 2")]),t._v(" "),n("h2",{attrs:{id:"vue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue","aria-hidden":"true"}},[t._v("#")]),t._v(" vue")]),t._v(" "),n("h3",{attrs:{id:"简单说下-vue-的模版编译原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单说下-vue-的模版编译原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 简单说下 Vue 的模版编译原理")]),t._v(" "),n("p",[t._v("Vue 中的 template 无法被浏览器解析和渲染，所以需要将 template 转换成 render 函数，这个过程就是模版编译")]),t._v(" "),n("p",[n("strong",[t._v("模版编译过程")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("解析模版 parse")]),t._v("：将模版字符串解析成抽象语法树（AST）")]),t._v(" "),n("li",[n("strong",[t._v("优化 optimize")]),t._v("：对 AST 进行静态节点标记，优化静态树(方便在页面重渲染的时候进行 diff 比较时，直接跳过这一些静态节点，优化 runtime 的性能)")]),t._v(" "),n("li",[n("strong",[t._v("生成 generate")]),t._v("：将 AST 转换成 render 函数")])]),t._v(" "),n("h3",{attrs:{id:"vue中的父组件怎么监听子组件的生命周期？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue中的父组件怎么监听子组件的生命周期？","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue中的父组件怎么监听子组件的生命周期？")]),t._v(" "),n("p",[n("strong",[t._v("Vue2")])]),t._v(" "),n("ol",[n("li",[t._v("使用 ref：")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 父组件\nthis.$refs.child.$on('hook:mounted', this.handleChildMounted);\n// 子组件\nmounted() {console.log('子组件已挂载');}\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("子组件在生命周期钩子中触发自定义事件，父组件监听这些事件：\n"),n("code",[t._v('<child @custom-event="handleEvent"/>')])]),t._v(" "),n("li",[t._v("通过 provide 和 inject 实现跨层级组件通信")])]),t._v(" "),n("p",[n("strong",[t._v("Vue3")])]),t._v(" "),n("h3",{attrs:{id:"什么是-mvvm-？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-mvvm-？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是 MVVM ？")]),t._v(" "),n("p",[t._v("MVVM 是指 Model-View-ViewModel")]),t._v(" "),n("ul",[n("li",[t._v("Model 是指数据层，负责管理应用数据和业务逻辑")]),t._v(" "),n("li",[t._v("View 是指视图层，负责管理用户界面和各类 ui 组件，")]),t._v(" "),n("li",[t._v("ViewModel 是指业务逻辑层，负责管理 Model 和 View 之间的通信，作为桥梁连接")])]),t._v(" "),n("p",[t._v("MVVM 模式 是指 在 ViewModel 中有一个 Binder 或 Data-bingding 引擎的东西，处理 View 和 Model 之间的数据同步")]),t._v(" "),n("ul",[n("li",[t._v("我们只需要在 View 的模版上，"),n("strong",[t._v("指令式")]),t._v("声明 View 上的哪部分需要和 Model 的哪一块数据绑定。")]),t._v(" "),n("li",[t._v("当 Model 变化了（比如使用 js 改变数据），Binder 会自动把数据更新到 View")]),t._v(" "),n("li",[t._v("当 View 变化了（比如用户操作界面改变数据），Binder 也会自动把数据更新到 Model")])]),t._v(" "),n("p",[t._v("ViewModel 有两个主要部分：")]),t._v(" "),n("ul",[n("li",[t._v("监听器："),n("strong",[t._v("Observer")]),t._v(" 对所有数据的属性进行监听")]),t._v(" "),n("li",[t._v("解析器："),n("strong",[t._v("Compiler")]),t._v(" 对每个元素节点的指令进行解析，根据指令模版替换数据，绑定相应的更新函数")])]),t._v(" "),n("h3",{attrs:{id:"spa-应用-的首屏优化手段？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spa-应用-的首屏优化手段？","aria-hidden":"true"}},[t._v("#")]),t._v(" SPA 应用 的首屏优化手段？")]),t._v(" "),n("p",[t._v("排查方向：")]),t._v(" "),n("ul",[n("li",[t._v("网络延时问题")]),t._v(" "),n("li",[t._v("资源文件体积过大")]),t._v(" "),n("li",[t._v("资源是否重复请求加载")]),t._v(" "),n("li",[t._v("加载脚本时渲染内容堵塞")])]),t._v(" "),n("p",[t._v("解决：")]),t._v(" "),n("ul",[n("li",[t._v("减小入口文件体积\n"),n("ul",[n("li",[t._v("路由懒加载")]),t._v(" "),n("li",[t._v("TerserPlugin 代码压缩")]),t._v(" "),n("li",[t._v("开启 gzip 文件压缩 compression-webpack-plugin")])])]),t._v(" "),n("li",[t._v("采用 http 缓存策略，设置 cache-control，配合 last-modified 或 etag 响应头")]),t._v(" "),n("li",[t._v("UI 框架按需加载")])]),t._v(" "),n("h3",{attrs:{id:"vue-在实例挂载过程做了什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-在实例挂载过程做了什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue 在实例挂载过程做了什么？")]),t._v(" "),n("p",[t._v("vue 的_init 函数分析 vue 初始化的时序，在"),n("code",[t._v("new Vue()")]),t._v("中，会执行"),n("code",[t._v("this._init()")])]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("beforeCreate")]),t._v(" 前，完成 初始化生命周期、事件系统、 render 方法")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("created")]),t._v(" 前，初始化 inject、props、data、methods 和 provide")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("beforeMount")]),t._v(" 前，完成模板编译，生成 render 函数")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("mounted")]),t._v(" 前，生成 vnode，更新 dom 完成挂载")])])]),t._v(" "),n("hr"),t._v(" "),n("ul",[n("li",[n("p",[t._v("initLifecycle(vm) 初始化生命周期")])]),t._v(" "),n("li",[n("p",[t._v("initEvents(vm) 初始化事件系统")])]),t._v(" "),n("li",[n("p",[t._v("initRender(vm) 初始化 render 方法，例如$createElement")])])]),t._v(" "),n("p",[t._v("--- callHook(vm, 'beforeCreate') ---")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("initInjections(vm) 初始化 inject")])]),t._v(" "),n("li",[n("p",[t._v("initState(vm) 初始化 props、data、methods")])]),t._v(" "),n("li",[n("p",[t._v("initProvide(vm) 初始化 provide")])])]),t._v(" "),n("p",[t._v("--- callHook(vm, 'created') ---")]),t._v(" "),n("ul",[n("li",[t._v("完成模板编译，生成 render 函数")])]),t._v(" "),n("p",[t._v("--- callHook(vm, 'beforeMount') ---")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("生成 vnode")])]),t._v(" "),n("li",[n("p",[t._v("更新 dom 完成挂载")])])]),t._v(" "),n("p",[t._v("--- callHook(vm, 'mounted') ---")]),t._v(" "),n("h3",{attrs:{id:"vue-实例挂载过程发生了什么？（或-vue-init）【第-1-遍】"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-实例挂载过程发生了什么？（或-vue-init）【第-1-遍】","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue 实例挂载过程发生了什么？（或 Vue._init）【第 1 遍】")]),t._v(" "),n("p",[t._v("60 秒")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("在 Vue 的构造函数中，会执行"),n("code",[t._v("this._init(options)")]),t._v(" 函数，依次经历以下过程：")]),t._v(" "),n("p",[t._v("init 初始化处理 "),n("code",[t._v("options")]),t._v(" 的值 --\x3e 调用 "),n("code",[t._v("$mount(vm.$options.el)")]),t._v(" 挂载页面 --\x3e 然后 compile 编译 template ->得到 render 函数 -> 再次调用 "),n("code",[t._v("mount")]),t._v(" 方法，执行 "),n("code",[t._v("mountComponent")]),t._v(" ，实例化"),n("code",[t._v("render Watcher")]),t._v("，调用 "),n("code",[t._v("updateComponent")]),t._v("以及 render 函数生成 vnode -> 然后 "),n("code",[t._v("_update")]),t._v(" 更新 vnode 到 -> 真正的 dom 上。")])]),t._v(" "),n("li",[n("p",[t._v("具体来说，通过生命周期分段：")])])]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("beforeCreate")]),t._v(" 前，完成 初始化生命周期、事件系统、 render 方法")]),t._v(" "),n("ul",[n("li",[t._v("initLifecycle(vm) 初始化生命周期")]),t._v(" "),n("li",[t._v("initEvents(vm) 初始化事件系统")]),t._v(" "),n("li",[t._v("initRender(vm) 初始化 render 方法，例如 $createElement")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("created")]),t._v("前，初始化 inject、props、data、methods 和 provide")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("initInjections(vm) 初始化 inject")])]),t._v(" "),n("li",[n("p",[t._v("initState(vm) 初始化 props、data、methods")])]),t._v(" "),n("li",[n("p",[t._v("initProvide(vm) 初始化 provide")])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("beforeMount")]),t._v("前，完成模板编译，生成 render 函数")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("mounted")]),t._v("前，生成 vnode，通过 patch 更新 dom 完成渲染")])])]),t._v(" "),n("h3",{attrs:{id:"为什么-vue-组件中的-data-必须是个函数？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么-vue-组件中的-data-必须是个函数？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么 Vue 组件中的 data 必须是个函数？")]),t._v(" "),n("ul",[n("li",[t._v("在组件注册的时候，vue 会把这个组件传入的配置存下来，多次生成同一个组件的时候都会从存下来的配置中取值，然后通过 new 创建新的组件实例。")]),t._v(" "),n("li",[t._v("如果这时候 data 为对象 （引用类型的内存地址是一样的） ，那每次生成新的组件实例的 data 都指向了同一个内存区域，这时候其中一个同类型组件值更新了。其余的都会跟着一起更新")]),t._v(" "),n("li",[t._v("解决这个问题需要用函数的形式，这样每次实例化组件都通过 function 创建它们的独立作用域，返回一个新的对象")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("注册组件的本质实际上是建立一个组件构造器的引用，在使用时才会去实例化。也就是生成一个function。\n\n实际上每个组件实例的data都会指向同个引用，所以需要用函数创建它们的独立作用域\n")])])]),n("h3",{attrs:{id:"说一下对-vue-的生命周期的理解？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说一下对-vue-的生命周期的理解？","aria-hidden":"true"}},[t._v("#")]),t._v(" 说一下对 Vue 的生命周期的理解？")]),t._v(" "),n("p",[t._v("Vue 实例从创建到销毁的过程就是生命周期。就像一条流水线：从创建实例、初始化数据、编译模版、挂载 Dom、渲染、更新、卸载等一系列过程")]),t._v(" "),n("p",[n("strong",[t._v("Vue2 生命周期钩子函数")]),t._v("：")]),t._v(" "),n("p",[t._v("beforeCreate > created > beforeMount > mounted > beforeDestory > destroyed")]),t._v(" "),n("ul",[n("li",[t._v("beforeCreate：组件实例被创建，但还未初始化数据、属性、方法")]),t._v(" "),n("li",[t._v("created：组件初始化完毕，各种数据可以使用，常用于异步数据获取")]),t._v(" "),n("li",[t._v("beforeMount：未执行渲染、更新，dom 未创建")]),t._v(" "),n("li",[t._v("mounted：初始化结束，dom 已创建，可用于获取访问数据和 dom 元素")]),t._v(" "),n("li",[t._v("beforeUpdate：更新前，可用于获取更新前各种状态")]),t._v(" "),n("li",[t._v("updated：更新后，所有状态已是最新")]),t._v(" "),n("li",[t._v("beforeDestroy：销毁前，可用于一些定时器或订阅的取消")]),t._v(" "),n("li",[t._v("destroyed：组件已销毁，作用同上")])]),t._v(" "),n("p",[n("strong",[t._v("Vue3 生命周期钩子函数")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("setup()")]),t._v("：Composition API 的入口函数")]),t._v(" "),n("li",[n("strong",[t._v("onBeforeMount()")]),t._v("：在组件挂载之前调用")]),t._v(" "),n("li",[n("strong",[t._v("onMounted()")]),t._v("：在组件挂载完成后调用")]),t._v(" "),n("li",[n("strong",[t._v("onBeforeUpdate()")]),t._v("：在组件更新之前调用")]),t._v(" "),n("li",[n("strong",[t._v("onUpdated()")]),t._v("：在组件更新完成后调用")]),t._v(" "),n("li",[n("strong",[t._v("onBeforeUnmount()")]),t._v("：在组件卸载之前调用")]),t._v(" "),n("li",[n("strong",[t._v("onUnmounted()")]),t._v("：在组件卸载完成后调用")]),t._v(" "),n("li",[n("strong",[t._v("onActivated()")]),t._v("：对于被 Keep-Alive 的组件，当组件被激活时调用")]),t._v(" "),n("li",[n("strong",[t._v("onDeactivated()")]),t._v("：对于被 Keep-Alive 的组件，当组件被停用时调用")])]),t._v(" "),n("h3",{attrs:{id:"父子组件生命周期的执行顺序？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#父子组件生命周期的执行顺序？","aria-hidden":"true"}},[t._v("#")]),t._v(" 父子组件生命周期的执行顺序？")]),t._v(" "),n("p",[t._v("父子组件的生命周期执行顺序为：")]),t._v(" "),n("p",[t._v("1、父 beforeCreate => 父 created => 父 beforeMount")]),t._v(" "),n("p",[t._v("2、=> 子 beforeCreate => 子 created => 子 beforeMount => 子 mounted => 父 mounted")]),t._v(" "),n("p",[t._v("3、=> 父 beforeDestroy => 子 beforeDestroy => 子 destroyed => 父 destroyed")]),t._v(" "),n("h3",{attrs:{id:"数据请求在-created-和-mouted-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据请求在-created-和-mouted-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据请求在 created 和 mouted 的区别?")]),t._v(" "),n("p",[t._v("created 和 mounted 都能拿到实例对象的属性和方法，区别在于 created 是在实例创建完成就调用，此时还没有渲染页面 dom 节点，而 mounted 是在页面 dom 节点渲染完成之后调用，如果把数据放进 mounted 请求 可能会出现页面闪动的情况，建议放在 created 中实现")]),t._v(" "),n("h3",{attrs:{id:"🌟-vue-组件之间的通信方式？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-vue-组件之间的通信方式？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 Vue 组件之间的通信方式？")]),t._v(" "),n("ul",[n("li",[t._v("一般的父子组件可以用 props 和 emit 通信")]),t._v(" "),n("li",[t._v("层级比较深或者兄弟组件可以考虑用 eventBus 或者 vuex")]),t._v(" "),n("li",[t._v("当出现子组件以 slot 方式应用在父组件，或层级很深，可以用 provide/inject")])]),t._v(" "),n("h3",{attrs:{id:"🌟-如果不用-new-vue-的方式如何实现-eventbus？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-如果不用-new-vue-的方式如何实现-eventbus？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 如果不用 new Vue 的方式如何实现 eventBus？")]),t._v(" "),n("p",[t._v("通过 new class 创建一个 EventBus 类，里面用一个变量存储订阅的事件名和方法，实现 vue 里面的 $on 和 $emit 方法，相当于手动实现一个发布订阅的模式")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("EventBus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msgQueues "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventBus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msgQueues"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fn\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msgQueues"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("off")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msgQueues"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("msg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n​"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("`\n")])])]),n("h3",{attrs:{id:"vue-组件和插件有什么区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件和插件有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue 组件和插件有什么区别？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("组件就是将图形和逻辑组合成一个功能的概念。在 Vue 中一个 .vue 文件就可以看作是一个组件")])]),t._v(" "),n("li",[n("p",[t._v("插件通常用来为 "),n("code",[t._v("Vue")]),t._v(" 添加全局功能，比如我们用到的 VueX、VueRouter")])])]),t._v(" "),n("p",[t._v("区别：")]),t._v(" "),n("ul",[n("li",[t._v("编写上，组件通常使用 .vue 单文件格式，而 插件通常是一个 js 文件并暴露 install 方法")]),t._v(" "),n("li",[t._v("注册方式上，组件使用 Vue.component 的方式注册，而插件使用 Vue.use() 的方式")]),t._v(" "),n("li",[t._v("使用场景，组件主要是构成业务模块，而插件主要是对 Vue 功能的扩展")])]),t._v(" "),n("h3",{attrs:{id:"讲一下-vuex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#讲一下-vuex","aria-hidden":"true"}},[t._v("#")]),t._v(" 讲一下 VueX")]),t._v(" "),n("p",[t._v("Vuex 是一个专为 Vue 应用程序开发的"),n("strong",[t._v("状态管理模式")]),t._v("。它采用集中式存储管理应用的所有组件的状态，保证状态以一种可预测的方式发生变化")]),t._v(" "),n("p",[t._v("VueX 实现了一个单向数据流，")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("全局拥有一个 state 存放数据，并通过命名空间 Module 管理，通过 getters 访问（当访问多个 state 可以用 ...mapState）")])]),t._v(" "),n("li",[n("p",[t._v("更改状态的唯一方法是提交 mutation")]),t._v(" "),n("ul",[n("li",[t._v("同步操作：通过 commit mutation 修改数据")]),t._v(" "),n("li",[t._v("异步操作：通过 dispatch Action 再 commit mutation 修改数据")])])])]),t._v(" "),n("h3",{attrs:{id:"computed-和-watch-的区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" computed 和 watch 的区别？")]),t._v(" "),n("ul",[n("li",[t._v("computed 的本质是 computed watcher")]),t._v(" "),n("li",[t._v("watch 的本质是 user watcher")]),t._v(" "),n("li",[t._v("computed 适用于在模版渲染中，某个值是依赖了其他响应式对象或者是计算属性计算而来的；")]),t._v(" "),n("li",[t._v("watch 适用于观测某个值的变化去实现一段复杂的业务逻辑")])]),t._v(" "),n("h3",{attrs:{id:"🌟-keep-alive-组件的使用与普通组件有什么不同？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-keep-alive-组件的使用与普通组件有什么不同？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 Keep-alive 组件的使用与普通组件有什么不同？")]),t._v(" "),n("p",[t._v("keep-alive 的应用场景：当我们不希望组件被重新渲染，并且能够缓存操作页面的时候，可以用 keep-alive 包裹住动态组件")]),t._v(" "),n("p",[t._v("与普通组件的区别：")]),t._v(" "),n("ul",[n("li",[t._v("是一个抽象组件，本身不会渲染 dom，也不会出现在父组件中")]),t._v(" "),n("li",[t._v("当组件在内被切换时，能缓存住不活动的组件实例，而不是销毁它们，当再次回到相同组件时，直接调用 activated 钩子函数而不是 created 函数，也就是说 被 keep-alive 包裹的组件，会多出两个生命周期钩子函数：activated、deactivated")]),t._v(" "),n("li",[t._v("keep-alive 有两个特殊属性：\n"),n("ul",[n("li",[t._v("include：指示哪些组件需要被缓存，根据 name 匹配")]),t._v(" "),n("li",[t._v("exclude：指示哪些组件不需要被缓存，优先级高于 include")])])])]),t._v(" "),n("h3",{attrs:{id:"🌟-vue-的动态组件如何使用？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-vue-的动态组件如何使用？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 vue 的动态组件如何使用？")]),t._v(" "),n("p",[t._v("使用 vue 内置的 component 组件，根据 is 属性值决定哪个组件被渲染")]),t._v(" "),n("h3",{attrs:{id:"🌟-vuerouter-路由原理？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-vuerouter-路由原理？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 VueRouter 路由原理？")]),t._v(" "),n("p",[t._v("VueRouter 是什么？")]),t._v(" "),n("p",[t._v("VueRouter 是一个"),n("strong",[t._v("路由管理器")]),t._v("，而 Vue 的单页面应用是基于路由和组件的。")]),t._v(" "),n("p",[t._v("路由描述了 ：")]),t._v(" "),n("ul",[n("li",[t._v("URL 与 UI 之间的映射关系，")]),t._v(" "),n("li",[t._v("前端通过手动改变 URL，监听 URL 的变化来实现 UI 更新，但不会向后端发起请求")])]),t._v(" "),n("p",[n("strong",[t._v("Vue-Router")]),t._v("提供了两种模式：")]),t._v(" "),n("ul",[n("li",[t._v("hash 模式，地址栏中带有 # 号，使用 "),n("code",[t._v("window.location.hash")]),t._v(" 改变 hash 值， 通过 "),n("code",[t._v("window.onhashchange")]),t._v(" 事件监听 hash 值的变化，重新渲染 routerView，")]),t._v(" "),n("li",[t._v("history 模式，地址栏中没有 # 号，使用 history api，通过监听"),n("code",[t._v("window.onpopstate")]),t._v(" 事件来实现页面组件渲染，"),n("code",[t._v("history.pushState")]),t._v(" 和 "),n("code",[t._v("history.replaceState")]),t._v(" 不会触发 "),n("code",[t._v("window.onpopState")]),t._v(" 事件（只有浏览器的前进后退才会触发 popstate 事件，pushState、replaceState 时需要手动更新 UI）")]),t._v(" "),n("li",[t._v("history 模式的 url 是真实 url，服务器会对 url 文件路径进行资源查找，找不到资源就会返回 404")])]),t._v(" "),n("p",[t._v("VueRouter 提供的路由守卫主要是用来通过跳转或取消的方式守卫导航。路由守卫有三种：全局的、单个路由的、组件的")]),t._v(" "),n("h3",{attrs:{id:"🌟-全局路由守卫使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-全局路由守卫使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 全局路由守卫使用")]),t._v(" "),n("p",[t._v("Vuerouter 提供的路由守卫主要是用来通过跳转或取消的方式守卫导航。路由守卫有三种：全局的、单个路由的、组件的")]),t._v(" "),n("p",[t._v("使用 router.beforeEach 注册")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nrouter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("to"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Login"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isLogin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Login"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("全局守卫接收三个参数：")]),t._v(" "),n("ul",[n("li",[t._v("to：即将要进入的目标 路由对象")]),t._v(" "),n("li",[t._v("from： 当前导航正要离开的 路由对象")]),t._v(" "),n("li",[t._v("next：必须调用来 resolve 钩子")])]),t._v(" "),n("p",[n("strong",[t._v("组件内的守卫")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("beforeRouteEnter(to, from, next)：当守卫执行前，组件实例还没被创建，不能获取 this")]),t._v(" "),n("li",[t._v("beforeRouteUpdate(to, from, next)：组件复用时执行，能访问 this")]),t._v(" "),n("li",[t._v("beforeRouteLeave(to, from, next)：离开该组件时执行，能访问 this")])]),t._v(" "),n("h3",{attrs:{id:"导航解析流程（router）？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导航解析流程（router）？","aria-hidden":"true"}},[t._v("#")]),t._v(" 导航解析流程（Router）？")]),t._v(" "),n("ol",[n("li",[t._v("导航被触发")]),t._v(" "),n("li",[t._v("在失活的组件里面调用 beforeRouteLeave 守卫")]),t._v(" "),n("li",[t._v("调用"),n("em",[t._v("全局的 beforeEach 守卫")])]),t._v(" "),n("li",[t._v("在复用的组件里面调用 beforeRouteUpdate 守卫")]),t._v(" "),n("li",[t._v("在路由配置里面调用 beforeEnter")]),t._v(" "),n("li",[t._v("解析异步路由组件")]),t._v(" "),n("li",[t._v("在被激活的组件里面调用 beforeRouteEnter 守卫")]),t._v(" "),n("li",[t._v("调用"),n("em",[t._v("全局的 beforeResolve 守卫")])]),t._v(" "),n("li",[t._v("导航被确认")]),t._v(" "),n("li",[t._v("调用"),n("em",[t._v("全局的 afterEach 守卫")])]),t._v(" "),n("li",[t._v("触发 DOM 更新")]),t._v(" "),n("li",[t._v("调用 beforeRouteEnter 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入")])]),t._v(" "),n("h3",{attrs:{id:"什么是-nexttick-？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-nexttick-？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是 nextTick ？")]),t._v(" "),n("p",[t._v("将回调推迟到下一个 DOM 更新周期之后执行。在修改数据之后立即使用这个方法，获取更新后的 DOM。")]),t._v(" "),n("p",[t._v("可以理解成：Vue 在更新 DOM 时是异步执行的，当数据发生变化，Vue 将开启一个异步更新队列，视图需要等待队列中所有的数据变化完成后，再进行统一更新")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// html\n<div id="app">{{ message }}</div>\n// vue\nconst vm = new Vue({\n\tel: "#app",\n\tdata: {\n\tmessage: "原始值"\n\t}\n})\n// js 修改 message\nthis.message = "修改后的值1"\nthis.message = "修改后的值2"\nthis.message = "修改后的值3"\nconsole.log(vm.$el.textContent) // 原始值\n\n')])])]),n("p",[t._v("源于 Vue 文档上的解释：Vue 异步执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一个事件循环中发生的所有数据改变。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作非常重要，然后在下一个事件循环 “tick” 中，Vue 刷新队列并执行实际的工作")]),t._v(" "),n("p",[t._v("为什么需要 异步更新？")]),t._v(" "),n("p",[t._v("假如是同步更新，会有以下的情况：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"更新一次"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM 更新一次")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"更新一次"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM 更新两次")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"更新一次"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM 更新三次")]),t._v("\n")])])]),n("p",[t._v("但事实上，我们只需要最后一次更新，而前两次 DOM 更新是可以省略的，我们只需要等待状态都修改好了之后再进行渲染就可以减少一些无用功")]),t._v(" "),n("p",[t._v("在 Vue2 中组件内部使用了 VirtualDOM 进行渲染，也就是说，组件内部实际是不关心哪个状态发生了变化，它只需要计算一次就可以得知哪些节点需要更新，如果改变了 N 个状态，其实只需要发送一个信号就可以将 DOM 更新到最新，比如：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"更新"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Yolanda"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("这里我们分三次改变了三种状态，但实际上 Vue 只会更新渲染一次，因为 VirtualDOM 只需要一次就可以将整个组件的 DOM 更新到最新，它不关心更新信号到底是哪个具体状态发出")]),t._v(" "),n("p",[t._v("如何才能将渲染操作推迟到所有状态都修改完毕呢？很简单，"),n("strong",[t._v("只需要将渲染操作推迟到本轮事件循环的最后或者下一轮事件循环")])]),t._v(" "),n("p",[t._v("也就是说，只需要在本轮事件循环的最后，等待前面更新状态语句都执行完之后，执行一次渲染操作，就可以无视前面各种更新状态的语法，只在最后渲染一次就可以了")]),t._v(" "),n("p",[t._v("Vue 在内部尝试对异步队列使用原生的 "),n("code",[t._v("Promise.then")]),t._v(" 和 "),n("code",[t._v("MessageChannel")]),t._v("，将渲染操作推迟到本轮事件循环的最后，如果执行环境不支持，会采用 "),n("code",[t._v("setTimeout(fn, 0)")]),t._v(" 代替，降级到下一轮。当同一轮事件循环中反复修改状态时，并不会反复向队列中添加相同的渲染操作")]),t._v(" "),n("p",[t._v("源码：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cb"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Function"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" _resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加入到队列中，前面都是执行更新 dom 的函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以执行完更新 dom 的函数，这个 cb 就能拿到最新的 dom 值")]),t._v("\n  callbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nextTick"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行 then 函数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 上锁 多次使用 nextTick 只需要把 cb 放进队列中")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("pending"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pending "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timerFunc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步执行")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("cb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Promise "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      _resolve "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("写一个简单的 nextTick 函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pending "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" callbacks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushCallbacks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  pending "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  callbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  callbacks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("cb")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  callbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("pending"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pending "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flushCallbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果不支持 Promise")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// setTimeout(flushCallbacks, 0)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nPromise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"promise.then1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nextTick"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nPromise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"promise.then2"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"end"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果为：")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start end promise1 nextTick promise2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果将 nextTick 改成使用 setTimeout 则新结果为")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start end promise1 promise2 nextTick")]),t._v("\n")])])]),n("h3",{attrs:{id:"vue-data-中某一个属性的值发生改变后，视图会立即同步执行重新渲染吗？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-data-中某一个属性的值发生改变后，视图会立即同步执行重新渲染吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue data 中某一个属性的值发生改变后，视图会立即同步执行重新渲染吗？")]),t._v(" "),n("p",[n("strong",[t._v("不会")])]),t._v(" "),n("p",[n("strong",[t._v("原因")]),t._v("：Vue 在更新 DOM 时是异步执行的")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("异步更新队列")]),t._v("：当数据发生变化时，Vue 会将更新操作放入一个异步队列中，而不是立即执行")]),t._v(" "),n("li",[n("strong",[t._v("批量更新")]),t._v("：Vue 会等待同一事件循环中所有的数据变化完成，然后统一进行视图更新，这样可以避免不必要的 dom 操作")]),t._v(" "),n("li",[n("strong",[t._v("使用$nextTick")]),t._v("：如果需要在数据变化后进行某些 DOM 操作，可以使用 $nextTick 确保在 DOM 更新完成后执行回调函数")]),t._v(" "),n("li",[n("strong",[t._v("响应性原则")]),t._v("：Vue 通过其响应式系统追踪依赖，当依赖的响应式数据发生变化时，相关的组件和指令会收到通知并进行更新")])]),t._v(" "),n("h3",{attrs:{id:"为什么vm-data-new-value-之后，不能拿到最新的值？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么vm-data-new-value-之后，不能拿到最新的值？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么"),n("code",[t._v("vm.data = 'new value'")]),t._v("之后，不能拿到最新的值？")]),t._v(" "),n("p",[t._v("如果这么写，是不能拿到值的")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new value"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dom"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 旧值，dom异步更新")]),t._v("\n")])])]),n("p",[t._v("更新 dom 是异步的，所以上面写法不能拿到最新的值，所以必须使用 nextTick 来把"),n("code",[t._v("console.log(dom.data)")]),t._v("放到回调队列中后面，也就是 dom 更新函数的后面。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '123'")]),t._v("\n")])])]),n("p",[t._v("vue 为什么要使用异步更新队列？")]),t._v(" "),n("p",[t._v("避免频繁操作 dom，更新 dom")]),t._v(" "),n("p",[t._v("源于 vue 文档上的解释：Vue "),n("strong",[t._v("异步")]),t._v("执行 DOM 更新。只要观察到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据改变。如果同一个 watcher 被多次触发，只会被推入到队列中一次。这种在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作上非常重要。然后，在下一个的事件循环“tick”中(也不一定是下一个事件循环，用了 promise 就是同个循环)，Vue 刷新队列并执行实际 (已去重的) 工作。")]),t._v(" "),n("p",[t._v("当状态发生改变的时候，vue 采用异步执行 dom 更新")]),t._v(" "),n("p",[t._v("有篇文章写得很好，https://github.com/berwin/Blog/issues/22")]),t._v(" "),n("p",[t._v("主要是为了性能优化，减少无用的 dom 更新，例如")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("如果是每次数据改变，都要去更新 dom 的话，成本太高，其实用户要的只是最后一次更新，所以在同步任务中去用缓冲队列处理，然后通过异步来更新 dom。")]),t._v(" "),n("p",[t._v("Vue 优先将渲染操作推迟到本轮事件循环的最后，如果执行环境不支持会降级到下一轮")]),t._v(" "),n("p",[t._v("当同一轮事件循环中反复修改状态时，并不会反复向队列中添加相同的渲染操作，也就是 render watcher")]),t._v(" "),n("h3",{attrs:{id:"v-if-和-v-show-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-show-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" v-if 和 v-show 的区别")]),t._v(" "),n("p",[t._v("这两者的区别主要是：")]),t._v(" "),n("ul",[n("li",[t._v("控制手段：v-show 隐藏是通过为元素添加 css 属性 display:none ，dom 元素依然存在；v-if 隐藏则是将 元素整个删除")]),t._v(" "),n("li",[t._v("编译过程：v-if 切换会有一个局部编译或卸载的过程，即销毁或重建内部的事件监听和子组件；v-show 切换只是简单的 css 属性变化；v-if 由 false 变 true 会触发组件的生命周期钩子 而 v-show 不会")]),t._v(" "),n("li",[t._v("性能消耗：v-if 有更高的切换消耗，v-show 有更高的初始渲染消耗")]),t._v(" "),n("li",[t._v("如果需要频繁地切换，建议使用 v-show；如果运行时条件很少变化，建议使用 v-if")])]),t._v(" "),n("p",[t._v("再深入点说的话：")]),t._v(" "),n("ul",[n("li",[t._v("v-if 会调用 addIfCondition 方法，生成 vnode 的时候会忽略对应节点，render 的时候就不会渲染")]),t._v(" "),n("li",[t._v("v-show 会生成 vnode，render 的时候会渲染成真实节点，只是 render 过程中会在节点的属性中修改 style 值")])]),t._v(" "),n("h3",{attrs:{id:"v-if-和-v-for-的优先级是什么？为什么不建议在-v-for-中使用-v-if-？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-for-的优先级是什么？为什么不建议在-v-for-中使用-v-if-？","aria-hidden":"true"}},[t._v("#")]),t._v(" v-if 和 v-for 的优先级是什么？为什么不建议在 v-for 中使用 v-if ？")]),t._v(" "),n("ul",[n("li",[t._v("v-if 指令是指条件的渲染内容")]),t._v(" "),n("li",[t._v("v-for 指令是指基于一个数组渲染一个列表")])]),t._v(" "),n("p",[t._v("在 vue 模版编译时，会将指令系统转化成可执行的 render 函数")]),t._v(" "),n("p",[t._v("从 vue 源码的 genElement 函数可以知道 v-for 的优先级比 v-if 高（vue2中）")]),t._v(" "),n("p",[t._v("vue3中， v-if 的优先级被提高，高于 v-for")]),t._v(" "),n("p",[t._v("至于为什么不建议把 v-if 和 v-for 一起使用，")]),t._v(" "),n("p",[t._v("是因为会带来性能浪费==>每次渲染前都会先循环再进行条件判断")]),t._v(" "),n("h3",{attrs:{id:"说一下编译、渲染和更新过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说一下编译、渲染和更新过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 说一下编译、渲染和更新过程")]),t._v(" "),n("p",[t._v("首先使用 parse 函数 将模版抽象为 AST 语法树，然后使用 optimize 函数遍历语法树，做静态标记目的是优化响应式性能，然后通过 generate 函数将语法树转换成 render function string")]),t._v(" "),n("p",[t._v("首先谈下编译：")]),t._v(" "),n("p",[t._v("模板解析为 AST，优化 AST，将 AST 转化成 render function string，也就对应着 parse、optimize、generate 函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" createCompiler "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCompilerCreator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("baseCompile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("template"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CompilerOptions")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CompiledResult "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ast "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("optimize "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("optimize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" code "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ast"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ast"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    render"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    staticRenderFns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("staticRenderFns\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("strong",[t._v("parse")])]),t._v(" "),n("p",[t._v("生成 ast")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型")]),t._v("\n    type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签")]),t._v("\n    tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性列表")]),t._v("\n    attrsList"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性映射")]),t._v("\n    attrsMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeAttrsMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attrs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父节点")]),t._v("\n    parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 子节点")]),t._v("\n    children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("optimize")])]),t._v(" "),n("p",[t._v("遍历递归每个 ast 节点，标记静态的节点，这些节点是不需要 diff 的")]),t._v(" "),n("p",[n("strong",[t._v("generate")])]),t._v(" "),n("p",[t._v("接收 ast，把 ast 转换成 render 字符串函数，比如"),n("code",[t._v("_c('div', [_c('span')])")])]),t._v(" "),n("p",[t._v("执行 render 函数，生成 vnode，挂载到 dom 上")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("updateComponent")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("_update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hydrating"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nvm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("_update")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$el "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__patch__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prevVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 挂载dom")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("顺便看看$forceUpdate")]),t._v(" "),n("p",[t._v("原来$forceUpdate 只会让当前组件的 render watcher 更新，仅仅影响实例本身和插入插槽内容的子组件，而不是所有子组件。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("$forceUpdate")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Component "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_watcher"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    vm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_watcher"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("更新过程")]),t._v(" "),n("p",[t._v("数据改变，"),n("code",[t._v("watcher.run")]),t._v(" -> "),n("code",[t._v("updateComponent")]),t._v(" -> "),n("code",[t._v("vm._update(_vm.render())")]),t._v(" -> "),n("code",[t._v("vm.__patch__")]),t._v(" -> diff vnode -> 更新视图")]),t._v(" "),n("h3",{attrs:{id:"vue-的双向绑定原理？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-的双向绑定原理？","aria-hidden":"true"}},[t._v("#")]),t._v(" Vue 的双向绑定原理？")]),t._v(" "),n("p",[n("strong",[t._v("1、什么是双向绑定？")])]),t._v(" "),n("ul",[n("li",[t._v("Vue 的双向绑定是指 数据和视图 之间的实时同步：数据变化自动更新视图、用户在视图操作会自动更新数据")]),t._v(" "),n("li",[t._v("核心是通过 v-model 指令实现，常用于表单控件")])]),t._v(" "),n("p",[n("strong",[t._v("2、原理？")])]),t._v(" "),n("ol",[n("li",[t._v("数据劫持")])]),t._v(" "),n("ul",[n("li",[t._v("Vue 通过 "),n("strong",[t._v("响应式数据")]),t._v(" 实现双向绑定")]),t._v(" "),n("li",[t._v("Vue2 使用 Object.defineProperty，Vue3 使用更高效的 Proxy\n"),n("ul",[n("li",[t._v("Vue2 会在初始化时劫持每个对象的每个属性，通过 getter 和 setter 监听数据变化；当数据发生变化时触发依赖收集，通知视图更新")]),t._v(" "),n("li",[t._v("Vue3 使用 Proxy 包装整个对象，可以监听动态添加的属性以及更深层次的嵌套")])])])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("数据到视图的更新")])]),t._v(" "),n("ul",[n("li",[t._v("Vue 会为每个响应式属性创建 "),n("strong",[t._v("依赖收集")]),t._v(" （Dep）")]),t._v(" "),n("li",[t._v("数据发生变化时，会通知依赖收集里面所有的 "),n("strong",[t._v("Watcher")]),t._v("，执行更新函数，最终触发 DOM 更新渲染")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("视图到数据的更新")])]),t._v(" "),n("ul",[n("li",[t._v("通过 v-model 指令监听表单控件的事件（比如 input、change）")]),t._v(" "),n("li",[t._v("用户操作会触发事件处理器，修改绑定的数据")])]),t._v(" "),n("p",[t._v("vue 的双向绑定是通过"),n("strong",[t._v("数据劫持")]),t._v("和"),n("strong",[t._v("观察者模式")]),t._v("来实现的，Vue 提供了一个 Observer 类，这个类的目的是将数据变成响应式对象，利用了 Object.defineProperty() 方法遍历递归对象的属性，对每个属性的 getter、setter 方法进行改写。在数据读取，也就是 getter 阶段，会进行"),n("strong",[t._v("依赖收集")]),t._v("，在数据改写，也就是 setter 阶段，会进行"),n("strong",[t._v("依赖更新")])]),t._v(" "),n("ul",[n("li",[t._v("依赖收集就是订阅数据变化的 watcher 的收集，当这些响应式数据发生变化，触发了它们的 setter 时，应该通知哪些订阅者去做相应的逻辑处理")]),t._v(" "),n("li",[t._v("派发更新是当数据发生改变后，通知所有的订阅这个数据变化的 watcher 执行 update，会把所有要执行的 update 的 watcher 推入到队列中，在 nextTick 后执行 flush")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(452),alt:""}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("双向绑定由三个部分构成：\n\n- Mode 数据层\n- View 视图层\n- ViewModel 业务逻辑层\n\n专业名称为 MVVM 框架，核心功能是“数据双向绑定”，意思就是数据更新后更新视图，视图变化后更新数据\n")])])]),n("h3",{attrs:{id:"如何实现双向绑定？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何实现双向绑定？","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何实现双向绑定？")]),t._v(" "),n("ol",[n("li",[t._v("new Vue() 初始化时，会对 data 执行响应式处理，这个过程发生在 Observe")]),t._v(" "),n("li",[t._v("同时，对模版进行编译，找到其中动态绑定的数据，从 data 中获取并初始化视图，这个过程发生在 Compile")]),t._v(" "),n("li",[t._v("定义一个更新函数和 Watcher，将来数据变化时，Watcher 会调用更新函数")]),t._v(" "),n("li",[t._v("因为 data 中的 key 可以在视图中出现多次，所以每个 key 都需要一个管家 Dep 管理多个 Watcher")]),t._v(" "),n("li",[t._v("以后，data 中的数据一旦发生变化，会先找到对应的 Dep，通知所有的 Watcher 执行更新函数")])]),t._v(" "),n("h3",{attrs:{id:"vue3的响应式原理？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue3的响应式原理？","aria-hidden":"true"}},[t._v("#")]),t._v(" vue3的响应式原理？")]),t._v(" "),n("ol",[n("li",[t._v("依赖收集")]),t._v(" "),n("li",[t._v("依赖更新")])]),t._v(" "),n("p",[n("strong",[t._v("如何实现自动操作track和trigger？")])]),t._v(" "),n("p",[n("strong",[t._v("vue2")]),t._v("使用 es5 的 Object.defineProperty() 实现\n"),n("strong",[t._v("vue3")]),t._v("使用 es6 的 Proxy 和 Reflect 实现")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 初始化 targetMap 保存多个观察对象，每个对象作为单独的key")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" targetMap "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" activeEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("effect")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("eff")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  activeEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" eff\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("activeEffect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  activeEffect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 收集依赖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("track")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("activeEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" depsMap "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" targetMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("depsMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果未保存过当前对象key，则添加观察对象作为key，值为待补充的map")]),t._v("\n    targetMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("depsMap "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dep "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" depsMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果该map无该属性的key键（值为副作用）")]),t._v("\n    depsMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dep "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("activeEffect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 执行指定对象的指定属性的所有副作用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("trigger")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" depsMap "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" targetMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("depsMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dep "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" depsMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n  dep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("effect")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("effect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4 响应式处理")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("reactive")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("target")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 封装统一处理函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" handler "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'正在读取的数据：'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("track")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自动调用 track 方法收集依赖")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'正在修改的数据：'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("',值为：'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oldValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Reflect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" receiver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trigger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 自动调用 trigger 方法执行依赖")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 统一调用 proxy 函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" product "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" price"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" quantity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" total "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const effect = () => { total  = product.price * product.quantity }")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("total: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("total"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total: 0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("effect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("total "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" product"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("quantity"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("total: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("total"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total: 20")]),t._v("\nproduct"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("total: ")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("total"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// total: 40")]),t._v("\n")])])]),n("h3",{attrs:{id:"实现-vue3-的-ref-函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现-vue3-的-ref-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现 vue3 的 ref 函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式1 实现一个 ref")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ref")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("initialValue")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reactive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("initialValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" testRef "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testRef"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方式2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ref2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("raw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" r "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("track")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" raw\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("newValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      raw "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("trigger")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" r\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" testRef2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("testRef2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"实现-vue3-的-computed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现-vue3-的-computed","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现 vue3 的 computed")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("\n")])])]),n("h3",{attrs:{id:"实现一个简单的响应式系统"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现一个简单的响应式系统","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现一个简单的响应式系统")]),t._v(" "),n("p",[t._v("步骤：")]),t._v(" "),n("ul",[n("li",[t._v("引入一个 Observer 类，将数据变成响应式，利用 Object.defineProperty() 对属性的 getter、setter 改写")]),t._v(" "),n("li",[t._v("在数据读取 getter 阶段进行依赖收集、在数据改写 setter 阶段进行依赖更新")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyVue")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("inieData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("options")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将数据重置 getter、setter")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Observer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Observer")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例化时，执行 walk 对每个属性改写 getter、setter")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("walk")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("walk")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" keys "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" keys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Object.defineProperty 处理")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineReactive")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keys"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("依赖本身 Watcher")])]),t._v(" "),n("p",[n("strong",[t._v("依赖管理 Dep")])]),t._v(" "),n("p",[n("strong",[t._v("依赖管理过程 defineReactive")])]),t._v(" "),n("h3",{attrs:{id:"说一下-object-defineproperty-的缺陷"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说一下-object-defineproperty-的缺陷","aria-hidden":"true"}},[t._v("#")]),t._v(" 说一下 Object.defineProperty 的缺陷")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("无法监听通过下标方式修改数组和对象新增属性")])]),t._v(" "),n("li",[n("p",[t._v("数组是通过改变数组的原型链，然后重写'push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'这几个方法实现派发更新")])]),t._v(" "),n("li",[n("p",[t._v("可以使用 this.$set 来解决这类问题")])])]),t._v(" "),n("h3",{attrs:{id:"vue-3-为什么用-proxy-api-代替-vue2-的-defineproperty-api？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-为什么用-proxy-api-代替-vue2-的-defineproperty-api？","aria-hidden":"true"}},[t._v("#")]),t._v(" vue 3 为什么用 proxy API 代替 vue2 的 defineProperty API？")]),t._v(" "),n("p",[t._v("响应式优化")]),t._v(" "),n("ul",[n("li",[t._v("defineProperty API 的局限性是它只能针对单个属性做监听，无法监听通过下标方式修改数组和对象新增属性，我们在 vue2 中监听整个对象，实际上是 defineProperty 对属性做了遍历递归，重新定义了每个属性的 getter 和 setter 方法")]),t._v(" "),n("li",[t._v("Proxy API 的监听是针对一个对象的，那么对这个对象的所有操作会直接进入监听操作")]),t._v(" "),n("li",[t._v("Proxy API 实现的响应式是惰性的，它的处理是在 getter 中递归响应式，所以只有对象在访问到才会变成响应式；而 defineProperty 劫持对象内部深层次的变化，需要递归遍历整个对象，将每一层的数据都变成响应式，会有很大的性能消耗")])]),t._v(" "),n("p",[t._v("监测数组的时候可能触发多次 get/set，如何防止触发多次呢？")]),t._v(" "),n("p",[t._v("答：可以判断 key 是否为当前被代理对象 target 的自身属性，也可以判断旧值和新值是否相等，只有满足以上两个条件之一，才有可能执行 trigger")]),t._v(" "),n("h3",{attrs:{id:"vue3的diff算法过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue3的diff算法过程","aria-hidden":"true"}},[t._v("#")]),t._v(" vue3的diff算法过程")]),t._v(" "),n("p",[t._v("vue 里面 diff 算法主要用来比较虚拟 DOM 的新旧节点数，找到需要更新的部分，然后高效的更新真实 DOM")]),t._v(" "),n("p",[t._v("过程：")]),t._v(" "),n("ol",[n("li",[t._v("头部对比（从头到尾）：依次比较新旧节点的头部，直到遇到不匹配的节点")]),t._v(" "),n("li",[t._v("尾部对比（从尾到头）：依次比较新旧节点的尾部，直到遇到不匹配的节点")]),t._v(" "),n("li",[t._v("头部交叉对比（头对尾，尾对头）：如果经过1、2无法完全匹配，会尝试节点的头尾交叉对比")]),t._v(" "),n("li",[t._v("中间区域的最小编辑距离：找到中需要移动或替换的节点，使用最长递增子序列算法来减少 DOM 的操作次数")])]),t._v(" "),n("p",[t._v("核心优化点：")]),t._v(" "),n("ol",[n("li",[t._v("静态标记优化：vue3会在编译阶段标记静态节点，diff时跳过不需要比较的部分")]),t._v(" "),n("li",[t._v("最长递增子序列算法结合：在处理中间未匹配节点时，Vue 会通过 LIS 算法来减少节点的移动")]),t._v(" "),n("li",[t._v("双端比较策略：通过双端比较快速定位需要更新的区域")])]),t._v(" "),n("p",[t._v("举例：")]),t._v(" "),n("p",[t._v("旧节点：[A, B, C, D]\n新节点：[B, A, E, D]")]),t._v(" "),n("ol",[n("li",[t._v("头部对比：A != B 停止头部比较")]),t._v(" "),n("li",[t._v("尾部对比：D = D，尾部索引往前移动")]),t._v(" "),n("li",[t._v("中间区域比较：剩余部分 [B, C] 和 [B, A, E]，计算最小更新路径==> 标记需要移动的 A 和 新增的 E，B保持不动")]),t._v(" "),n("li",[t._v("DOM 操作：移动节点 A，插入新节点 E")])]),t._v(" "),n("h3",{attrs:{id:"diff-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法","aria-hidden":"true"}},[t._v("#")]),t._v(" diff 算法")]),t._v(" "),n("p",[t._v("diff 算法 是一种通过同层树节点进行比较的高效算法，特点是：")]),t._v(" "),n("ul",[n("li",[t._v("比较只会在同层级比较，不会跨层级比较")]),t._v(" "),n("li",[t._v("在 diff 比较过程中，循环从两边向中间比较")])]),t._v(" "),n("p",[t._v("应用：在 Vue 中，作用于 虚拟 DOM 渲染成真实 DOM 的新旧 VNode 节点比较")]),t._v(" "),n("h3",{attrs:{id:"为什么要使用-diff-算法？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要使用-diff-算法？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么要使用 diff 算法？")]),t._v(" "),n("p",[t._v("减少 dom 的更新量，找到最小差异部分的 dom，就是尽可能的复用旧节点，最后只更新新的部分即可，减少节点 dom 的新增和删除等操作")]),t._v(" "),n("p",[n("strong",[t._v("diff 比较过程")])]),t._v(" "),n("p",[t._v("在 diff 过程中，首先需要判断两个节点是否是相同类型的节点，用 "),n("strong",[t._v("sameVnode")]),t._v(" 方法：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key 值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标签类型")]),t._v("\n    a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isComment "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否为注释节点")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否都定义了 data")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameInputType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当标签类型为 input 时，type 必须相同")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isAsyncPlaceholder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asyncFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asyncFactory "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isUndef")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("asyncFactory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("看看 patch 函数，也就是"),n("code",[t._v("Vue.prototype.__patch__")]),t._v("，源码"),n("code",[t._v("core/vdom/patch.js")])]),t._v(" "),n("p",[t._v("源码太长，精简一下")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElm")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeVnodes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("elm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("patch")]),t._v(" 函数 分为三个流程：")]),t._v(" "),n("ol",[n("li",[t._v("没有旧节点，直接全部新建")]),t._v(" "),n("li",[t._v("旧节点和新节点自身一样，则比较它们的的子节点")]),t._v(" "),n("li",[t._v("旧节点和新节点不一样，则创建新节点，删除旧节点")])]),t._v(" "),n("p",[t._v("当我们确定两个节点值得比较后(sameVnode)，会对两个节点执行 patchVnode 方法")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldCh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTextContent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateEle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldCh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" oldCh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//create el's children dom")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("patchVnode")]),t._v(" 函数做了以下工作：")]),t._v(" "),n("ul",[n("li",[t._v("找到对应的真实 dom，称为 el")]),t._v(" "),n("li",[t._v("判断 Vnode 和 oldVnode 是否指向同一个对象，如果是直接 return")]),t._v(" "),n("li",[t._v("如果它们都有文本节点且不相等，则将 el 的文本节点设为 Vnode 的文本节点")]),t._v(" "),n("li",[t._v("如果 oldVnode 有子节点 而 Vnode 没有，则删除 el 子节点")]),t._v(" "),n("li",[t._v("如果 oldVnode 没有子节点 而 Vnode 有，则将 Vnode 的子节点真实化后添加到 el")]),t._v(" "),n("li",[t._v("如果两者都有子节点，则执行 updateChildren 函数 比较子节点")])]),t._v(" "),n("p",[n("strong",[t._v("updateChildren")]),t._v(" 函数，循环对比：")]),t._v(" "),n("p",[t._v("简单概况就是：")]),t._v(" "),n("ol",[n("li",[t._v("先找不需要移动的相同节点，比如新头旧头、新尾旧尾，消耗最小")]),t._v(" "),n("li",[t._v("再找节点相同但需要移动的节点，比如新头旧尾、新尾旧头、单个查找，消耗第二小")]),t._v(" "),n("li",[t._v("最后找不到，新建删除节点，保底处理")])]),t._v(" "),n("p",[t._v("再细说下：")]),t._v(" "),n("ol",[n("li",[t._v("新头旧头比较、新尾旧尾比较，如果一样则不移动")]),t._v(" "),n("li",[t._v("旧头和新尾比较，一样则操作 dom，把旧头移动尾部")]),t._v(" "),n("li",[t._v("旧尾和新头比较，一样则操作 dom，把旧尾移动头部")]),t._v(" "),n("li",[t._v("拿新节点到旧节点数组中遍历，存在 sameVnode 为 true 就移动旧节点，不存在就新建节点")]),t._v(" "),n("li",[t._v("如果新旧节点都有 key，那么会根据旧节点的 key 生成一个 hash 表，用新节点的 key 与 hash 表做匹配，匹配成功则判断是否为 sameVnode，满足 true 则进行 patchVnode，不满足则新建节点")]),t._v(" "),n("li",[t._v("如果新节点遍历完了，旧节点还有剩余，就让 dom 逐个删除旧节点")]),t._v(" "),n("li",[t._v("如果旧节点遍历完了，新节点还有剩余，全部新建节点")])]),t._v(" "),n("p",[t._v("这样 diff 的原因，是为更高效找到和新节点一样的旧节点，然后只需要移动位置，避免了大量的创建或删除 dom")]),t._v(" "),n("p",[t._v("参考文章")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/81752104",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://zhuanlan.zhihu.com/p/81752104"),n("OutboundLink")],1)]),t._v(" "),n("p",[n("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/v2/reactive/component-update.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://ustbhuangyi.github.io/vue-analysis/v2/reactive/component-update.html"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"为什么需要用-key？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要用-key？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么需要用 key？")]),t._v(" "),n("p",[t._v("key 的主要作用是为了高效的更新虚拟 DOM，原理是 Vue 在 patch 过程中，sameNode 函数有一项是通过 key 判断两个节点是否是同一个，从而避免频繁地更新不同的元素。如果没有 key 相当于全部组件节点都要重新创建和销毁，有了 key 如果新旧节点一样，最多只是移动位置，可以让整个 patch 过程更加高效，减少 dom 操作，提高性能")]),t._v(" "),n("h3",{attrs:{id:"为什么不要用索引-index、随机数当-key？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么不要用索引-index、随机数当-key？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么不要用索引 index、随机数当 key？")]),t._v(" "),n("p",[t._v("答：对性能上的优化有影响，需要分情况讨论：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("如果渲染数组的顺序颠倒(reverse 方法)，index 值虽然不会改变，但节点内容变化了，如果是纯标签 li 这种，vue 就会直接改变元素内容，但如果是组件，有 props 的情况下，diff 过程会发现 props 的改变，然后触发组件视图的重新渲染，必然会导致 dom 的操作")])]),t._v(" "),n("li",[n("p",[t._v("如果是数组[1,2,3] 中插入一个值，变成[1,4,2,3]，那么之前的 2，3 索引 key 值就会从 1，2 变成 2，3，key 变化了，sameVnode 肯定为 false，本来只需要新建一个组件，现在变成新建三个，更新成本增加了")])]),t._v(" "),n("li",[n("p",[t._v("如果是数组[1,2,3] 使用 slice(0,1) 删除了第一个节点，那么之前的索引 key 从 0，1，2 变成 0，1，经过 vue 的比较，因为 key 都有 0，1 会认为前面两个节点都没有变，变的是少了 key 为 2 的节点，也就是最后一个，所以前面两个节点直接复用，把最后一个节点删了（如果是单纯的文本节点，patchVnode 会直接更新 dom，察觉不到 页面是删除最后一个节点，如果不是文本节点，就会有明显问题）")]),t._v(" "),n("div",{staticClass:"language-vue extra-class"},[n("pre",{pre:!0,attrs:{class:"language-vue"}},[n("code",[t._v("// 非文本节点\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-for")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("(val, idx) in arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":key")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("idx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("comp")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":val")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("idx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n// 单纯文本节点\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-for")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("(val, idx) in arr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":key")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("idx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{idx}}"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])]),t._v(" "),n("p",[t._v("随机数的情况")]),t._v(" "),n("p",[t._v("用随机数的话，这样新旧 vnode 的 key 全都不一样，很尴尬，vue 直接判断全都不是 sameVnode，全部重头再来~")]),t._v(" "),n("h3",{attrs:{id:"虚拟-dom-是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟-dom-是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 虚拟 DOM 是什么？")]),t._v(" "),n("p",[t._v("虚拟 dom 本质上就是用 js 对象描述 dom 节点，在 vue 中就是用 vnode 来描述")]),t._v(" "),n("p",[t._v("比如一个 vnode 实例")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  parent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("虚拟 dom 有什么优点？")])]),t._v(" "),n("p",[t._v("1、可以用 vnode 进行 diff，实现旧节点复用，减少 dom 的创建开销，并且无须手动操作 dom")]),t._v(" "),n("p",[t._v("2、和 dom 操作比起来，js 计算极其便宜")]),t._v(" "),n("p",[t._v("3、跨平台，服务端渲染，weex")]),t._v(" "),n("p",[n("strong",[t._v("缺点？")])]),t._v(" "),n("p",[t._v("渲染大量的 dom 时，多了一层虚拟 dom 的计算，会比 innerHTML 慢")]),t._v(" "),n("p",[t._v('"Virtual DOM 真正的价值从来都不是性能，而是它')]),t._v(" "),n("ol",[n("li",[n("p",[t._v("为函数式的 UI 编程方式打开了大门；")])]),t._v(" "),n("li",[n("p",[t._v('可以渲染到 DOM 以外的 backend，比如 ReactNative。"')])])]),t._v(" "),n("h3",{attrs:{id:"🌟-vue-3-与-vue-2-的区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-vue-3-与-vue-2-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 vue 3 与 vue 2 的区别？")]),t._v(" "),n("ul",[n("li",[t._v("Composion API")]),t._v(" "),n("li",[t._v("响应式优化 使用 Proxy 代理对象")]),t._v(" "),n("li",[t._v("引入 Tree-Shaking 清除无用代码，减小程序体积")]),t._v(" "),n("li",[t._v("Vue 3 是基于 TS 编写的，提供了更好的类型检查，能支持复杂的类型推导")]),t._v(" "),n("li",[t._v("编译优化，添加属性标记，生成 block tree 静态树\n"),n("ul",[n("li",[t._v("如果我们有许多的静态节点，只有一个动态节点，我们希望 text 变化时只更新动态节点的 diff ，这样可以避免很多不必要 diff 。然而，这点在 vue2 中是做不到的。因此，vue3 中重写了 diff 算法，添加了属性标记，通过编译阶段对静态模板的分析，编译生成了 block tree 。")]),t._v(" "),n("li",[t._v("block tree 是一个将模板基于动态节点指令切割的嵌套区块，每个区块内部的节点结构是固定的，而且每个区块只需要以一个 Array 来追踪自身包含的动态节点")])])])]),t._v(" "),n("h3",{attrs:{id:"vue-3-新特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-新特性","aria-hidden":"true"}},[t._v("#")]),t._v(" vue 3 新特性")]),t._v(" "),n("ul",[n("li",[t._v("ref() 函数接受参数并返回它包装在具有 value 属性 的对象中，适用于基本类型，创建了响应式数据")]),t._v(" "),n("li",[t._v("reactive() 函数也是创建了响应式数据，但它只适用于对象或数组")]),t._v(" "),n("li",[t._v("toRefs() 函数将 reactive 创建的响应式数据转换为普通对象，但这个对象的每个属性，都是 ref() 类型的响应式数据")])]),t._v(" "),n("h2",{attrs:{id:"webpack"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),n("h3",{attrs:{id:"webpack-和-vite-的区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-和-vite-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack 和 vite 的区别？")]),t._v(" "),n("p",[n("strong",[t._v("共同点")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("模块处理")]),t._v("：都能处理 JavaScript、CSS、图片等多文件类型的模块")]),t._v(" "),n("li",[n("strong",[t._v("开发和生产环境支持")]),t._v("：都能支持开发和生产环境的构建配置，支持开发服务器和生产环境的优化打包")]),t._v(" "),n("li",[n("strong",[t._v("热模块更新 HMR")]),t._v("：都支持热模块更新，可以只更新变化的部分，无需刷新整个页面")]),t._v(" "),n("li",[n("strong",[t._v("社区和插件生态")]),t._v("：都拥有活跃的社区和丰富的插件生态，允许开发者扩展功能")]),t._v(" "),n("li",[n("strong",[t._v("Tree-Shaking")]),t._v("：webpack5 在 Tree-Shaking 算法进行了优化；vite 也支持 Tree-Shaking 功能")])]),t._v(" "),n("p",[n("strong",[t._v("差异点")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("构建速度")]),t._v("：vite 在开发环境下利用原生 ES 模块和高效的 HMR 实现快速的冷启动和热更新，通常会比 webpack 快，因为 webpack 需要进行大量的模块分析和优化")]),t._v(" "),n("li",[n("strong",[t._v("打包方式")]),t._v("：vite 使用 Rollup 作为打包工具，保留原生 ES 模块导入方式；而 webpack 使用的是 webpack 本身，构建生成一个或多个优化后的静态资源文件")]),t._v(" "),n("li",[n("strong",[t._v("配置复杂度")]),t._v("：vite 配置更简单，webpack 的配置相对复杂，需要配置各种 loader 和插件，需要了解 webpack 的各种配置项和插件的使用方法")]),t._v(" "),n("li",[n("strong",[t._v("开发体验")]),t._v("：vite 在开发环境下提供了更好的开发体验，例如快速的冷启动和热更新；而 webpack 在开发环境下需要等待打包完成才能看到效果")]),t._v(" "),n("li",[n("strong",[t._v("浏览器支持")]),t._v("：vite 主要支持现代浏览器，需要兼容旧版本的浏览器；webpack 有更好的兼容性")])]),t._v(" "),n("p",[t._v("vite 是基于 ES Module 的打包工具；")]),t._v(" "),n("p",[t._v("webpack 是模块打包工具，通过一个配置文件，找到入口文件，从这个入口文件开始，找到所以的依赖，构建依赖图，然后进行打包、编译、压缩、优化，最终生成一个浏览器可以直接运行的 js 文件")]),t._v(" "),n("h3",{attrs:{id:"🌟-webpack-5-的新特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-webpack-5-的新特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 webpack 5 的新特性")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("tree-shaking 的对比，打包体积更小")])]),t._v(" "),n("li",[n("p",[t._v("内置了 Prepack 能力，是 FaceBook 开源的一个代码优化工具，生成优化后的代码，能在编译时对代码进行预计算")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("sideEffects")]),t._v(" 标识代码是否有副作用，例如 css 文件有副作用，不做 tree shaking，可以在 packjson 中设置")])]),t._v(" "),n("li",[n("p",[t._v("splitChunk 可以指定不同类型的大小，分割 chunk 可以更加精确")])]),t._v(" "),n("li",[n("p",[t._v("内置 web worker 能力，借助 worker-loader ，Web Worker 为 Web 内容在后台线程中运行脚本提供了一种简单的方法。线程可以执行任务而不干扰用户界面。通常，我们可以将一些加解密或者图片处理等一些比较复杂的算法置于子线程中，当子线程执行完毕之后，再向主线程通信")])]),t._v(" "),n("li",[n("p",[t._v("丢弃 cacher-loader，采用自带缓存（对 module 和 chunk 进行缓存）")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'filesystem'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选配置")]),t._v("\n        buildDependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("__filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当构建依赖的config文件（通过 require 依赖）内容发生变化时，缓存失效")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置以name为隔离，创建不同的缓存文件，如生成PC或mobile不同的配置缓存")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("webpack 5 前，对 img、svg 资源打包需要额外配置 loader，比如 raw-loader、file-loader、url-loader")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("webpack5 内置了静态资源构建，实现打包和分目录存放（assets），设置对应的 type")]),t._v(" "),n("ul",[n("li",[t._v("asset/source ——功能相当于 raw-loader。")]),t._v(" "),n("li",[t._v("asset/inline——功能相当于 url-loader，若想要设置编码规则，可以在 generator 中设置 dataUrl。")]),t._v(" "),n("li",[t._v("asset/resource——功能相当于 file-loader。项目中的资源打包统一采用这种方式，得益于团队项目已经完全铺开使用了 HTTP2 多路复用的相关特性，我们可以将资源统一处理成文件的形式，在获取时让它们能够并行传输，避免在通过编码的形式内置到 js 文件中，而造成资源体积的增大进而影响资源的加载。")]),t._v(" "),n("li",[t._v("asset—— 默认会根据文件大小来选择使用哪种类型，当文件小于 8 KB 的时候会使用 asset/inline，否则会使用 asset/resource。也可手动进行阈值的设定")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      rules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            test"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.(png|jpg|svg|gif)$/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'asset/resource'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            generator"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [ext]前面自带"."')]),t._v("\n                filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'assets/[hash:8].[name][ext]'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])]),t._v(" "),n("h3",{attrs:{id:"说一下你对-webpack-的理解，做了什么优化？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#说一下你对-webpack-的理解，做了什么优化？","aria-hidden":"true"}},[t._v("#")]),t._v(" 说一下你对 Webpack 的理解，做了什么优化？")]),t._v(" "),n("p",[t._v("Webpack（https://webpack.js.org）是一个模块打包工具，在 Webpack 里一切文件皆模块，通过配置，找到入口文件，然后从这个入口文件开始，找到所以的依赖，构建依赖图，然后进行打包、编译、压缩、优化，最终生成一个浏览器可以直接运行的 js 文件。")]),t._v(" "),n("p",[t._v("现代前端开发已经变得十分复杂，我们开发过程过程中会遇到如下的问题：")]),t._v(" "),n("ul",[n("li",[t._v("JavaScript 需要 "),n("u",[t._v("模块化")]),t._v("，HTML 和 CSS 这些资源文件也会面临需要被模块化的问题。")]),t._v(" "),n("li",[t._v("使用一些 "),n("u",[t._v("高级的特性")]),t._v(" 来加快我们的开发效率或安全性，比如通过 ES6+、TypeScript 开发脚本逻辑，使用 Sass、Less 等预处理器编写 css 样式代码")]),t._v(" "),n("li",[n("u",[t._v("监听文件的变化")]),t._v(" 并且反映到浏览器上，提高开发的效率。")]),t._v(" "),n("li",[n("u",[t._v("开发完成后")]),t._v(" 我们还需要将代码进行压缩、合并以及其他相关的优化。")])]),t._v(" "),n("p",[t._v("Webpack 可以自动化地解决这一系列复杂的问题，解放我们的生产力。")]),t._v(" "),n("h3",{attrs:{id:"🌟-简单说一下-webpack-的构建流程？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-简单说一下-webpack-的构建流程？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 简单说一下 Webpack 的构建流程？")]),t._v(" "),n("p",[t._v("三大步骤：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("初始化流程")]),t._v("：从配置文件和 shell 语句中读取与合并参数，使用参数初始化 Compiler 对象，加载所有配置的"),n("strong",[t._v("插件")]),t._v("，执行对象的 run 方法 开始编译")]),t._v(" "),n("li",[n("strong",[t._v("编译构建流程")]),t._v("：根据配置确定 entry 文件，从入口文件出发，调用所有配置的 Loader 对 Module 进行翻译，再找到该 Module 依赖的 Module，递归地进行编译处理")]),t._v(" "),n("li",[n("strong",[t._v("输出流程")]),t._v("：对编译后的 Module 组装成包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表")])]),t._v(" "),n("h3",{attrs:{id:"module-循环依赖如何解决？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#module-循环依赖如何解决？","aria-hidden":"true"}},[t._v("#")]),t._v(" module 循环依赖如何解决？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Common 因为会对已加载的模块会进行缓存，不会重复加载，所以出现循环依赖时才不会出现无限循环调用的情况。\n"),n("strong",[t._v("解决方法")]),t._v("：先将本模块的值 module.exports 出去，再 require 其他模块")])]),t._v(" "),n("li",[n("p",[t._v("ES6 的 import 是在编译阶段执行的，这样就使得程序在编译时就能确定模块的依赖关系，一旦发现循环依赖，ES6 本身就不会再去执行依赖的那个模块了，所以 ES6 本身就支持循环依赖，保证程序不会因为循环依赖陷入无限调用，\n"),n("strong",[t._v("解决方法")]),t._v("：推荐使用 webpack 插件 circular-dependency-plugin 来帮助你检测项目中存在的所有循环依赖")])])]),t._v(" "),n("h3",{attrs:{id:"🌟-说说-webpack-中常见的-loader？解决了什么问题？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-说说-webpack-中常见的-loader？解决了什么问题？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 说说 webpack 中常见的 Loader？解决了什么问题？")]),t._v(" "),n("p",[t._v("常见的 loader：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("处理 css")]),t._v("：style-loader、css-loader、sass-loader")]),t._v(" "),n("li",[n("strong",[t._v("处理 js、vue")]),t._v("：babel-loader、vue-loader")]),t._v(" "),n("li",[n("strong",[t._v("处理图片、文件")]),t._v("：file-loader、url-loader")])]),t._v(" "),n("p",[t._v("webpack 只支持对 js 文件打包，遇到 css、sass、img 等文件时，需要根据配置对应的 loader 进行文件内容的解析。所以 loader 负责模块的转义工作，遵循单一原则，支持链式调用，每个 loader 拿到源文件内容，处理完成后返回给 webpack，可以把 loader 看作是一个处理函数")]),t._v(" "),n("p",[t._v("补充：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("babel-loader")]),t._v("：使用 Babel 转译 ES6 代码，使其兼容更多浏览器")]),t._v(" "),n("li",[n("strong",[t._v("style-loader、css-loader")]),t._v("：将 css 文件转换成 js 文件，css-loader 负责解析 css 文件，style-loader 负责将 css 代码插入到 html 中")]),t._v(" "),n("li",[n("strong",[t._v("less-loader")]),t._v("：加载 Less 文件并将其编译成 css，搭配 css-loader 使用")]),t._v(" "),n("li",[n("strong",[t._v("file-loader")]),t._v("：用于处理图片、字体等资源，并将它们作为模块返回，通常返回一个 url")]),t._v(" "),n("li",[n("strong",[t._v("url-loader")]),t._v("：将文件转换为 base64 编码，作为 Data URLs 内联到文件中")])]),t._v(" "),n("h3",{attrs:{id:"🌟-说说-webpack-中常见的-plugin？解决了什么问题？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-说说-webpack-中常见的-plugin？解决了什么问题？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 说说 webpack 中常见的 Plugin？解决了什么问题？")]),t._v(" "),n("p",[t._v("plugin 本质是一个具有 apply 方法 javascript 类，apply 方法会被 webpack compiler 调用，并且在整个编译生命周期都可以访问 compiler 对象，plugin 拓展了 webpack 的一些功能，webpack 在运行时会广播出许多事件，在 plugin 中订阅这些事件，然后在合适的时机通过 webpack 提供的 api 改变输出的结果。比如打包优化、资源管理、环境变量注入等等，plugin 会运行在 webpack 的不同阶段，贯穿了 webpack 整个编译周期，目的是解决 "),n("code",[t._v("loader")]),t._v(" 无法实现的事情。")]),t._v(" "),n("p",[t._v("常见的 plugin：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("打包优化类型")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("terser-webpack-plugin：用于压缩 js 代码，减小最终输出的文件大小，改善加载性能")]),t._v(" "),n("li",[t._v("compression-webpack-plugin：开启 gzip，预先准备的资源压缩版本")]),t._v(" "),n("li",[t._v("mini-css-extract-plugin：将 css 代码抽离到单独的文件中")]),t._v(" "),n("li",[t._v("add-asset-html-webpack-plugin：资源注入")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("文件处理类型")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("html-webpack-plugin：打包结束后生成一个 html，并引入打包后的 js 模块")]),t._v(" "),n("li",[t._v("clean-webpack-plugin：确保每次构建前清理构建目录")])])])]),t._v(" "),n("h3",{attrs:{id:"loader-和-plugin-的区别？编写-loader，plugin-的思路？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loader-和-plugin-的区别？编写-loader，plugin-的思路？","aria-hidden":"true"}},[t._v("#")]),t._v(" Loader 和 Plugin 的区别？编写 Loader，Plugin 的思路？")]),t._v(" "),n("p",[t._v("两者有明显的区别：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("作用")]),t._v("：loader 用于将不同类型的文件转换成 webpack 能够处理的有效模块，plugin 用于扩展 webpack 的功能和解决 loader 无法实现的问题")]),t._v(" "),n("li",[n("strong",[t._v("作用对象")]),t._v("：loader 主要作用于单个文件，而 plugin 作用于整个构建过程")]),t._v(" "),n("li",[n("strong",[t._v("执行时机")]),t._v("：loader 在 webpack 的 compilation 阶段执行，主要在处理模块时运行；plugin 在 webpack 整个生命周期都能执行，包括 compilation、watchRun、emit 等等")])]),t._v(" "),n("p",[n("strong",[t._v("编写 loader 的思路")]),t._v("：")]),t._v(" "),n("p",[t._v("根据 loader 职责单一的特性，我们只需要关注输入和输出，webpack 是运行在 node 环境的，所以一个 loader 实际就是一个 common 模块，这个模块导出一个函数，函数的工作就是对原内容做一定处理，返回处理后的内容")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("source")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  content "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomeChange2JsString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("source"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为 loader 可以被链式调用，所以输出可以为 String 或 Buffer 类型")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("strong",[t._v("编写 plugin 的思路")]),t._v("：")]),t._v(" "),n("p",[t._v("首先，webpack 编译会创建两个核心对象：")]),t._v(" "),n("ul",[n("li",[t._v("compiler：包含 webpack 环境的所有配置信息，比如 options、loader、plugin 等等")]),t._v(" "),n("li",[t._v("compilation：包含当前的模块资源、编译生成资源、变化的文件以及被跟踪依赖的状态信息等等")])]),t._v(" "),n("p",[t._v("所以根据 plugin 特性，它能够贯穿整个编译周期，自定义的 plugin 必须是一个函数或者一个包含 aplly 方法的对象，这样才能访问到 webpack 的 compiler ,当检测到一个文件变化，就会有一个新的 compilation 被创建")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyPlugin")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack 会调用 MyPlugin 实例的 apply 方法，给插件实例传入 compiler 对象")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("compiler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compiler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyPlugin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("compilation")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// compilation 当前打包构建流程的上下文")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compilation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// doSomeThing")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"babel是什么，原理是？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel是什么，原理是？","aria-hidden":"true"}},[t._v("#")]),t._v(" Babel是什么，原理是？")]),t._v(" "),n("p",[n("strong",[t._v("定义")]),t._v("：Babel 是一个 JavaScript 编译器，可以将 ES6+ 代码转换为向后兼容的 JavaScript 代码，以便可以在不同的环境中运行。Babel 主要是通过插件 Plugins 和 预设 Presets 提供了转换 ES6+ 新特性的能力，同时也支持通过 polyfill 添加目标环境中缺失的功能")]),t._v(" "),n("p",[n("strong",[t._v("工作原理")]),t._v("：分为三个主要阶段 解析 Parsing、转换 Transformation 和 生成 Generation")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("解析 Parsing")]),t._v("：Babel 使用 Babylon 解析器将源代码转换为抽象语法树（AST），AST 是 JavaScript 代码的抽象语法结构的树状表现形式，它由一系列的节点组成，每个节点代表着源代码中的一个部分，如变量、函数、表达式等（词法分析与语法分析过程）")]),t._v(" "),n("li",[n("strong",[t._v("转换 Transformation")]),t._v("：Babel 使用 babel-traverse 遍历 AST 节点，并允许插件进行节点的添加、更新和删除操作")]),t._v(" "),n("li",[n("strong",[t._v("生成 Generation")]),t._v("：Babel 使用 babel-generator 将转换后的 AST 转换为 JavaScript 代码，并输出到文件中")])]),t._v(" "),n("p",[t._v("补充：Babel 的 polyfill 功能主要通过第三方 polyfill（例如 core-js）来实现，它可以自动检测代码中使用的 ES6+ 特性，并按需加载相应的 polyfill，避免了加载整个 polyfill 库，从而减小了最终打包文件的大小")]),t._v(" "),n("h3",{attrs:{id:"webpack-的热更新是如何做到的？原理是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-的热更新是如何做到的？原理是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack 的热更新是如何做到的？原理是什么？")]),t._v(" "),n("p",[t._v("HMR 全称 Hot Module Replacement，可以理解为"),n("strong",[t._v("模块热替换")]),t._v("，是指在应用程序运行中，替换、添加、删除模块无需重新刷新整个应用")]),t._v(" "),n("p",[t._v("在 webpack 中开启热更新非常简单，只需要在配置文件中添加：我们也可以指定哪些模块发生更新时进行 HMR")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" webpack "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpack"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  devServer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    hot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("热更新的实现主要依赖两个插件")]),t._v(" "),n("ul",[n("li",[t._v("webpack-dev-server 提供 Bundle Server 能力，它是一个静态资源服务器")]),t._v(" "),n("li",[t._v("hot-module-replacement-plugin 提供了 HMR Runtime，是一个 socket 服务器，会被注入到浏览器中")])]),t._v(" "),n("p",[t._v("热更新主要有两个阶段：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("在启动阶段")]),t._v("：webpack compile 将源码与 HMR Runtime 一起编译成 bundle.js 文件，传输给 Bundle Server 后注入到浏览器")]),t._v(" "),n("li",[n("strong",[t._v("在更新阶段")]),t._v("：\n"),n("ul",[n("li",[t._v("webpack compile 监听到模块变化后重新编译打包，生成唯一的 hash 值，作为下一次热更新的标识，利用 websocket 链接发送给浏览器")]),t._v(" "),n("li",[t._v("HMR Runtime 根据最新的 hash 值，调用 hotDownloadManifest 发起模块变化内容的 hash.hot-update.json 请求，再调用 hotDownloadUpdateChunk 获取最新模块代码的 hash.hot-update.js 请求")]),t._v(" "),n("li",[t._v("最后，浏览器通过 HMR Runtime 加载 manifest 和 update 两个文件对修改的模块进行更新")])])])]),t._v(" "),n("h3",{attrs:{id:"webpack-proxy-工作原理，为什么能解决跨域？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-proxy-工作原理，为什么能解决跨域？","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack proxy 工作原理，为什么能解决跨域？")]),t._v(" "),n("p",[t._v("webpack proxy 是 webpack 提供的代理服务，在开发阶段，接受客户端发送的请求，然后转发到目标服务器，主要是解决在开发模式下的跨域问题")]),t._v(" "),n("p",[t._v("实现代理服务，可以在 webpack config 的配置文件中增加 devServer.proxy 配置，值为要被代理的目标地址，前端根据 devServer.port 修改资源请求的地址为对应的 localhost + port 的形式")]),t._v(" "),n("p",[n("strong",[t._v("工作原理")]),t._v("：webpack proxy 实质是利用了 http-proxy-middleware 这个 http 的代理中间件，实现了请求转发给其他服务器的功能 ，")]),t._v(" "),n("p",[t._v("至于"),n("strong",[t._v("为什么能解决跨域问题")]),t._v("，是因为：")]),t._v(" "),n("p",[t._v("设置 webpack proxy 后，目标服务器返回数据的传递方式是 目标服务器---代理服务器---浏览器，而代理服务器与本地浏览器是属于同源，不存在跨域问题，而服务器与服务器之间传递数据并不会存在跨域行为，所以浏览器就能正常接受数据了")]),t._v(" "),n("h3",{attrs:{id:"如何借助-webpack-来优化前端性能？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何借助-webpack-来优化前端性能？","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何借助 webpack 来优化前端性能？")]),t._v(" "),n("ul",[n("li",[t._v("代码压缩，比如 js、css、图片资源等等\n"),n("ul",[n("li",[t._v("js 压缩 TerserPlugin")]),t._v(" "),n("li",[t._v("css 压缩 css-minimizer-webpack-plugin")]),t._v(" "),n("li",[t._v("图片 压缩 image-webpack-loader")])])]),t._v(" "),n("li",[t._v("代码分离，资源分包 --\x3e DllPlugin 与 DllReferencePlugin")]),t._v(" "),n("li",[t._v("Tree Shaking，依赖 ES Module 的静态语法分析 配置 usedExports，通过标记某些函数是否被使用，之后通过 Terser 来进行优化的")])]),t._v(" "),n("h3",{attrs:{id:"import-modulename-from-xxmodule"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#import-modulename-from-xxmodule","aria-hidden":"true"}},[t._v("#")]),t._v(" "),n("code",[t._v("import moduleName from 'xxModule'")])]),t._v(" "),n("p",[t._v("import 经过 webpack 打包以后变成一些"),n("code",[t._v("Map")]),t._v("对象，"),n("code",[t._v("key")]),t._v("为模块 id，"),n("code",[t._v("value")]),t._v("为模块的可执行函数；")]),t._v(" "),n("p",[t._v("例如 index.js 文件")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" m1 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./m1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("m1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("会被打包成")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/index.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_exports__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__webpack_require__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("r")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__webpack_exports__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _m1__WEBPACK_IMPORTED_MODULE_0__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! ./m1 */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/m1.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 拿到default执行")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_m1__WEBPACK_IMPORTED_MODULE_0__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),n("p",[t._v("接下来就由"),n("code",[t._v("__webpack_require__")]),t._v("函数进行模块加载，拿到并保存模块导出的值，最后执行")]),t._v(" "),n("h3",{attrs:{id:"异步模块打包执行流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步模块打包执行流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步模块打包执行流程")]),t._v(" "),n("p",[t._v("当一个文件被异步加载，在"),n("code",[t._v("index.js")]),t._v("中这么写")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*webpackChunkName: "async"*/')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./async"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("被 webpack 处理过后 index.js 的样子，剔除引导模板 runtime")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpackJsonp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpackJsonp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/index.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! no static exports found */")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        __webpack_require__\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! import() | async */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 需要被__webpack_require__加载")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// __webpack_require__ 返回 module.exports")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! ./async */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/async.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***/")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/index.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runtime"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("出现 2 个关键字，一个"),n("code",[t._v("webpackJsonp")]),t._v("，一个"),n("code",[t._v("__webpack_require__.e")])]),t._v(" "),n("p",[n("code",[t._v("webpackJson.push")]),t._v("其实已经被重写了，并不是"),n("code",[t._v("Array.prototype.push")]),t._v("，而是一个函数，叫"),n("code",[t._v("webpackJsonpCallback")]),t._v("，为什么叫"),n("code",[t._v("jsonpCallbak")]),t._v("?其实很好理解，异步的 chunk 是通过 script 标签加载的，跟 jsonp 原理一样。当异步 chunk 下载完后，首先就是执行这个"),n("code",[t._v("webpackJsonpCallback")]),t._v("函数，看看这个函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("webpackJsonpCallback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步加载的文件中存放的需要安装的模块对应的 Chunk ID")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" chunkIds "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 异步加载的文件中存放的需要安装的模块列表")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" moreModules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在异步加载的文件中存放的需要安装的模块都安装成功后，需要执行的模块对应的 index")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 比如 app.js 就是需要最开始执行的")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" executeModules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// add "moreModules" to the modules object, // then flag all "chunkIds" as loaded and fire callback')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    resolves "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" chunkIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" chunkId "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chunkIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installedChunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v("\n      installedChunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// installedChunks[chunkId][0] 就是 promise resolve 函数")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" resolves"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installedChunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 标记该chunk已经加载完成，0即完成")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" installedChunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把所有的模块加入 modules 的对象中, 就是 __webpack_require__.m 对应的那个属性")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("moduleId "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" moreModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("moreModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" moreModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentJsonpFunction"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parentJsonpFunction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolves"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" resolves"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shift")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add entry modules from loaded chunk to deferred list")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" deferredModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    deferredModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    executeModules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// run deferred modules when all chunks ready // 这个函数也很重要，主要是就是执行入口文件，比如app.js")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkDeferredModules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/******/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这个函数，接受一个数组参数，包括 chunkid，moreModules 模块列表，executeModules 需要先执行的模块")]),t._v(" "),n("p",[t._v("具体作用")]),t._v(" "),n("p",[t._v("1、是用来标识该 chunk 加载完成，因为只有下载完才会执行这个 callback 函数")]),t._v(" "),n("p",[t._v("2、把 moreModules，也就是把第二个参数模块 Map 对象放到 runtime 最外层作用域的 modules 数组中，不然"),n("code",[t._v("__webpack_require__")]),t._v("拿不到模块")]),t._v(" "),n("p",[t._v("3、resolve"),n("code",[t._v("__webpack_require__.e")]),t._v("函数加载 chunk 返回的 promise，通知"),n("code",[t._v("__webpack_require__")]),t._v("函数加载和执行模块")]),t._v(" "),n("p",[t._v("4、链式调用 promise，把 module 当参数，执行用户定义的 then 回调")]),t._v(" "),n("p",[t._v("5、带有入口文件的话，就先执行入口文件")]),t._v(" "),n("p",[n("code",[t._v("__webpack_require__.e")]),t._v("简化代码，分析如下")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 记录chunk状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// key: id, value: 状态")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined: 未加载")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数组: 加载中")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0：已加载")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" installedChunks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n__webpack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("require__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("e")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requireEnsure")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunkId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" promises "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installedChunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" promise "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Promise")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      installedChunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("resolve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    promises"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" script "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("charset "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 120s 过后就中断")]),t._v("\n\n    script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("src "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonpScriptSrc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src加载")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onScriptComplete")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" timeout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timeout"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("120000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onerror "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onload "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" onScriptComplete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("head"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Promise"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("all")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("promises"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("可以看到，这个函数主要作用是加载 chunk，还有个 chunk 添加 loading 状态")]),t._v(" "),n("p",[t._v("这边还漏了个地方没讲，就是打包后的"),n("code",[t._v("async.js")]),t._v("文件分析，以及加载"),n("code",[t._v("async.js")]),t._v("过程")]),t._v(" "),n("p",[n("code",[t._v("async.js")]),t._v("文件")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncModule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async module"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" asyncModule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("打包之后")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpackJsonp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webpackJsonp"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/async.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*!**********************!*\\\n  !*** ./src/async.js ***!\n  \\**********************/")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! exports provided: default */")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_exports__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        __webpack_require__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("r")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__webpack_exports__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("asyncModule")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async module"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* harmony default export */")]),t._v(" __webpack_exports__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" asyncModule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***/")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("可以看到，webpack 也是把"),n("code",[t._v("async.js")]),t._v("函数包装了一层，先用"),n("code",[t._v("webpackJsonpCallback")]),t._v("函数标识该 chunk 加载完成，再把"),n("code",[t._v("async.js")]),t._v("内容放到模块数组中，然后在"),n("code",[t._v("index.js")]),t._v("的打包文件中加载再执行")]),t._v(" "),n("p",[t._v("执行"),n("code",[t._v("async.js")]),t._v("里的"),n("code",[t._v("asyncModule")]),t._v("函数是在"),n("code",[t._v("index.js")]),t._v("文件里面的，往上看打包后的"),n("code",[t._v("index.js")]),t._v("文件，有个逻辑，也就是 then 回调里面的")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*! ./async */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./src/async.js"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("其中，"),n("code",[t._v("async.js")]),t._v("模块内容是用"),n("code",[t._v("__webpack_require__")]),t._v("同步加载执行的，"),n("code",[t._v("__webpack_require__")]),t._v("函数是 webpack 加载模块的核心，先来看看这个函数源码")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("moduleId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check if module is in cache")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installedModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" installedModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a new module (and put it into the cache)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installedModules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Execute the module function")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行模块的函数体，也就是async打包后的包装函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// modules就是存放所有webpack模块的地方")]),t._v("\n  modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    __webpack_require__\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Flag the module as loaded")]),t._v("\n  module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("l "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return the exports of the module")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("加载的原理也很简单了，就是一行代码，从"),n("code",[t._v("modules")]),t._v("里面取模块加载")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("modules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("moduleId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  __webpack_require__\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("对应着"),n("code",[t._v("async.js")]),t._v("包装函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_exports__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __webpack_require__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("所以，在异步模块加载之前，一定要把模块放到"),n("code",[t._v("modules")]),t._v("变量里面，然后在用"),n("code",[t._v("__webpack_require__")]),t._v("执行即可")]),t._v(" "),n("p",[t._v("附上流程图")]),t._v(" "),n("p",[t._v("所有，完全可以让异步 chunk 在浏览器空闲的时候下载，因为这些 chunk 下载不需要先后固定顺序，可以用 prefetch 对某些异步路由进行提前下载，提供加载速度。")]),t._v(" "),n("p",[t._v("看完源码不得不惊叹，这些加载过程不需要很多代码，就能把 chunk 之前完全解耦开，闭包玩得太妙了。")]),t._v(" "),n("h3",{attrs:{id:"webpack-模块在运行时是怎么存的？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-模块在运行时是怎么存的？","aria-hidden":"true"}},[t._v("#")]),t._v(" webpack 模块在运行时是怎么存的？")]),t._v(" "),n("p",[t._v("每个模块都存在 webpack 函数中的"),n("code",[t._v("modules")]),t._v("数组变量里面，比如一个 id 为 1 的模块")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" modules "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodules"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模块id")]),t._v("\n  l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否已经加载")]),t._v("\n  exports"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导出的值")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("其中，通过一个表来进行存储，键为模块 id，值为一个对象，里面包含了模块属性。")]),t._v(" "),n("h3",{attrs:{id:"module、chunk、bundle、moduleid、chunkid-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#module、chunk、bundle、moduleid、chunkid-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" module、chunk、bundle、moduleId、chunkId 的区别")]),t._v(" "),n("p",[n("strong",[t._v("module 模块")])]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("定义")]),t._v("：模块是前端构建中最小的单元，通常是一个 vue、js、css、image 等文件；模块可以被看作代码的封装，包含了特定的功能或特性")]),t._v(" "),n("li",[n("strong",[t._v("作用")]),t._v("：模块化允许开发者将复杂的应用程序分解成易于管理和复用的小块，每个模块都可以独立开发、测试和维护")])]),t._v(" "),n("p",[n("strong",[t._v("chunk 代码块")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("定义")]),t._v("：代码块 chunk 是模块的集合，是 webpack 打包过程根据"),n("strong",[t._v("依赖关系")]),t._v("和"),n("strong",[t._v("配置项")]),t._v("生成的，每个 chunk 都有一个唯一的 id，一个 chunk 可以包含多个模块，以便于按需加载或优化性能")]),t._v(" "),n("li",[n("strong",[t._v("作用")]),t._v("：chunk 的主要目的是实现代码分割（Code Spliting），将代码分割成更小的块，以便于按需加载，从而提高加载速度和性能")])]),t._v(" "),n("p",[n("strong",[t._v("bundle 包")])]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("定义")]),t._v("：bundle 是最终输出的、浏览器可执行的 JS 或 CSS 文件，它是通过将多个模块和代码块按照依赖关系和构建配置打包在一起形成的")]),t._v(" "),n("li",[n("strong",[t._v("作用")]),t._v("：bundle 是构建工具的最终产物，它将应用程序的所有资源整合在一起，可以理解为一个完整的应用程序，可以被浏览器直接运行")])]),t._v(" "),n("p",[n("strong",[t._v("moduleId")]),t._v("：就是每个模块的 id，可以是路径、数字或者 hash 值，模块加载器通过这些 id 进行加载")]),t._v(" "),n("p",[n("strong",[t._v("chunkId")]),t._v("：就是打包出来每个 chunk 的 id，比如"),n("code",[t._v("app.xxx.js")]),t._v("，这个文件的 chunkId 就是 app")]),t._v(" "),n("p",[n("strong",[t._v("关系")])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("模块是构建的基础")]),t._v("：每个模块都是独立的文件，包含了应用程序的一部分功能")]),t._v(" "),n("li",[n("strong",[t._v("代码块是由多个模块组成的")]),t._v("：它们基于应用程序的路由、组件或逻辑分割生成，用于实现按需加载")]),t._v(" "),n("li",[n("strong",[t._v("包是最终产物")]),t._v("：它将一个或多个代码块整合在一起，形成了浏览器可以直接加载和执行的文件")])]),t._v(" "),n("h3",{attrs:{id:"持久化缓存方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#持久化缓存方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 持久化缓存方案")]),t._v(" "),n("p",[t._v("js、css 文件不能使用 hash，图片、字体、svg 文件可以使用 hash")]),t._v(" "),n("p",[t._v("css 使用 contentHash，使用 chunkHash 会使得跟其有 css 文件关联的 js 文件 hash 值都改变")]),t._v(" "),n("p",[t._v("js 现在也可以使用 contentHash 了，但是有些旧版本 webpack 是不支持的")]),t._v(" "),n("p",[t._v("如果 js 用 chunkHash 的话，采用以下方案")]),t._v(" "),n("p",[t._v("1、需要用 HashedModuleIdsPlugin 固定住 moduleId(如果不使用，webpack 则会使用自增的 id，当增加或者删除 module 的时候，id 就会发生变化，没有改过的文件的 id 也变了，缓存失效)，HashedModuleIdsPlugin 是把路径 hash 化当成模块 id")]),t._v(" "),n("p",[t._v("2、使用 NamedChunkPlugin+魔法注释来固定住 chunkId")]),t._v(" "),n("p",[t._v("到了 webpack5.0，moduleId 和 chunkId 问题都可以不用插件解决，直接使用")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n optimization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  chunkIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "deterministic”'),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在不同的编译中不变的短数字 id")]),t._v("\n\tmoduleIds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deterministic"')]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("还有一个很重要，但是 vuecli 却没内置的方案，也就是要把引导模板给提取出来")]),t._v(" "),n("p",[t._v("为什么要提取？这边简单说下")]),t._v(" "),n("p",[t._v("比如在 vuecli 创建的工程项目中，有一个懒加载路由"),n("code",[t._v("About.vue")]),t._v("，打包出来会有"),n("code",[t._v("app.contenthash.js")]),t._v("和"),n("code",[t._v("about.contenthash.js")]),t._v("，如果我修改了"),n("code",[t._v("About.vue")]),t._v("内容，打包出来的"),n("code",[t._v("about.contenthash.js")]),t._v("文件 hash 必然会变，但是你会发现，"),n("code",[t._v("app.contentHash.js")]),t._v("也跟着变了，如果在大型项目中这样搞，改了一个路由页面，导致"),n("code",[t._v("app.js")]),t._v("也变，这样就使得"),n("code",[t._v("app.js")]),t._v("缓存失效了，这文件还不小。")]),t._v(" "),n("p",[t._v("为什么"),n("code",[t._v("app.js")]),t._v("会变，怎么解决？")]),t._v(" "),n("p",[t._v("这里有个引导模板的概念，也就是 webpack 加载 bundle 的一些前置函数，例如 webpackJsonpCallback、webpack-require、还是 script src 加载这些，这些函数是不会变的，但是里面的 chunk 文件映射关系会变，所谓的映射关系，可以看这个函数")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("jsonpScriptSrc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("chunkId")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    __webpack_require__"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" about"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c19c62a2"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chunkId"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('".js"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("可以看到，chunk 文件 id 和 hash 值的映射都在这个函数里面，比如一个 chunk 叫"),n("code",[t._v("about.c19c62a2.js")]),t._v("，在引导模板中就为"),n("code",[t._v('{ about: "c19c62a2" }')]),t._v("，所以每个 chunk 文件的 id 变动都会改变这个映射关系，"),n("code",[t._v("About.vue")]),t._v("的 id 变了，当然这个引导模板文件也会变，引导模板又默认放到"),n("code",[t._v("app.js")]),t._v("里面，所以需要把这个引导模板抽取出来，独立加载，不要影响"),n("code",[t._v("app.js")]),t._v("的 hash 值")]),t._v(" "),n("p",[t._v("解决方法，webpack 添加以下配置")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  optimization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    runtimeChunk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"single"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 也可以，不过每个entry chunk就有一个runtime")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这样就可以把 runtimeChunk 打包出来，"),n("code",[t._v("app.js")]),t._v("不会因为"),n("code",[t._v("about.js")]),t._v("变化而改变")]),t._v(" "),n("p",[t._v("但是还有个问题，这个 chunk 很小，没必要消耗一次 http 请求，不然请求时间会大于加载时间，所以直接内联到 html 模板里面就可以了")]),t._v(" "),n("p",[t._v("可以用"),n("code",[t._v("script-ext-html-webpack-plugin")]),t._v("插件实现")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ScriptExtHtmlWebpackPlugin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"script-ext-html-webpack-plugin"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  productionSourceMap"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  configureWebpack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    optimization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      runtimeChunk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"single"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    plugins"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScriptExtHtmlWebpackPlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        inline"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/runtime.+\\.js$/")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("chainWebpack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("plugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"preload"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("args")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fileBlacklist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/runtime.+\\.js$/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"filename-和-chunkfilename-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#filename-和-chunkfilename-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" filename 和 chunkFilename 的区别")]),t._v(" "),n("p",[t._v("filename 即为打包出来的文件名，比如")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/index.js'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    filename"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].min.js'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("打包出来的即为"),n("code",[t._v("index.min.js")])]),t._v(" "),n("p",[t._v("chunkFilename 一般为懒加载的代码块")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("打包出来的有可能就是"),n("code",[t._v("0.min.js")]),t._v("，默认使用"),n("code",[t._v("[id].js")]),t._v("，或者读取"),n("code",[t._v("filename")]),t._v("值，替换"),n("code",[t._v("[name]")]),t._v("，即为"),n("code",[t._v("[id].min.js")])]),t._v(" "),n("p",[t._v("当然可以使用 webpack 魔法注释")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* webpackChunkName: "xxx" */')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"src/xxx"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("出来的文件就是"),n("code",[t._v("xxx.js")])]),t._v(" "),n("h3",{attrs:{id:"项目优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目优化")]),t._v(" "),n("ul",[n("li",[t._v("开发环境剔除第三方包，用 cdn 加载")]),t._v(" "),n("li",[t._v("thread-loader 多线程构建优化，通过 SMP 分析打包过程中 loader 和 plugin 的耗时")]),t._v(" "),n("li",[t._v("缩小打包作用域：尽可能使用 alias、exclude/include 确定 loader 规则范围")]),t._v(" "),n("li",[t._v("合理配置 chunk 缓存化")])]),t._v(" "),n("h2",{attrs:{id:"网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络","aria-hidden":"true"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),n("p",[t._v("20240726")]),t._v(" "),n("h3",{attrs:{id:"🌟-输入-url-到页面展示过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-输入-url-到页面展示过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 输入 URL 到页面展示过程")]),t._v(" "),n("p",[t._v("整体流程：")]),t._v(" "),n("ol",[n("li",[t._v("DNS 解析（获得 IP 端口）")]),t._v(" "),n("li",[t._v("TCP 连接")]),t._v(" "),n("li",[t._v("HTTP 请求")]),t._v(" "),n("li",[t._v("服务器处理请求并返回HTTP报文")]),t._v(" "),n("li",[t._v("浏览器解析渲染页面 DOM -> CSSOM -> render -> layout -> painting")])]),t._v(" "),n("p",[t._v("具体来说，分为两个过程")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("请求响应：")]),t._v(" "),n("ol",[n("li",[t._v("浏览器进行 URL 解析，再通过 DNS 查询，获取服务器的 IP 地址和端口号")]),t._v(" "),n("li",[t._v("浏览器与服务器通过 TCP 三次握手建立连接")]),t._v(" "),n("li",[t._v("浏览器向服务器发送 HTTP 请求，请求包含了请求的方法、资源路径、HTTP版本、请求头等信息")]),t._v(" "),n("li",[t._v("服务器收到报文后处理请求，同样拼好报文再发给浏览器")]),t._v(" "),n("li",[t._v("浏览器对响应体中的HTML内容进行解析")])])]),t._v(" "),n("li",[n("p",[t._v("页面渲染：")]),t._v(" "),n("ol",[n("li",[t._v("解析 HTML，生成 DOM 树")]),t._v(" "),n("li",[t._v("解析 CSS，生成 CSSOM 规则树")]),t._v(" "),n("li",[t._v("合并 DOM 树和 CSSOM 树，生成 render 树")]),t._v(" "),n("li",[t._v("布局 render 树（Layout/Reflow），负责各元素尺寸、位置的计算")]),t._v(" "),n("li",[t._v("绘制 render 树（paint），绘制页面像素信息")]),t._v(" "),n("li",[t._v("浏览器将各层信息发送给 GPU，GPU 会将各层合成显示在屏幕上")]),t._v(" "),n("li",[t._v("如果遇到 script 标签，会执行并阻塞渲染")])])])]),t._v(" "),n("p",[t._v("详细补充：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("构建 DOM 树（DOM tree）：从上到下解析 HTML 文档生成 DOM 节点树，也叫内容树（content tree）")])]),t._v(" "),n("li",[n("p",[t._v("构建 CSSOM 树（CSS Object Model）：加载解析样式生成 CSSOM 树")])])]),t._v(" "),n("ul",[n("li",[t._v("构建渲染树 （render tree）：根据 DOM 树和 CSSOM 树生成渲染树（render tree）")])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("布局（layout）：根据渲染树将节点树的每一个节点布局在屏幕的正确位置")])]),t._v(" "),n("li",[n("p",[t._v("绘制（painting）：遍历渲染树绘制所有节点，为每一个节点使用对应的样式")])])]),t._v(" "),n("p",[t._v("之后每当一个新元素加入到这个 DOM 树当中，浏览器便会通过 CSS 引擎查遍 CSS 样式表，找到符合该元素的样式规则应用到这个元素上，然后再重新去绘制它。")]),t._v(" "),n("h3",{attrs:{id:"三次握手过程？（three-way-handshake）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三次握手过程？（three-way-handshake）","aria-hidden":"true"}},[t._v("#")]),t._v(" 三次握手过程？（Three Way HandShake）")]),t._v(" "),n("p",[t._v("是指建立一个 TCP 连接时，需要客户端和服务器总共发三个包")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("第一次握手（SYN = 1， seq = x）客户端 SYN_SEND 状态")])]),t._v(" "),n("p",[t._v("客户端发送一个 SYN = 1， seq = x 的 TCP 包给服务器，要求建立数据连接（当 SYN=1，ACK=0 时，表示当前报文段是一个连接请求报文。当 SYN=1，ACK=1 时，表示当前报文段是一个同意建立连接的应答报文）")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("第二次握手（SYN = 1，ACK = 1，seq = y，ACKnum = x + 1）服务端 SYN_REVD 状态")])]),t._v(" "),n("p",[t._v("服务器如果同意连接，向客户端发送 SYN = 1、ACK = 1 和 ACKnum = x + 1 的 TCP 包，（服务器选择自己的 ISN 序号为 seq = y）")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("第三次握手（SYN = 0，ACK = 1，ACKnum = y + 1）客户端和服务端都 ESTABLISHED 状态")])]),t._v(" "),n("p",[t._v("客户端再次发送 SYN = 0、ACK = 1 和 ACKnum = y + 1 的确认包给向服务器，服务器判断确认号没有问题，则建立连接")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(453),alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("为什么要三次握手？")])]),t._v(" "),n("p",[t._v("三次握手的目的是确保双方都准备好进行数据传输，并且能够同步双方的序列号和确认号")]),t._v(" "),n("ol",[n("li",[t._v("因为两次握手，服务器无法确认客户端是否收到确认请求，此时如果服务器以为以建立好连接并开始发送数据，客户端可能一直没有收到数据")]),t._v(" "),n("li",[n("strong",[t._v("防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误")])]),t._v(" "),n("li",[n("strong",[t._v("确保双方都有收发报文的能力")])])]),t._v(" "),n("p",[t._v("补充：")]),t._v(" "),n("p",[n("strong",[t._v("什么是 SYN 攻击？")])]),t._v(" "),n("p",[t._v("黑客向服务器不断发送 SYN 包请求建立连接，服务器回复确认包并等待客户端的确认。由于源地址是不存在的，服务器会不断重发直至超时，这些伪造的 SYN 包将长时间占用未连接队列，正常的 SYN 请求被丢弃，导致目标系统运行缓慢，引起网络堵塞甚至系统瘫痪")]),t._v(" "),n("p",[n("strong",[t._v("防御 SYN 攻击")])]),t._v(" "),n("ul",[n("li",[t._v("缩短超时时间（SYN Timeout）")]),t._v(" "),n("li",[t._v("增加最大半连接数")]),t._v(" "),n("li",[t._v("过滤网管防护")]),t._v(" "),n("li",[t._v("SYN cookies 技术")])]),t._v(" "),n("h3",{attrs:{id:"四次挥手过程？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手过程？","aria-hidden":"true"}},[t._v("#")]),t._v(" 四次挥手过程？")]),t._v(" "),n("p",[t._v("假设客户端主动关闭：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("第一次挥手（FIN = 1，seq = x）客户端 FIN_WAIT 状态")])]),t._v(" "),n("p",[t._v("客户端发送 FIN 报文给服务端，通知服务器数据已经传输完毕")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("第二次挥手（ACK = 1，ACKnum = x + 1） 服务端 CLOSE_WAIT 状态")])]),t._v(" "),n("p",[t._v("服务器接收到之后，发送 ACK 给客户端，数据还没传输完成")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("第三次挥手（FIN = 1，seq = y）服务端 LAST_ACK 状态")])]),t._v(" "),n("p",[t._v("服务器已经传输完毕，再次发送 FIN 通知客户端，数据已经传输完毕")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("第四次挥手（ACK = 1，ACKnum = y + 1）客户端 TIME_WAIT 状态，待服务端确认后，都 CLOSED 状态")])]),t._v(" "),n("p",[t._v("客户端再次发送 ACK，进入 TIME_WAIT 状态，服务端关闭连接，客户端等待 2MSL 后也关闭连接")]),t._v(" "),n("p",[t._v("（两个最大段生命周期，2MSL，2 Maximum Segment Lifetime）")])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(454),alt:""}})]),t._v(" "),n("p",[n("strong",[t._v("为什么客户端要等到 2MSL 后再关闭？")])]),t._v(" "),n("p",[t._v("等待 2MSL 时间主要目的是怕最后一个 ACK 包对方没收到，那么对方在超时后将重发第三次握手的 FIN 包，主动关闭端接到重发的 FIN 包后可以再发一个 ACK 应答包。")]),t._v(" "),n("p",[n("strong",[t._v("为什么要四次挥手？")])]),t._v(" "),n("p",[t._v("四次挥手的目的是确保双方都能独立地关闭连接，并且能够完成所有未完成的数据传输。")]),t._v(" "),n("p",[t._v("因为 tcp 是全双工模式，服务端和客服端都能发送和接收数据，tcp 在断开连接时，需要服务端和客服端都确定对方将不再发送数据。")]),t._v(" "),n("p",[t._v("当客户端发送 FIN 报文段时，只是表示客户端已经没有数据要发送了，但是客户端还可以接收服务端的数据")]),t._v(" "),n("p",[t._v("当服务端发送 ACK 报文段时，表示它已经知道客户端没有数据发送了，但是服务端还是可以发数据到客户端")]),t._v(" "),n("p",[t._v("当服务端也发送 FIN 报文段时，表示服务端没有数据发送了，告诉客户端")]),t._v(" "),n("p",[t._v("客户端收到 FIN 报文段，发送 ACK 表示已经知道服务端没有数据发送了")]),t._v(" "),n("p",[t._v("简单来说，就是双方都需要发送 FIN 和 ACK 报文段才能断开 TCP 连接")]),t._v(" "),n("p",[t._v("20240729")]),t._v(" "),n("h3",{attrs:{id:"🌟-说一下有什么缓存策略？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-说一下有什么缓存策略？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 说一下有什么缓存策略？")]),t._v(" "),n("p",[t._v("浏览器每次发起请求时，先在本地缓存中查找结果以及缓存标识，根据缓存标识判断是否使用本地缓存。如果缓存有效，则使用本地缓存；否则，则向服务器发起请求并携带缓存标识。")]),t._v(" "),n("p",[t._v("HTTP缓存分为两类，强缓存优先于协商缓存")]),t._v(" "),n("p",[n("strong",[t._v("HTTP缓存都是从第二次请求开始的")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("第一次请求资源时，服务器返回资源并在"),n("strong",[t._v("响应头")]),t._v("中回传资源的缓存策略，浏览器会根据服务端的响应头做缓存处理；")]),t._v(" "),n("li",[t._v("第二次请求资源时，浏览器判断这些请求参数，命中"),n("strong",[t._v("强缓存")]),t._v("就直接200；否则就把这些请求参数加到"),n("strong",[t._v("请求头")]),t._v("中传给服务器，看是否命中"),n("strong",[t._v("协商缓存")]),t._v("，命中则返回304；否则服务器会返回新的资源")])]),t._v(" "),n("p",[n("strong",[t._v("案例")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("第一次请求的响应头中的 cache-control 设为 max-age = 100，那么在 100s 内客户端再次发送请求资源，浏览器会自动读取缓存数据；")]),t._v(" "),n("li",[t._v("如果在 101s 发起请求，浏览器会在请求头中携带 if-none-match，值为第一次响应头中的 Etag，服务端通过 Etag 判断资源是否被修改，没有修改则返回 304，浏览器复用缓存数据；有修改则返回 200 和新资源")])]),t._v(" "),n("p",[n("strong",[t._v("用户交互")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("普通刷新 -> 走强缓存+协商缓存")]),t._v(" "),n("li",[t._v("强制刷新 -> 协商缓存（因为请求头都携带 cache-control: no-chahe）")]),t._v(" "),n("li",[t._v("清缓存后刷新 -> 没有缓存文件，相当于第一次加载")])]),t._v(" "),n("p",[t._v("补充：命中了强缓存，但是想要获取更新后的静态资源可以怎么做？")]),t._v(" "),n("ul",[n("li",[t._v("在文件名、引用路径添加 hash 或版本号的动态字段（webpack 打包已做了处理）")])]),t._v(" "),n("h3",{attrs:{id:"什么是强缓存和协商缓存？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是强缓存和协商缓存？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是强缓存和协商缓存？")]),t._v(" "),n("p",[n("strong",[t._v("强缓存")]),t._v("：根据响应头的 "),n("strong",[t._v("Cache-Control")]),t._v(" 相对时间 (http/1.1)或"),n("strong",[t._v("Expires")]),t._v(" 绝对时间 (http/1.0)控制；Cache-Control 优先级高于 Expires")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("Cache-Control 常用值")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}})])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("max-age")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("最大有效时间")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("must-revalidate")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("如果超过了 max-age 的时间，浏览器必须向服务器发送请求，验证资源是否还有效")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("no-cache")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不使用强缓存，使用协商缓存，浏览器向服务器发送请求，验证资源是否还有效")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("no-store")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("所有内容都不走缓存，包括强缓存和协商")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("public")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("所有内容都可以缓存，包括客户端和代理服务器如CDN")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("只有客户端可以缓存，代理服务器不能")])])])]),t._v(" "),n("p",[n("strong",[t._v("协商缓存")]),t._v("：ETag/If-None-Match、Last-Modified/If-Modified-Since；ETag优先级高于Last-Modified")]),t._v(" "),n("p",[n("strong",[t._v("Last-Modified 和 If-Modified-Since")])]),t._v(" "),n("ol",[n("li",[t._v("服务器通过 "),n("strong",[t._v("Last-Modified")]),t._v(" 告知客户端资源的最后一次修改时间，浏览器将这个值和内容一起记录在缓存数据库中")]),t._v(" "),n("li",[t._v("第二次请求相同的资源时，浏览器从自己的缓存找出“不确定是否过期”的缓存；因此在请求头中将上次的 "),n("strong",[t._v("Last-Modified")]),t._v(" 值写入请求头的 "),n("strong",[t._v("If-Modified-Since")]),t._v(" 中")]),t._v(" "),n("li",[t._v("服务器会将 "),n("strong",[t._v("If-Modified-Since")]),t._v(" 与 "),n("strong",[t._v("Last-Modified")]),t._v(" 比较，如果相等则未修改返回304；否则表示已修改返回200和新资源")])]),t._v(" "),n("ul",[n("li",[t._v("优点：不存在版本问题，每次请求都会去服务器进行校验")]),t._v(" "),n("li",[t._v("缺点：\n"),n("ul",[n("li",[t._v("只要资源修改，无论内容是否发生实质性变化都会返回新的资源")]),t._v(" "),n("li",[t._v("无法识别一秒内进行的多次修改情况，因为时间单位最低是秒")]),t._v(" "),n("li",[t._v("某些服务器不能精确得到文件的最后修改时间")])])])]),t._v(" "),n("p",[n("strong",[t._v("ETag 和 If-None-Match")])]),t._v(" "),n("ol",[n("li",[t._v("ETag 存储的是文件特殊标识(一般是hash生成的)，流程和 Last-Modified 基本一致")]),t._v(" "),n("li",[t._v("第二次请求相同的资源时，浏览器会将上次的 "),n("strong",[t._v("ETag")]),t._v(" 值写入请求头的 "),n("strong",[t._v("If-None-Match")]),t._v(" 中")]),t._v(" "),n("li",[t._v("服务器会讲 "),n("strong",[t._v("If-None-Match")]),t._v(" 与本地资源的 "),n("strong",[t._v("ETag")]),t._v(" 进行比较，如果相等则未修改返回304；否则表示已修改返回200和新资源")])]),t._v(" "),n("ul",[n("li",[t._v("优点：不存在版本问题，每次请求都会去服务器进行校验，精确的判断资源是否被修改，可以识别一秒内多次修改的情况")]),t._v(" "),n("li",[t._v("缺点：\n"),n("ul",[n("li",[t._v("计算 ETag 存在性能损耗")]),t._v(" "),n("li",[n("strong",[t._v("ETag")]),t._v(" 是服务器生成的，"),n("strong",[t._v("Last-Modified")]),t._v(" 是客户端生成的，不同服务器可能计算 ETag 的算法不一样存在不匹配情况")])])])]),t._v(" "),n("p",[n("strong",[t._v("强缓存和协商缓存区别")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("缓存验证方式")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("强缓存")]),t._v("：不需要与服务器通信来验证缓存是否过期，浏览器根据缓存控制头 "),n("strong",[t._v("Cache-Control")]),t._v(" 来决定是否使用缓存中的资源")]),t._v(" "),n("li",[n("strong",[t._v("协商缓存")]),t._v("：需要向服务器发送请求来验证缓存是否过期，使用 "),n("strong",[t._v("HTTP头如 If-Modified-Since 或 If-None-Match")]),t._v("与服务器进行通信")])])]),t._v(" "),n("li",[n("strong",[t._v("HTTP头")]),t._v("：\n"),n("ul",[n("li",[n("strong",[t._v("强缓存")]),t._v("：主要使用 "),n("strong",[t._v("Cache-Control")]),t._v("，可能包括 "),n("strong",[t._v("max-age、public、private")]),t._v("等等")]),t._v(" "),n("li",[n("strong",[t._v("协商缓存")]),t._v("：使用 "),n("strong",[t._v("Last-Modified和If-Modified-Since")]),t._v("或 "),n("strong",[t._v("ETag和If-None-Match")]),t._v("进行交互")])])]),t._v(" "),n("li",[n("strong",[t._v("过期判断")]),t._v("：\n"),n("ul",[n("li",[n("strong",[t._v("强缓存")]),t._v("：基于时间的过期机制，浏览器根据 "),n("strong",[t._v("Cache-Control")]),t._v(" 中的指令确定资源是否过期")]),t._v(" "),n("li",[n("strong",[t._v("协商缓存")]),t._v("：基于资源版本的过期机制，即使资源没有在指定的时间内过期，服务器也可能返回新的版本")])])]),t._v(" "),n("li",[n("strong",[t._v("响应代码")]),t._v("：\n"),n("ul",[n("li",[n("strong",[t._v("强缓存")]),t._v("：如果资源未过期，浏览器自动使用缓存，"),n("strong",[t._v("不会产生HTTP请求")])]),t._v(" "),n("li",[n("strong",[t._v("协商缓存")]),t._v("：如果资源未被修改，"),n("strong",[t._v("服务器返回304 Not Modified响应")]),t._v("，告知浏览器使用本地缓存资源")])])]),t._v(" "),n("li",[n("strong",[t._v("用户体验")]),t._v("：\n"),n("ul",[n("li",[n("strong",[t._v("强缓存")]),t._v("：可以显著提高页面加载速度，因为不需要等待服务器响应")]),t._v(" "),n("li",[n("strong",[t._v("协商缓存")]),t._v("：稍微增加加载时间，因为需要等待服务器验证缓存，但如果资源未改变，仍然可以减少数据传输")])])]),t._v(" "),n("li",[n("strong",[t._v("服务器负担")]),t._v("：\n"),n("ul",[n("li",[n("strong",[t._v("强缓存")]),t._v("：减少了服务器的负担，因为浏览器不会对未过期的资源发送请求")]),t._v(" "),n("li",[n("strong",[t._v("协商缓存")]),t._v("：即使资源未改变，服务器也需要处理请求并返回304 Not Modified响应，增加了服务器的负担")])])]),t._v(" "),n("li",[n("strong",[t._v("适用场景")]),t._v("：\n"),n("ul",[n("li",[n("strong",[t._v("强缓存")]),t._v("：适用于不经常变化的资源如静态文件、图片、样式表和脚本等等")]),t._v(" "),n("li",[n("strong",[t._v("协商缓存")]),t._v("：适用于可能更新但频率不高的资源，或者需要确保用户总是获取最新版本的资源")])])])]),t._v(" "),n("h3",{attrs:{id:"有了【last-modified，if-modified-since】为何还要有【etag、if-none-match】？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有了【last-modified，if-modified-since】为何还要有【etag、if-none-match】？","aria-hidden":"true"}},[t._v("#")]),t._v(" 有了【"),n("code",[t._v("Last-Modified，If-Modified-Since")]),t._v("】为何还要有【"),n("code",[t._v("ETag、If-None-Match")]),t._v("】？")]),t._v(" "),n("p",[t._v("Etag 的优先级比 Last-Modified 更高")]),t._v(" "),n("p",[t._v("Last-Modified 是服务器响应请求时，返回该资源文件在服务器最后被修改的时间，只能精确到秒级")]),t._v(" "),n("p",[t._v("ETag 是服务器响应请求时，返回当前资源文件的一个唯一标识（由服务器生成）")]),t._v(" "),n("p",[t._v("ETag 比 Last-Modified 更加严谨，如果资源发生变化，ETag、Last-Modified 都会发生变化，就会把最新的资源返回给客户端；但 Last-Modified 不能识别 "),n("strong",[t._v("秒")]),t._v(" 单位内的修改，即如果资源在秒单位内发生了变化，Last-Modified 是不会有变化的，如果此时的缓存策略使用的是 Last-Modified ，客户端得到的资源就不是最新的。")]),t._v(" "),n("h3",{attrs:{id:"from-disk-cache-和-from-memory-cache-区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#from-disk-cache-和-from-memory-cache-区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" from disk cache 和 from memory cache 区别？")]),t._v(" "),n("p",[t._v("内存缓存（from memory cache）和硬盘缓存（from disk cache）都使用了"),n("strong",[t._v("强缓存")]),t._v("，")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("from memory cache")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("from disk cache")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("存储位置")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("浏览器内存")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("硬盘")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("访问速度")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("更快")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("较慢")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("适用场景")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("最近访问的页面或资源")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不经常变动的资源，如静态文件、图片、css和js")])])])]),t._v(" "),n("h3",{attrs:{id:"只设置-etag，那么为什么在-chrome-下会有非验证性缓存呢？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#只设置-etag，那么为什么在-chrome-下会有非验证性缓存呢？","aria-hidden":"true"}},[t._v("#")]),t._v(" 只设置 Etag，那么为什么在 Chrome 下会有非验证性缓存呢？")]),t._v(" "),n("p",[t._v("没有设置 Cache-Control 这个头，其默认值是 Private ，在标准中明确说了：")]),t._v(" "),n("blockquote",[n("p",[t._v("Unless specifically constrained by a cache-control\ndirective, a caching system MAY always store a successful response")])]),t._v(" "),n("p",[t._v("如果没有 Cache-Control 进行限制，缓存系统"),n("strong",[t._v("可以")]),t._v("对一个成功的响应进行存储")]),t._v(" "),n("p",[t._v("很显然， Chrome 是遵守标准的，它在没有检查到 Cache-Control 的时候对响应做了非验证性缓存，所以你看到了 200 from memory cache\n同时 Safari 也是遵守标准的，因为标准只说了"),n("strong",[t._v("可以")]),t._v("进行存储，而非"),n("strong",[t._v("应当")]),t._v("或者"),n("strong",[t._v("必须")]),t._v("，所以 Safari 不进行缓存也是合理的")]),t._v(" "),n("p",[t._v("我们可以理解为，没有 Cache-Control 的情况下，缓存不缓存就看浏览器高兴，你也没什么好说的。那么你如今的需求是“明确不要非验证性缓存”，则从标准的角度来说，你"),n("strong",[t._v("必须")]),t._v("指定相应的 Cache-Control 头")]),t._v(" "),n("h3",{attrs:{id:"什么是启发式缓存，什么条件下触发？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是启发式缓存，什么条件下触发？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是启发式缓存，什么条件下触发？")]),t._v(" "),n("p",[t._v("如果响应中未显示 Expires、Cache-Control：max-age 或 Cache-Control：s-maxage，并且响应中不包含其他有关缓存的限制，缓存可以使用"),n("strong",[t._v("启发式方法")]),t._v("计算新鲜度寿命。通常会根据响应头中的 2 个时间字段 Date 减去 Last-Modified 值的 10% 作为缓存时间")]),t._v(" "),n("h3",{attrs:{id:"常见-cache-control-的-max-age-有效值设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见-cache-control-的-max-age-有效值设置","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见 Cache-Control 的 max-age 有效值设置")]),t._v(" "),n("p",[t._v("365 天："),n("code",[t._v("Cache-Control：max-age = 315360000")])]),t._v(" "),n("p",[t._v("30 天："),n("code",[t._v("Cache-Control：max-age = 25920000")])]),t._v(" "),n("h3",{attrs:{id:"浏览器如何对-html5-的离线存储资源进行管理和加载？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何对-html5-的离线存储资源进行管理和加载？","aria-hidden":"true"}},[t._v("#")]),t._v(" 浏览器如何对 HTML5 的离线存储资源进行管理和加载？")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("在线状态下的资源加载")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("当浏览器访问一个带有 "),n("strong",[t._v("manifest")]),t._v(" 属性的 HTML 页面时，浏览器会请求 manifest 文件")]),t._v(" "),n("li",[t._v("如果是首次访问，浏览器会根据 manifest 的内容下载响应的资源，并将资源存储在本地的缓存中")]),t._v(" "),n("li",[t._v("如果非首次访问，浏览器会直接从缓存中加载资源，无需再次请求")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("资源更新检查")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("浏览器会对比新的 manifest 文件和旧的 manifest 文件")]),t._v(" "),n("li",[t._v("没变化，浏览器不会做任何操作")]),t._v(" "),n("li",[t._v("有变化，浏览器会重新下载资源并更新缓存")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("离线状态下的资源使用")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("离线情况下，浏览器会直接使用本地的离线资源来加载页面")])])])]),t._v(" "),n("h3",{attrs:{id:"response-header-中-age-与-date"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#response-header-中-age-与-date","aria-hidden":"true"}},[t._v("#")]),t._v(" Response Header 中 Age 与 Date")]),t._v(" "),n("p",[n("strong",[t._v("Age")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("Age 响应头用于指示资源自从被生成后所经过的秒数，通常用于代理服务器，传达资源在代理缓存中存在的时间")]),t._v(" "),n("li",[t._v("Age 是一个相对时间，单位为秒，不可信，因为依赖于缓存的准确性")])]),t._v(" "),n("p",[n("strong",[t._v("Date")]),t._v(":")]),t._v(" "),n("ul",[n("li",[t._v("Date 响应头用于表示消息(请求或响应)生成的日期和时间，这个字段是一个绝对时间戳，通常用于确定资源的新鲜度")]),t._v(" "),n("li",[t._v("Date 是构建 HTTOP 消息的标准组成部分，它提供了一个固定参考点，用于确定其他与时间相关的字段，如 Expires 等等")])]),t._v(" "),n("p",[t._v("举例：")]),t._v(" "),n("p",[t._v("假设一个资源在服务器上生成的时间为2023-07-01 12:00:00，")]),t._v(" "),n("ul",[n("li",[t._v("并带有Date头："),n("code",[t._v("Date: Wed, 01 Jul 2023 12:00:00 GMT")])])]),t._v(" "),n("p",[t._v("如果该资源被缓存并在10秒后通过缓存提供给客户端，那么")]),t._v(" "),n("ul",[n("li",[t._v("响应头可能包含Age头："),n("code",[t._v("Age: 10")])])]),t._v(" "),n("p",[t._v("表示客户端接收到的资源是10秒前从缓存中生成的，但原始资源的生成时间由Date头提供")]),t._v(" "),n("p",[t._v("20240730")]),t._v(" "),n("h3",{attrs:{id:"🌟https-是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟https-是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟HTTPS 是什么？")]),t._v(" "),n("p",[n("strong",[t._v("HTTPS")]),t._v("（安全超文本传输协议）是一种用于在互联网上安全传输数据的协议。他是 HTTP（超文本传输协议）的安全版本，通过在 HTTP 中加入"),n("strong",[t._v("安全层SSL/TLS")]),t._v("协议来加密数据包，确保数据传输的安全性和完整性。")]),t._v(" "),n("p",[t._v("HTTPS = HTTP + 加密 + 认证 + 完整性保护")]),t._v(" "),n("p",[n("strong",[t._v("特点")])]),t._v(" "),n("ul",[n("li",[t._v("数据加密：HTTPS 使用 SSL/TLS 协议对数据进行加密，使得传输的数据不易被截获和篡改")]),t._v(" "),n("li",[t._v("身份验证：通过 SSL/TLS 证书，HTTPS 可以验证服务器身份，确保用户与真正的服务器通信，而不是一个伪装的服务器")]),t._v(" "),n("li",[t._v("数据完整性：HTTPS 确保数据在传输过程没被篡改，维护数据完整性")]),t._v(" "),n("li",[t._v("证书管理：HTTPS 需要到证书颁发机构 CA 申请获取 SSL/TLS 证书，证书需要定期更新维护")])]),t._v(" "),n("p",[t._v("补充：加密方式")]),t._v(" "),n("ul",[n("li",[t._v("对称加密：双方均有相同的秘钥，两边都知道如何将密文加密和解密。")]),t._v(" "),n("li",[t._v("非对称加密：有公钥和私钥之分，公钥加密，私钥解密。")])]),t._v(" "),n("h3",{attrs:{id:"http-和-https-的区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-和-https-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 和 HTTPS 的区别？")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("HTTPS")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("HTTP")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("安全性")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("加入了 SSL/TLS 协议进行数据加密和完整性、身份校验")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("明文传输，可能被篡改和截获")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("传输方式")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("在 SSL/TLS 安全层上，SSL/TLS 运行在 TCP 之上")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("直接与 TCP 进行数据传输")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("端口")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("默认 443")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("默认 80")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("URL格式")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("https开头")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("http开头")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("证书")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("需要到 CA 获取 SSL 证书")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不需要")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(455),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"https的通信（握手）过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#https的通信（握手）过程","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTPS的通信（握手）过程")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("客户端向服务器发起 HTTPS 请求，请求中包含客户端支持的加密算法和协议版本")])]),t._v(" "),n("li",[n("p",[t._v("服务器收到请求后，返回服务器证书，证书中包含服务器公钥、证书颁发机构、证书有效期等信息")])]),t._v(" "),n("li",[n("p",[t._v("客户端验证服务器证书，验证通过后，生成随机数，并使用证书中的公钥加密随机数，发送给服务器")])]),t._v(" "),n("li",[n("p",[t._v("服务器使用私钥解密，得到客户端生成的随机数，随机数再通过某种加密算法生成密钥，用于后续数据的加密和解密")])]),t._v(" "),n("li",[n("p",[t._v("客户端使用之前生成的随机数解密服务器发来的加密信息，如果解密成功，就验证了服务器拥有匹配的私钥")])]),t._v(" "),n("li",[n("p",[t._v("至此，客户端和服务器都拥有了相同的加密密钥，客户端使用这个密钥加密请求数据，服务器使用相同的密钥解密请求并处理")])])]),t._v(" "),n("h3",{attrs:{id:"get-和-post-的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#get-和-post-的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" GET 和 POST 的区别")]),t._v(" "),n("p",[t._v("get 和 post 是 http 协议中的两种，无论是 get 还是 post，用的都是一种传输协议，在传输上，get 和 post 没有本质上的区别，只有报文的形式不同，get 请求也可以传输 body，只不过被浏览器禁止了。")]),t._v(" "),n("p",[n("strong",[t._v("区别")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("数据传输方式")]),t._v("：\n"),n("ul",[n("li",[t._v("GET：通过 URL 传递参数，参数附加在URL上")]),t._v(" "),n("li",[t._v("POST：通过请求体 Body 传递数据，数据不会展示在URL上")])])]),t._v(" "),n("li",[n("strong",[t._v("数据大小限制")]),t._v("：\n"),n("ul",[n("li",[t._v("GET：因为参数拼接在URL上，有长度限制，不适合传输大量数据")]),t._v(" "),n("li",[t._v("POST：理论上没有大小限制，适合传输大量数据")])])]),t._v(" "),n("li",[n("strong",[t._v("安全性")]),t._v("：\n"),n("ul",[n("li",[t._v("GET：因为参数暴露在URL上，可以被浏览器保存在历史记录、收藏夹或服务器日志中，不适合传输敏感数据")]),t._v(" "),n("li",[t._v("POST：数据在请求体中，不会显示在URL或浏览器的历史记录中，相对更安全")])])]),t._v(" "),n("li",[n("strong",[t._v("应用场景")]),t._v("：\n"),n("ul",[n("li",[t._v("GET：通常用于请求数据，如获取网页或查询信息")]),t._v(" "),n("li",[t._v("POST：通常用于提交数据，如表单提交、创建或更新")])])]),t._v(" "),n("li",[n("strong",[t._v("缓存")]),t._v("：\n"),n("ul",[n("li",[t._v("GET：可以被缓存，浏览器或代理服务器缓存结果以提高性能")]),t._v(" "),n("li",[t._v("POST：不会被缓存，除非手动设置")])])]),t._v(" "),n("li",[n("strong",[t._v("跨站点请求伪造CSRF")]),t._v("：\n"),n("ul",[n("li",[t._v("GET：更容易受到 CSRF 攻击，因为攻击者可以通过构造 URL 诱导用户点击或访问")]),t._v(" "),n("li",[t._v("POST：相对安全，因为需要用户主动提交数据")])])])]),t._v(" "),n("h3",{attrs:{id:"http的长连接和短连接分别是什么？keep-alive是干什么的？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http的长连接和短连接分别是什么？keep-alive是干什么的？","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP的长连接和短连接分别是什么？keep-alive是干什么的？")]),t._v(" "),n("p",[t._v("HTTP 协议中的长连接和短连接实际上是 "),n("strong",[t._v("TCP")]),t._v(" 的长连接和短连接")]),t._v(" "),n("p",[n("strong",[t._v("短连接")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("定义")]),t._v("：在 HTTP 1.0 默认情况下，每个 TCP 连接只发送一个请求和响应，任务结束就会中断这个连接。")]),t._v(" "),n("li",[n("strong",[t._v("适用场景")]),t._v("：短连接适用于请求和响应之间没有依赖关系且不频繁交互的场景")]),t._v(" "),n("li",[n("strong",[t._v("缺点")]),t._v("：会导致额外的连接建立和关闭开销")])]),t._v(" "),n("p",[n("strong",[t._v("长连接")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("定义")]),t._v("：在 HTTP 1.1 中引入了长连接，也称为 HTTP 持久连接，使用长连接时，TCP 连接在发送完一个响应后不会关闭而是保持打开状态，以便后续请求可以复用同一个 TCP 连接（不发 RST 包、不用四次挥手）")]),t._v(" "),n("li",[n("strong",[t._v("适用场景")]),t._v("：适用于频繁交互或需要传输大量数据的场景")]),t._v(" "),n("li",[n("strong",[t._v("优点")]),t._v("：可以减少因频繁建立和关闭 TCP 连接而产生的开销，提高传输效率，利用长连接可以"),n("strong",[t._v("主动推送")]),t._v("消息到客户端")]),t._v(" "),n("li",[t._v("HTTP2 中默认使用长连接")])]),t._v(" "),n("p",[n("strong",[t._v("keep-alive")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("定义")]),t._v("：是一个 HTTP 头字段 "),n("code",[t._v("Connection: Keep-Alive")]),t._v("，代表客户端期望这次请求是长连接，但需要服务端支持；也可以指定一个时间值，用于告知服务器保持连接的持续时间")]),t._v(" "),n("li",[n("strong",[t._v("优点")]),t._v("：\n"),n("ul",[n("li",[t._v("减少连接建立和关闭的开销，提高连接的复用率")]),t._v(" "),n("li",[t._v("减少 TCP 三次握手和四次挥手的延迟")]),t._v(" "),n("li",[t._v("减少因频繁建立连接而产生的网络拥堵（TCP连接少了）")])])])]),t._v(" "),n("h3",{attrs:{id:"什么是-http-的持久连接？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-http-的持久连接？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是 HTTP 的持久连接？")]),t._v(" "),n("p",[t._v("HTTP 协议采用“请求-应答”模式，当使用普通模式，即非 Keep-Alive 模式时，每个请求和响应，客户端和服务器都要新建一个 TCP 连接，完成后立即断开连接（HTTP 协议为无连接协议）")]),t._v(" "),n("p",[t._v("HTTP 的持久连接，也称为 HTTP 长连接，允许多个 HTTP 请求和响应在同一个 TCP 连接上进行传输（复用同一个 TCP 连接）")]),t._v(" "),n("h3",{attrs:{id:"一个-tcp-连接能发几个-http-请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一个-tcp-连接能发几个-http-请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 一个 TCP 连接能发几个 http 请求")]),t._v(" "),n("p",[t._v("http1.0：一个 tcp 连接只能发一个 http 请求")]),t._v(" "),n("p",[t._v("http1.1：默认开启 Connection:keep-alive，一个 tcp 连接可以发多个 http 请求，但是多个请求是串行执行")]),t._v(" "),n("p",[t._v("http2.0：引入了多路复用和二进制分帧，同域下一个 tcp 连接可以并发多个 http 请求，请求和响应是并行执行")]),t._v(" "),n("h3",{attrs:{id:"http-的请求头和响应头中分别有哪些重要的字段？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-的请求头和响应头中分别有哪些重要的字段？","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 的请求头和响应头中分别有哪些重要的字段？")]),t._v(" "),n("p",[n("strong",[t._v("HTTP Request Headers 请求头")]),t._v("：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Host")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定目标服务器的域名或IP地址")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Cache-Control")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定资源的缓存方式")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Connection")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定连接的特定选项，如长连接")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Date")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定请求发送的日期和时间")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Type")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定请求发送的数据的类型，如 application/json")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Length")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定请求中发送的数据的长度，单位为字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Cookie")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("包含由服务器设置的 cookie 信息，后续请求会自动携带")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Authorization")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("用于向服务器提供身份验证信息")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Origin")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定请求的源")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Referer")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定原始 URL，即从哪个 URL 跳转到了当前页面")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Encoding")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定浏览器可以支持的服务器返回内容压缩编码类型，服务端根据该字段判断是否压缩、什么压缩方式，如 gzip")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Language")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定浏览器可支持的自然语言类型，如 zh-CN,zh;")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("User-Agent")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("浏览器标识")])])])]),t._v(" "),n("p",[n("strong",[t._v("HTTP Response  Headers 响应头")]),t._v("：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Accept-Control-Allow-Origin")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定允许跨域请求的来源 CORS")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Age")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("响应生成后经过的时间")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Date")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("响应生成的日期和时间")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Type")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定响应数据的媒体类型，如 text/html 表示 HTML 文档")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Length")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定响应体的长度，单位为字节")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Cache-Control")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定缓存策略")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Expires")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定缓存过期时间")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("ETag")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("资源的标识，如 key，用于校验资源是否被修改过")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Content-Encoding")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定响应数据的编码方式，如 gzip")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Set-Cookie")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("用于在客户端设置 cookie")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Location")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("指定重定向的 URL")])])])]),t._v(" "),n("h3",{attrs:{id:"如何前后端配合自定义请求响应头字段？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何前后端配合自定义请求响应头字段？","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何前后端配合自定义请求响应头字段？")]),t._v(" "),n("p",[t._v("前端如果要获取"),n("code",[t._v("response header")]),t._v("里面的值，")]),t._v(" "),n("ul",[n("li",[t._v("通过"),n("code",[t._v("XMLHttpRequest")]),t._v("实例的"),n("code",[t._v("getResponseHeader()")]),t._v("方法进行获取")]),t._v(" "),n("li",[t._v("和后端配合"),n("code",[t._v("Access-Control-Expose-Headers")]),t._v("来实现")])]),t._v(" "),n("p",[t._v("但是根据"),n("a",{attrs:{href:"https://www.w3.org/TR/2014/REC-cors-20140116/",target:"_blank",rel:"noopener noreferrer"}},[t._v("w3c-cors 标准"),n("OutboundLink")],1),t._v("，只有"),n("code",[t._v("simple-response-header")]),t._v("和设置了"),n("code",[t._v("Access-Control-Expose-Headers")]),t._v("指定字段才可以被"),n("code",[t._v("getResponseHeader()")]),t._v("获取到，")]),t._v(" "),n("p",[t._v("关于"),n("code",[t._v("simple-response-header")]),t._v("有以下这几种：")]),t._v(" "),n("ul",[n("li",[t._v("Cache-Control")]),t._v(" "),n("li",[t._v("Content-Language")]),t._v(" "),n("li",[t._v("Content-Type")]),t._v(" "),n("li",[t._v("Expires")]),t._v(" "),n("li",[t._v("Last-Modified")]),t._v(" "),n("li",[t._v("Pragma")])]),t._v(" "),n("p",[t._v("这几种都可以获取到。")]),t._v(" "),n("p",[t._v("但是，如果我想自定义一个字段，就需要和后端配合"),n("code",[t._v("Access-Control-Expose-Headers")]),t._v("来实现")]),t._v(" "),n("p",[t._v("比如在"),n("code",[t._v("koa")]),t._v("中，设置对应的字段即可：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("router"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/get"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Expose-Headers"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"token"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123456"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  ctx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("使用"),n("code",[t._v("axios")]),t._v("请求就能在返回的对象"),n("code",[t._v("headers")]),t._v("字段中获取：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("axios"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/get"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("token"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '123456'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"常见的-http-请求方法有哪些？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见的-http-请求方法有哪些？","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见的 HTTP 请求方法有哪些？")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("GET")]),t._v("：最常用的请求方法，通常用于获取 HTML 资源、页面展示数据，请求参数拼接在 URL 后，通过符号 ? 分割 URL 和参数")]),t._v(" "),n("li",[n("strong",[t._v("POST")]),t._v("：通常用于提交、修改数据的请求，请求参数设在请求体中，适合发送大量数据")]),t._v(" "),n("li",[n("strong",[t._v("PUT")]),t._v("：通常用于更新资源的请求")]),t._v(" "),n("li",[n("strong",[t._v("DELETE")]),t._v("：通常用于删除资源的请求")]),t._v(" "),n("li",[n("strong",[t._v("OPTIONS")]),t._v("：通常用于请求查询服务器支持哪些 HTTP 方法，用于跨域请求时的预检请求（preflight request）")]),t._v(" "),n("li",[n("strong",[t._v("PATCH")]),t._v("：与 PUT 不同，PATCH 用于对资源局部更新，而不是替换整个资源")]),t._v(" "),n("li",[n("strong",[t._v("CONNECT")]),t._v("：请求使用服务器作为代理，建立到指定目的地的 TCP 连接")])]),t._v(" "),n("h3",{attrs:{id:"options-预请求"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#options-预请求","aria-hidden":"true"}},[t._v("#")]),t._v(" OPTIONS 预请求")]),t._v(" "),n("p",[t._v("OPTIONS 是除了 GET 和 POST 外的一种 HTTP 请求方法。")]),t._v(" "),n("p",[n("strong",[t._v("主要用途")]),t._v("：")]),t._v(" "),n("ol",[n("li",[t._v("获取服务器支持的 HTTP 请求方法")]),t._v(" "),n("li",[t._v("获取访问权限，如进行 CORS 跨域资源共享时，通过预检请求判断是否有对指定资源的访问权限")])]),t._v(" "),n("p",[n("strong",[t._v("出现场景")]),t._v("：")]),t._v(" "),n("ol",[n("li",[t._v("非简单请求：")])]),t._v(" "),n("ul",[n("li",[t._v("使用了这些请求方法：PUT/DELETE/CONNECT/OPTIONS/TRACE/PATCH")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[t._v("人为设置了以下集合之外的请求头")]),t._v(" "),n("ul",[n("li",[t._v("Accept")]),t._v(" "),n("li",[t._v("Accept-Language")]),t._v(" "),n("li",[t._v("Content-Language")]),t._v(" "),n("li",[t._v("Content-Type")]),t._v(" "),n("li",[t._v("DPR")]),t._v(" "),n("li",[t._v("Downlink")]),t._v(" "),n("li",[t._v("Save-Data")]),t._v(" "),n("li",[t._v("Viewport-Width")]),t._v(" "),n("li",[t._v("Width")])])]),t._v(" "),n("li",[n("p",[t._v("Content-Type 不属于以下这几种")]),t._v(" "),n("ul",[n("li",[t._v("application/x-www-form-urlencoded")]),t._v(" "),n("li",[t._v("multipart/form-data")]),t._v(" "),n("li",[t._v("text/plain")])])])]),t._v(" "),n("p",[t._v("补充：")]),t._v(" "),n("p",[t._v("跨源资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站通过浏览器有权限访问哪些资源。")]),t._v(" "),n("p",[t._v("非简单请求的 CORS 请求，比如像 POST、PUT、DELETE 或者 Content-Type 类型为 application/json 的请求，会在正式通信前，增加一次 HTTP 查询请求，也就是预检请求。浏览器会先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用哪些 HTTP 头信息字段。只有得到肯定答复后，浏览器才会发出正式的 HTTP 请求，否者就报错")]),t._v(" "),n("p",[t._v("20240731")]),t._v(" "),n("h3",{attrs:{id:"http-1-0-特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0-特性","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 1.0 特性")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("无状态")]),t._v("：服务器不跟踪不记录请求过的状态")]),t._v(" "),n("li",[n("strong",[t._v("无连接")]),t._v("：每个请求/响应都需要建立一个新的连接，不支持持久连接")])]),t._v(" "),n("p",[n("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("无法复用连接")]),t._v("：每次发送请求，都需要进行一次 tcp 连接（即 3 次握手 4 次挥手），使得网络的利用率非常低")]),t._v(" "),n("li",[n("strong",[t._v("队头阻塞")]),t._v("：http1.0 规定在前一个请求响应到达之后下一个请求才能发送，如果前一个阻塞，后面的请求也给阻塞的")])]),t._v(" "),n("h3",{attrs:{id:"http-1-1-特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1-特性","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 1.1 特性")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("长连接")]),t._v("：新增 Connection 字段，设置 keep-alive 值保持连接不断开，复用 TCP 连接 (这就是所谓的 HTTP 长连接或 HTTP 持久连接)")]),t._v(" "),n("li",[n("strong",[t._v("管道化")]),t._v("：基于长连接的基础，管道化可以不等第一个请求响应继续发送后面的请求，但响应的顺序还是按照请求的顺序返回")]),t._v(" "),n("li",[n("strong",[t._v("缓存处理")]),t._v("：引入了更多缓存机制，如 Etag、If-Match 等等")]),t._v(" "),n("li",[n("strong",[t._v("断点传输")]),t._v("：增加 range 头域，允许只请求资源的某个部分，返回码是 206")])]),t._v(" "),n("p",[t._v("普通的持久连接："),n("code",[t._v("请求1 > 响应1 --\x3e 请求2 > 响应2 --\x3e 请求3 > 响应3")])]),t._v(" "),n("p",[t._v("管道化的持久连接："),n("code",[t._v("请求1 --\x3e 请求2 --\x3e 请求3 > 响应1 --\x3e 响应2 --\x3e 响应3")])]),t._v(" "),n("p",[n("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("仍然存在队头阻塞")]),t._v("：虽然管道化，可以一次发送多个请求，但是响应仍是顺序返回（通常一次最多处理 6 个请求，但因浏览器而异）")])]),t._v(" "),n("h3",{attrs:{id:"🌟http-2-0-新特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟http-2-0-新特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟HTTP 2.0 新特性")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("二进制分帧")]),t._v("：采用二进制格式传输数据，将请求和响应数据分割为更小的帧，提高了解析效率")]),t._v(" "),n("li",[n("strong",[t._v("多路复用")]),t._v("： 允许一个 TCP 连接可以并发处理多个请求和响应，彻底"),n("strong",[t._v("解决了队头阻塞")])]),t._v(" "),n("li",[n("strong",[t._v("头部压缩")]),t._v("：使用了 HPACK算法对 HTTP 请求和响应的首部进行压缩")]),t._v(" "),n("li",[n("strong",[t._v("服务器推送")]),t._v("：服务器可以主动向客户端推送资源，而无需客户端明确的请求")])]),t._v(" "),n("p",[t._v("补充：多路复用采用二进制分帧，http 消息被分解为独立的帧，乱序发送，服务端根据标识符和首部将消息重新组装起来（ 多路复用是指复用一个 tcp 链接，多路是指二进制的帧数据可以并行传输，不需要顺序传输）")]),t._v(" "),n("h3",{attrs:{id:"🌟-http2-的头部压缩原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#🌟-http2-的头部压缩原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 🌟 HTTP2 的头部压缩原理")]),t._v(" "),n("p",[t._v("为什么需要"),n("strong",[t._v("头部压缩")]),t._v("？")]),t._v(" "),n("p",[t._v("因为在 HTTP/1.1 中，HTTP 请求和响应头都是纯文本格式，每次请求都会重复发送头部信息，存在头部信息冗余和性能浪费，对于同一个 TCP 连接的多个请求，重复发送相同的头部信息增加了传输开销")]),t._v(" "),n("p",[n("strong",[t._v("解决方案")]),t._v(" HTTP/2 中引入了头部压缩，使用 HPACK 算法高效压缩头部信息，它的核心实现点：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("静态表和动态表")])]),t._v(" "),n("li",[n("strong",[t._v("增量更新和编码")])])]),t._v(" "),n("p",[t._v("什么是"),n("strong",[t._v("静态表")]),t._v("？")]),t._v(" "),n("ul",[n("li",[t._v("定义：HTTP/2 定义的一张固定表，包含常用的头部字段和常见值，比如 :method GET 的索引号是 2")]),t._v(" "),n("li",[t._v("优点：头部字段固定不变，客户端和服务端都能使用")])]),t._v(" "),n("p",[t._v("什么是"),n("strong",[t._v("动态表")]),t._v("？")]),t._v(" "),n("ul",[n("li",[t._v("定义：动态表是客户端和服务端"),n("strong",[t._v("共享的一个可变的头部字段和值的集合")]),t._v("；用于存储最近传输的头部信息，并为其分配索引号")]),t._v(" "),n("li",[t._v("优点：支持动态更新，头部信息传输后可缓存，用于后续请求复用")])]),t._v(" "),n("p",[t._v("什么是"),n("strong",[t._v("增量编码")]),t._v("？")]),t._v(" "),n("ul",[n("li",[t._v("定义：只传输新增或修改的头部字段，未改变的头部，直接使用静态表或动态表的索引")])]),t._v(" "),n("p",[n("strong",[t._v("示例流程")])]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("头部字段查表")]),t._v(" "),n("ul",[n("li",[t._v("查找该字段是否存在静态表或动态表中")]),t._v(" "),n("li",[t._v("如果存在，直接使用索引号代替字段名和字段值")])])]),t._v(" "),n("li",[n("strong",[t._v("动态表更新")]),t._v(" "),n("ul",[n("li",[t._v("如果头部字段不在表中，传输完整的字段和值，并将其加入动态表")])])]),t._v(" "),n("li",[n("strong",[t._v("传输压缩数据")]),t._v(" "),n("ul",[n("li",[t._v("将索引号或新增的字段值通过二进制编码发送给")])])]),t._v(" "),n("li",[n("strong",[t._v("解码并更新动态表")]),t._v(" "),n("ul",[n("li",[t._v("接收端解码索引号或新增字段，更新自己的动态表")])])])]),t._v(" "),n("h3",{attrs:{id:"简单讲下-http2-的多路复用原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单讲下-http2-的多路复用原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 简单讲下 HTTP2 的多路复用原理")]),t._v(" "),n("p",[t._v("多路复用是指 允许在单个TCP连接上并行传输多个请求和响应")]),t._v(" "),n("p",[t._v("基于以下功能：")]),t._v(" "),n("ol",[n("li",[t._v("并行传输：HTTP/2 允许客户端和服务器在同一个TCP连接上并行发送多个请求和响应")]),t._v(" "),n("li",[t._v("二进制分帧：HTTP/2 使用了基于帧的二进制协议，将请求和响应分解为多个较小的消息帧")])]),t._v(" "),n("h3",{attrs:{id:"http-1-0-和-http-1-1-和-http-2-0-区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0-和-http-1-1-和-http-2-0-区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 1.0 和 HTTP 1.1 和 HTTP 2.0 区别？")]),t._v(" "),n("ol",[n("li",[t._v("http1.0 到 http1.1 的主要区别，就是从无连接到长连接")]),t._v(" "),n("li",[t._v("http2.0 对比 1.X 版本主要区别就是多路复用、头部压缩、服务器推送")])]),t._v(" "),n("h3",{attrs:{id:"多路复用和长连接复用有什么区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#多路复用和长连接复用有什么区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 多路复用和长连接复用有什么区别？")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("长连接复用（HTTP/1.1 Pipelining）")])])]),t._v(" "),n("ul",[n("li",[t._v("长连接复用是 HTTP/1.1 引入的新特性，允许单个 TCP 连接上发送多个请求，而不需要等待响应")]),t._v(" "),n("li",[t._v("客户端可以在收到上一个响应之前再发送下一个请求，减少了连接建立和关闭的开销")]),t._v(" "),n("li",[t._v("存在"),n("strong",[t._v("队头阻塞")]),t._v("的问题，即一个响应被阻塞，后面的响应也会被阻塞")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("strong",[t._v("多路复用（HTTP/2.0 Multiplexing）")])])]),t._v(" "),n("ul",[n("li",[t._v("多路复用是 HTTP/2.0 引入的新特性，允许通信都在单个 TCP 连接上完成")]),t._v(" "),n("li",[t._v("与长连接复用不同，多路复用将请求和响应分割成较小的帧，这些帧可以乱序发送（"),n("strong",[t._v("并发执行")]),t._v("），并在客户端或服务端重新组装")]),t._v(" "),n("li",[t._v("解决了"),n("strong",[t._v("队头阻塞")]),t._v("的问题，即使某个响应被延迟，也不会影响到其他请求的处理")])]),t._v(" "),n("h3",{attrs:{id:"http-协议的优点和缺点？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-协议的优点和缺点？","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 协议的优点和缺点？")]),t._v(" "),n("p",[t._v("HTTP 是超文本传输协议，定义了客户端和服务端之间"),n("strong",[t._v("交换报文的格式和方式")]),t._v("，默认使用80端口，使用 TCP 作为传输层协议，保证了数据传输的可靠性。")]),t._v(" "),n("p",[n("strong",[t._v("优点")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("支持客户端/服务器模式")]),t._v(" "),n("li",[n("strong",[t._v("简单快速")]),t._v("：发送请求只需要传送请求方法和路径")]),t._v(" "),n("li",[n("strong",[t._v("无连接")]),t._v("：限制每次连接只处理一个请求")]),t._v(" "),n("li",[n("strong",[t._v("无状态")]),t._v("：不需要处理通信过程的上下文信息")])]),t._v(" "),n("p",[n("strong",[t._v("缺点")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("明文传输")]),t._v("：协议中的报文使用的是文本格式，直接暴露到外部，不安全，可能会被篡改")])]),t._v(" "),n("h3",{attrs:{id:"http-常见状态码和区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#http-常见状态码和区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 常见状态码和区别？")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("2XX（SUccess 成功状态码）")])]),t._v(" "),n("li",[n("strong",[t._v("3XX（Redirection 重定向状态码）")])]),t._v(" "),n("li",[n("strong",[t._v("4XX（Client Error 客户端错误码）")])]),t._v(" "),n("li",[n("strong",[t._v("5XX（Sercer Error 服务端错误码）")])])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("定义")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("解释")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("200")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("OK")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("客户端请求成功")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("206")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Partial Content")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("客户端发送了带有 Range 头的 GET 请求，服务端执行并返回了响应头带有 Content-Range 的内容")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("301")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Moved Permanently")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("永久重定向")]),t._v(" 所请求的页面已经永久转移致新的 url，如更换域名")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("302")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Found")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("strong",[t._v("临时重定向")]),t._v(" 所请求的页面已经临时转移至新的 url，如未登录重定向到登录页")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("303")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("See Other")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("表示所请求的资源存在另一个 url，应使用 GET 请求获取")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("304")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Not Modified")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("客户端有缓存的内容并发出了一个条件性的请求，服务端告诉客户，原来缓存的内容还可以继续使用")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("400")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Bad Request")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("客户端请求有语法错误，不能被服务端所解析（前端提交数据的字段名称和类型与后台的实体没有保持一致）")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("401")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Unauthriozed")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("请求未经授权，这个状态码必须和 WWW-Authenticate 报头一起用")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("403")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Forbidden")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("服务端禁止访问请求的资源")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("404")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Not Found")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("请求资源不存在")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("500")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Internal Server Error")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("服务端执行请求时发生了错误")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("503")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Server Unavailable")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("请求未完成，服务器临时过载或宕机，一段时间后可能恢复正常")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("504")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("Gateway Timeout")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[t._v("网关或代理服务器超时")])])])]),t._v(" "),n("h3",{attrs:{id:"什么是-dns？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是-dns？","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是 DNS？")]),t._v(" "),n("p",[n("strong",[t._v("DNS")]),t._v(" 是域名系统 Domain Name System 的缩写，提供了将"),n("strong",[t._v("主机名到IP地址转换的服务")]),t._v("，这个过程叫做"),n("strong",[t._v("域名解析")]),t._v("。")]),t._v(" "),n("p",[t._v("它是一个由分层的 DNS 服务器组成的分布式数据库，定义了主机如何查询这个分布式数据库的应用层协议")]),t._v(" "),n("p",[n("strong",[t._v("应用")]),t._v("：将域名解析为 IP 地址，客户端向 DNS 服务器（DNS 服务器有自己的IP地址）发送域名查询请求，DNS 服务器告知客户机 Web 服务器的 IP 地址")]),t._v(" "),n("p",[n("strong",[t._v("DNS 同时使用 TCP 和 UDP 协议")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("在区域传输时使用 TCP 协议")]),t._v("：因为数据同步传送的数据量比一个请求应答的数据量要大得多")]),t._v(" "),n("li",[n("strong",[t._v("在域名解析时使用 UDP 协议")]),t._v("：因为返回内容不超过512字节，一般使用 UDP 传输即可，这样负载更低，响应更快")])]),t._v(" "),n("h3",{attrs:{id:"为什么需要-dns-解析域名为-ip-地址？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要-dns-解析域名为-ip-地址？","aria-hidden":"true"}},[t._v("#")]),t._v(" 为什么需要 DNS 解析域名为 IP 地址？")]),t._v(" "),n("p",[t._v("网络通讯大部分是基于 TCP/IP 的，而 TCP/IP 是基于 IP 地址的，所有计算机在网络上进行通讯时只能识别如“202.96.134.133” 之类的 IP 地址，而不能识别域名”www.baidu.com“。但实际应用时，我们无法记住多个 IP 地址的网站，访问网站时，更多是通过在地址栏中输入域名。")]),t._v(" "),n("p",[t._v("为什么输入域名后就能访问成功呢？这是因为有一个叫”DNS 服务器“的计算机自动帮我们把域名”翻译“成 IP 地址，然后调出 IP 地址对应的网页")]),t._v(" "),n("h3",{attrs:{id:"域名的层级关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#域名的层级关系","aria-hidden":"true"}},[t._v("#")]),t._v(" 域名的层级关系")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("顶级域名（Top-Level Domain，TLD）")]),t._v("：如 .com、.org、.net、.cn、.us、.uk 等等")]),t._v(" "),n("li",[n("strong",[t._v("二级域名（Second-Level Domain，SLD）")]),t._v("：如 example.com 中的 example，一般由组织或公司名称组成")]),t._v(" "),n("li",[n("strong",[t._v("三级域名（Third-Level Domain，3LD）")]),t._v("：如 subdomain.example.com 中的 subdomain")]),t._v(" "),n("li",[n("strong",[t._v("主机名或子域名")]),t._v("：如 www.example.com 中的 www，是三级域名之前的部分，可以是任何组织选择的名称")])]),t._v(" "),n("p",[n("strong",[t._v("举例")]),t._v("：以 www.kimi.moonshot.cn 为例")]),t._v(" "),n("ul",[n("li",[t._v("顶级域名：.cn 这是国家特定的顶级域名，代表中国")]),t._v(" "),n("li",[t._v("二级域名：moonshot 通常是公司或组织的名称")]),t._v(" "),n("li",[t._v("三级域名：kimi 可以是组织特定服务的名称")]),t._v(" "),n("li",[t._v("主机名或子域名：www 通常代表网站的主服务器")])]),t._v(" "),n("h3",{attrs:{id:"dns-解析过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns-解析过程","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS 解析过程")]),t._v(" "),n("ol",[n("li",[t._v("首先查找在"),n("strong",[t._v("浏览器的缓存")]),t._v("中是否有对应的 IP 地址，如果有直接返回，否则继续下一步")]),t._v(" "),n("li",[t._v("将请求发送给"),n("strong",[t._v("本地 DNS 服务器")]),t._v("，在本地 DNS 服务器缓存中查询，如果有直接返回，否则继续下一步")]),t._v(" "),n("li",[t._v("本地 DNS 服务器向"),n("strong",[t._v("根域名服务器")]),t._v("发送请求，根域名服务器会返回一个所查询 域的顶级服务器地址")]),t._v(" "),n("li",[t._v("本地 DNS 服务器向"),n("strong",[t._v("顶级域名服务器")]),t._v("发送请求，接受请求的服务器查询自己的缓存，如果有缓存直接返回，否则就返回相关的下一级的权威域名服务器地址")]),t._v(" "),n("li",[t._v("本地 DNS 服务器向"),n("strong",[t._v("权威域名服务器")]),t._v("发送请求，域名服务器返回对应结果")]),t._v(" "),n("li",[t._v("本地 DNS 服务器将返回的结果保存在缓存中，便于下次使用")]),t._v(" "),n("li",[t._v("本地 DNS 服务器将返回结果返回给浏览器")])]),t._v(" "),n("p",[t._v("总结：查询缓存--\x3e根域名服务器--\x3e顶级域名服务器--\x3e主域名服务器--\x3e下一级域名服务器或直接返回结果")]),t._v(" "),n("p",[n("strong",[t._v("举例")]),t._v("：")]),t._v(" "),n("p",[t._v("如果想要查询 www.baidu.com 的 IP 地址，我们首先会在浏览器的缓存中查找是否有该域名的缓存，如果不存在就将请求发送到本地的 DNS 服务器中，本地DNS服务器会判断是否存在该域名的缓存；如果不存在，则向根域名服务器发送一个请求，根域名服务器返回负责 .com 的顶级域名服务器的 IP 地址的列表；然后本地 DNS 服务器再向其中一个负责 .com 的顶级域名服务器发送一个请求，负责 .com 的顶级域名服务器返回负责 .baidu 的权威域名服务器的 IP 地址列表；然后本地 DNS 服务器再向其中一个权威域名服务器发送一个请求，最后权威域名服务器返回一个对应的主机名的 IP 地址列表。")]),t._v(" "),n("p",[n("strong",[t._v("详细过程")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v('客户端输入域名，如"www.163.com"，会先检查本地的 hosts 文件是否有该网址的映射关系，如果 host 文件没有该地址映射，再查找路由器缓存，如果还没则查找本地 DNS 解析器缓存，有就直接返回，否则电脑就会发出一个 DNS 请求到'),n("strong",[t._v("本地 DNS 服务器")]),t._v("（本地 DNS 服务器一般是网络接入服务器商提供的，如中国电信、中国移动）(浏览器缓存-系统缓存-路由器缓存-ISP DNS 缓存)")])]),t._v(" "),n("li",[n("p",[t._v("根据本地 DNS 服务器的设置（是否设置转发器）进行查询，如果未用转发器，本地 DNS 服务器还要向 "),n("strong",[t._v("根 DNS 服务器")]),t._v("查询；如果是转发模式，本地 DNS 服务器会向"),n("strong",[t._v("上一级 DNS 服务")]),t._v("查询，如果还不能解析，或找 根 DNS 服务器或把转发请求转至上上级，以此循环")])]),t._v(" "),n("li",[n("p",[t._v("根 DNS 服务器没有记录具体域名和 IP 地址的对应关系，而是告诉本地 DNS 服务器，可以到"),n("strong",[t._v("域服务器")]),t._v("上继续查询，并给出负责该顶级域名服务器的 IP 地址")])]),t._v(" "),n("li",[n("p",[t._v("本地 DNS 服务器继续向域服务器发出请求，上图例子中，请求对象是 .com 域服务器，.com 域服务器收到请求后，也不会直接返回域名和 IP 地址的对应关系，而是告诉本地 DNS 服务器，你的"),n("strong",[t._v("域名的解析服务器")]),t._v("地址")])]),t._v(" "),n("li",[n("p",[t._v("本地 DNS 服务器向域名的解析服务器发出请求，这时就能收到一个域名和 IP 地址对应关系，本地 DNS 服务器不仅将 IP 地址返回给用户电脑，还会把该对应关系保存在本地服务器的缓存中，以备下次查询，可以直接返回结果，加快网络访问（获取 IP 地址后，就可以向该 IP 地址定位的 HTTP 服务器发起 TCP 连接）")])])]),t._v(" "),n("p",[n("strong",[t._v("关于 DNS 解析的 TTL 参数：")])]),t._v(" "),n("p",[t._v("配置 DNS 解析时，需要注意 TTL 参数。 "),n("strong",[t._v("TTL")]),t._v("，Time to Live，用于告诉本地 DNS 服务器，域名缓存的最长时间。")]),t._v(" "),n("p",[t._v("比如，阿里云解析默认的 TTL 是 10 分钟，含义是本地 DNS 服务器对于域名的缓存时间是 10 分钟，10 分钟后本地 DNS 服务器就会删除这条记录；删除之后，如果用户再次访问这个域名，就会重复 DNS 解析过程")]),t._v(" "),n("h3",{attrs:{id:"dns-劫持有什么解决方案？（星巴克科技）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns-劫持有什么解决方案？（星巴克科技）","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS 劫持有什么解决方案？（星巴克科技）")]),t._v(" "),n("ol",[n("li",[t._v("使用 HTTPS 和 HSTS：强制使用 HTTPS，因为 SSL/TLS 安全协议的证书验证可以防止攻击者伪造")]),t._v(" "),n("li",[t._v("使用 DNS over HTTPS（DoH）协议：DoH 是指将 DNS 请求和响应加密并通过 HTTPS 传输")]),t._v(" "),n("li",[t._v("使用 DNSSEC：配置支持 DNSSEC 的域名，为 DNS 响应提供数字签名，确保解析结果的真实性和完整性，从而防止攻击者篡改 DNS 数据")]),t._v(" "),n("li",[t._v("最佳方案是 DoH 结合 DNSSEC：DNSSEC防止解析数据被篡改，DoH保护查询数据在传输中不被劫持和窃听，结合使用能提供更全面的保护")])]),t._v(" "),n("p",[t._v("DNSSEC 防止 DNS劫持的流程：")]),t._v(" "),n("ul",[n("li",[t._v("客户端向DNS服务器请求域名解析时，DNS服务器会返回解析结果以及对应的数字签名")]),t._v(" "),n("li",[t._v("客户端使用公钥验证签名，确保\n"),n("ul",[n("li",[t._v("DNS数据确实来自权威DNS服务器（真实性）")]),t._v(" "),n("li",[t._v("DNS数据在传输过程中没有被修改（完整性）")])])])]),t._v(" "),n("h3",{attrs:{id:"dns-优化有什么手段？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns-优化有什么手段？","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS 优化有什么手段？")]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("预解析 DNS")]),t._v("：使用的 HTML 加入标签")]),t._v(" "),n("ul",[n("li",[n("code",[t._v('<meta http-equiv="x-dns-prefetch-control" content="on" />')]),t._v(" 用meta信息来告知浏览器, 当前页面要做DNS预解析")]),t._v(" "),n("li",[n("code",[t._v('<link rel="dns-prefetch" />')]),t._v(" 在页面header中使用link标签来强制对DNS预解析")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("使用 HTTP/2")]),t._v("：HTTP/2支持多路复用，允许单个 TCP 连接上并行传输多个请求和响应，减少了 DNS 查询和 TCP 握手的需求")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("利用DNS缓存")]),t._v("：确保客户端、本地DNS服务器和递归DNS服务器的缓存策略配置得当，以利用缓存减少DNS查询")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("配置合理的TTL")]),t._v("：设置合适的TTL值，以便DNS记录在DNS服务器上被缓存合适的时间。太短可能导致频繁的DNS查询，太长可能导致更新不及时")])])]),t._v(" "),n("h3",{attrs:{id:"dns-查询规则是什么-？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dns-查询规则是什么-？","aria-hidden":"true"}},[t._v("#")]),t._v(" DNS 查询规则是什么 \b？")]),t._v(" "),n("ul",[n("li",[t._v("查找缓存：浏览器缓存、本地 hosts 文件缓存、路由缓存和本地 DNS 缓存")]),t._v(" "),n("li",[t._v("请求 根服务器，获取 域服务器地址")]),t._v(" "),n("li",[t._v("请求 域服务器，获取 域名的解析服务器地址")]),t._v(" "),n("li",[t._v("请求 域名的解析服务器地址，获取域名和 ip 的对应关系")])]),t._v(" "),n("p",[t._v("接着：获取 IP 地址后，就可以向该 IP 地址定位的 HTTP 服务器发起 TCP 请求，三次握手后建立完连接，开始请求 HTML 文件，如果 HTML 文件在缓存里浏览器就直接返回，没有就去后台拿")]),t._v(" "),n("p",[t._v("来源："),n("a",{attrs:{href:"https://juejin.cn/post/6928677404332425223",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里面试官的”说一下从 url 输入到返回请求的过程“"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"tcp-和-udp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tcp-和-udp","aria-hidden":"true"}},[t._v("#")]),t._v(" TCP 和 UDP")]),t._v(" "),n("p",[n("strong",[t._v("TCP")]),t._v("：传输控制协议，是一种面向连接的、可靠的、基于字节流的传输层协议。")]),t._v(" "),n("p",[n("strong",[t._v("UDP")]),t._v("：用户数据报协议，协议是面向无连接的，也就是说不需要在正式传递数据之前先连接起双方。")]),t._v(" "),n("p",[n("strong",[t._v("两者区别")])]),t._v(" "),n("ul",[n("li",[t._v("TCP 需要建立连接，UDP 不需要")]),t._v(" "),n("li",[t._v("TCP 提供可靠的数据传输，UDP 不保证")]),t._v(" "),n("li",[t._v("TCP 适用于需要可靠传输的应用，如网页浏览、文件传输等；UDP 适用于对实时性要求高的应用，如在线游戏、实时视频会议等")])]),t._v(" "),n("h3",{attrs:{id:"osi-七层模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#osi-七层模型","aria-hidden":"true"}},[t._v("#")]),t._v(" OSI 七层模型")]),t._v(" "),n("p",[n("img",{attrs:{src:a(456),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"websocket"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#websocket","aria-hidden":"true"}},[t._v("#")]),t._v(" WebSocket")]),t._v(" "),n("p",[n("strong",[t._v("定义")]),t._v("：WebSocket，是一个持久化的网络通信协议，可以在单个 TCP 连接上进行"),n("strong",[t._v("全双工通讯")]),t._v("，客户端和服务端之间可以进行双向数据传输")]),t._v(" "),n("p",[n("strong",[t._v("原理")]),t._v("：客户端向 WebSocket 服务器通知（notify）一个带有所有接收者 ID （recipients IDs）的事件（event），服务器接收后立即通知所有活跃的（active）客户端，只有 ID 在接收者 ID 序列中的客户端才会处理")]),t._v(" "),n("p",[n("strong",[t._v("特点")]),t._v("：服务器也可以向客户端主动推送消息，客户端也可以主动向服务端推送消息")]),t._v(" "),n("ul",[n("li",[t._v("支持双向通信，实时性更强")]),t._v(" "),n("li",[t._v("可以发送文本或二进制数据")]),t._v(" "),n("li",[t._v("建立在 TCP 协议之上，服务端的实现比较容易")]),t._v(" "),n("li",[t._v("数据格式比较轻重，性能开销小，通信高效")]),t._v(" "),n("li",[t._v("没有同源限制，客户端可以与任意服务器通信")]),t._v(" "),n("li",[t._v("协议标识符为 ws（如果加密，则为 wss）")])]),t._v(" "),n("p",[t._v("补充：WebSocket 是 HTML5 提供的一种浏览器与服务器进行"),n("strong",[t._v("全双工通讯")]),t._v("的网络技术，属于应用层协议。它基于 TCP 传输协议，并复用 HTTP 的握手通道，浏览器和服务器只需要完成"),n("strong",[t._v("一次握手")]),t._v("，两者之间就直接可以创建持久性的连接，并进行双向数据传输。")]),t._v(" "),n("p",[n("strong",[t._v("websocket 握手")]),t._v("：客户端建立连接时，通过 HTTP 发起请求报文，借用"),n("code",[t._v("101 switch protocol")]),t._v("进行协议转换")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("GET /chat HTTP/1.1\nHost: server.example.com\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==\nSec-WebSocket-Protocol: chat, superchat\nSec-WebSocket-Version: 13\n")])])]),n("p",[t._v("与 HTTP 不一样的地方在于如下这些协议头，表示发起 websocket 协议")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Upgrade: websocket\nConnection: Upgrade\n")])])]),n("p",[n("code",[t._v("Sec-WebSocket-Key")]),t._v("为客户端随机生成的 Base64 编码的字符串，服务端接收后将其与字符串"),n("code",[t._v("258EAFA5-E914-47DA-95CA-C5AB0DC85B11")]),t._v("相连，然后通过"),n("code",[t._v("sha1")]),t._v("安全散列算法计算结果后，再进行 Base64 编码，返回给客户端建立连接，过程如下")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("hashWebSocketKey")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sha1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" crypto"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createHash")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sha1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  sha1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("KEY_SUFFIX")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ascii"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" sha1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digest")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"base64"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashWebSocketKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sec-websocket-key"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" headers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HTTP/1.1 101 Web Socket Protocol Handshake"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Upgrade: WebSocket"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Connection : Upgrade"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sec-WebSocket-Accept: "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" key\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 建立连接")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("socket"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("headers"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\r\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("strong",[t._v("数据帧")]),t._v("：websocket 是通过帧进行传输，下面是 websocket 数据帧的定义")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" |  fin   |   masked     |  masking key |          |\n |  rsv1  |   payload    |              |          |\n |  rsv2  |   length     |              | payload  |\n |  rsv3  |   7+16 bit   |   4byte      |   data   |\n | opcode |    7+16      |              |          |\n |        |    7+64      |              |          |\n |        |              |              |          |\n |        |              |              |          |\n")])])]),n("p",[t._v("fin: 如果数据帧是最后一帧，则为 1，其余情况为 0")]),t._v(" "),n("p",[t._v("rsv1、rsv2、rsv3 ：1bit，用于扩展协议")]),t._v(" "),n("p",[t._v("opcode：长为 4 位的操作码，0 表示附加数据帧、1 表示文本数据帧、2 表示二进制数据帧、3-7 为非控制帧而预留、8 表示发送一个连接关闭的数据帧、9 为 ping 数据帧、10 表示 pong 数据帧")]),t._v(" "),n("p",[t._v("masked：表示是否进行掩码处理，长度为 1bit，客户端发送给服务器端时为 1，服务器端发送给客户端时为 0")]),t._v(" "),n("p",[t._v("payload length：一个 7、7+16、7+64 位长的数据位，标识数据的长度，如果值在 0-125 之间，那么该值就是数据的真实长度；如果值是 126，则后面 16 位的值是数据的真实长度；如果值是 127，则后面 64 位的值是数据的真实长度")]),t._v(" "),n("p",[t._v("masking key：当 masked 为 1bit 时，是一个 32 位长的数据位，也就是 4 个字节，用于解码数据")]),t._v(" "),n("p",[t._v("payload data：目标数据，位数为 8 的倍数")]),t._v(" "),n("h3",{attrs:{id:"url-为什么要解析？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#url-为什么要解析？","aria-hidden":"true"}},[t._v("#")]),t._v(" url 为什么要解析？")]),t._v(" "),n("p",[t._v("​ 因为网络标准规定了 url 只能是英文字母、阿拉伯数字和一些特殊符号，常见的有(= + & ?()!~)等等（不包括双引号），如果不转义就可能出现歧义，比如："),n("code",[t._v("http:www.baidu.com?key=value")]),t._v("这个 url，如果 key 本身就包含 = 符号，像 ke=y=value，就会出现歧义，无法知道 = 是连接 key 还是 value 的符号")]),t._v(" "),n("h3",{attrs:{id:"url-的编码规则是什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#url-的编码规则是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" url 的编码规则是什么？")]),t._v(" "),n("ul",[n("li",[n("p",[t._v('如果网络路径包含汉字，输入网址"http://zh.wikipedia.org/wiki/春节"，会用到 utf-8 编码')])]),t._v(" "),n("li",[n("p",[t._v('如果查询字符串包含汉字，输入网址"http://www.baidu.com/s?wd=春节"，会采用 gb2312 编码，查询字符串的编码，用的是操作系统的默认编码')])]),t._v(" "),n("li",[n("p",[t._v("如果在已打开的网页上，直接用 Get 或 Post 方法发出 HTTP 请求，编码规则由网页的编码决定，也就是由 html 源码中的字符集的设定决定：")]),t._v(" "),n("p",[n("code",[t._v('<meta http-equiv="Content-Type" content="text/html;charset=xxxx">')])]),t._v(" "),n("ul",[n("li",[n("p",[t._v("百度搜索，采用 gb2312 编码")])]),t._v(" "),n("li",[n("p",[t._v("谷歌搜索，采用 utf-8 编码")])])])])]),t._v(" "),n("h3",{attrs:{id:"如何保证都是-utf-8-的编码？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何保证都是-utf-8-的编码？","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何保证都是 utf-8 的编码？")]),t._v(" "),n("p",[t._v("使用 JavaScript 先对 url 编码，再提交给服务器")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("encodeURI()")]),t._v(" 函数，适用于对整个 url 编码，除了常见符号以外，其他一些在网址中有特殊含义的符号如(\" ; / : @ & = $ , #)不会进行编码；输出符号的 utf-8 形式，并在每个字节前加上 %（注意：不对 ' 单引号编码）")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("encodeURIComponent()")]),t._v(' 函数，用于对 url 的组成部分进行个别编码，不用对整个 url 编码，因此符号如(" ; / : @ & = $ , #)在 encodeURI() 中不被编码的符号，在 encodeURIComponent() 中统统会被编码')])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("escape()")]),t._v(" 函数，除了 ASCII 字母、数字、标点符号(@ * _ + - . /)以外，对其他所有字符进行编码(注意：不对 + 号编码，实际上不用该函数进行 url 编码，作用是返回一个字符的 Unicode 编码值)")])])]),t._v(" "),n("p",[n("strong",[t._v("举例")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("encodeURI('http://example.com/q?name=张三&age=30')")]),t._v(" "),n("ul",[n("li",[t._v("输出 http://example.com/q?name=%E5%BC%A0%E4%B8%89&age=30")])])]),t._v(" "),n("li",[n("code",[t._v("encodeURIComponent('http://example.com/q?name=张三&age=30')")]),t._v(" "),n("ul",[n("li",[t._v("输出 http%3A%2F%2Fexample.com%2Fq%3Fname%3D%E5%BC%A0%E4%B8%89%26age%3D30")])])])]),t._v(" "),n("h3",{attrs:{id:"从网卡把数据包传输出去到服务器发生了什么？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#从网卡把数据包传输出去到服务器发生了什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 从网卡把数据包传输出去到服务器发生了什么？")]),t._v(" "),n("p",[t._v("流程："),n("strong",[t._v("应用层处理")]),t._v("--\x3e"),n("strong",[t._v("传输层封装")]),t._v("--\x3e"),n("strong",[t._v("网络层封装")]),t._v("--\x3e"),n("strong",[t._v("链路层封装")]),t._v("--\x3e"),n("strong",[t._v("ARP解析")]),t._v("--\x3e"),n("strong",[t._v("数据发送")]),t._v("--\x3e"),n("strong",[t._v("路由器转发")]),t._v("--\x3e"),n("strong",[t._v("服务器接收")]),t._v("--\x3e"),n("strong",[t._v("服务器处理")]),t._v("--\x3e"),n("strong",[t._v("应用层接收")]),t._v("--\x3e"),n("strong",[t._v("业务逻辑处理")]),t._v("--\x3e"),n("strong",[t._v("响应发送")]),t._v("--\x3e"),n("strong",[t._v("客户端接收")])]),t._v(" "),n("p",[t._v("1、先从局域网把数据发送到 交换机（如果交换机没有缓存本地 MAC 地址和 IP 地址的映射，要通过 ARP 协议获取）")]),t._v(" "),n("p",[t._v("2、交换机将数据发送到 路由器，路由器具有转发和分组数据包的功能，算是经过了物理层、数据链路层（以太网），开始到网络层进行数据转发")]),t._v(" "),n("p",[t._v("3、路由器转发 IP 数据包，通过分组转发，所有数据到达服务器")]),t._v(" "),n("p",[t._v("4、服务器的上层协议传输层协议开始发挥作用，根据 TCP 包的端口号，让服务器特定的服务来处理到来的数据包，并且 TCP 是面向字节流的（四大特性：可靠传输、流量控制、拥塞控制和连接管理），所以 node 环境的 request 对象，它的监听事件 data 事件要用字符串一起拼接起来，是因为 TCP 本身就是字节流，request 对象使用 data（http 层面）是 TCP 传来的数据块")]),t._v(" "),n("p",[t._v("5、最后数据由传输层转交到应用层，也就是 HTTP 服务（或者 HTTPS），后端经过一系列逻辑处理后返回给前端数据")]),t._v(" "),n("h3",{attrs:{id:"cors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cors","aria-hidden":"true"}},[t._v("#")]),t._v(" CORS")]),t._v(" "),n("p",[n("strong",[t._v("CORS（Cross-Origin Resource Sharing）跨源资源共享")]),t._v("是一种安全协议，它允许或限制 Web 网页对于不同源（域名、协议、端口）的资源请求。CORS 是浏览器实现的一种安全机制，用于解决因同源策略导致的一系列问题")]),t._v(" "),n("p",[n("strong",[t._v("同源策略")]),t._v("是浏览器的一个安全特性，它限制了来自不同源的文档或脚本对当前资源的读取和操作，以防恶意窃取数据")]),t._v(" "),n("p",[n("strong",[t._v("CORS 的工作原理")])]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("简单请求")]),t._v("：如果一个请求是简单请求（如GET、POST且 HTTP 头部满足一定条件）浏览器会直接发送 CORS 请求，包括一个 Origin 头部，表示请求来源")]),t._v(" "),n("li",[n("strong",[t._v("非简单请求")]),t._v("：如果是非简单请求（如使用了某些 HTTP 头部、PUT、DELETE等），浏览器会先发送一个预检请求（OPTIONS）询问服务器是否允许实际的请求")]),t._v(" "),n("li",[n("strong",[t._v("服务器响应")]),t._v("：服务器收到请求后，会根据请求头的 Origin 决定是否允许跨源请求。如果允许，服务器会在响应头中包含 Access-Control-Allow-Origin 等 CORS 相关的头部")]),t._v(" "),n("li",[n("strong",[t._v("浏览器处理响应")]),t._v("：浏览器检查服务器的响应头部，如果满足 CORS 要求，则允许页面访问响应数据；否则就阻止访问")])]),t._v(" "),n("p",[n("strong",[t._v("CORS 相关的 HTTP 头部")])]),t._v(" "),n("ul",[n("li",[n("strong",[t._v("Origin")]),t._v("：请求来源，由浏览器天际")]),t._v(" "),n("li",[n("strong",[t._v("Access-Control-Allow-Origin")]),t._v("：服务器响应头，指定允许访问资源的源有哪些")]),t._v(" "),n("li",[n("strong",[t._v("Access-Control-Allow-Methods")]),t._v("：服务器响应头，指定允许的 HTTP 方法")]),t._v(" "),n("li",[n("strong",[t._v("Access-Control-Allow-Headers")]),t._v("：服务器响应头，指定允许的 HTTP 请求头")]),t._v(" "),n("li",[n("strong",[t._v("Access-Control-Allow-Credentials")]),t._v("：服务器响应头，指示是否允许发送 cookies")]),t._v(" "),n("li",[n("strong",[t._v("Access-Control-Allow-Max-Age")]),t._v("：服务器响应头，预检请求的有效时间")])]),t._v(" "),n("p",[t._v("什么情况需要 cors？")]),t._v(" "),n("ul",[n("li",[t._v("由 "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest",target:"_blank",rel:"noopener noreferrer"}},[n("code",[t._v("XMLHttpRequest")]),n("OutboundLink")],1),t._v(" 或 "),n("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Fetch"),n("OutboundLink")],1),t._v(" 发起的跨源 HTTP 请求")]),t._v(" "),n("li",[t._v("Web 字体 (CSS 中通过"),n("code",[t._v("@font-face")]),t._v("使用跨源字体资源)")]),t._v(" "),n("li",[t._v("使用 "),n("code",[t._v("drawImage")]),t._v(" 将 Images/video 画面绘制到 canvas")])]),t._v(" "),n("p",[t._v("服务端如何开启？")]),t._v(" "),n("p",[t._v("设置 "),n("code",[t._v("Access-Control-Allow-Origin")])]),t._v(" "),n("p",[t._v("下面 2 个是 options 请求检测")]),t._v(" "),n("ul",[n("li",[t._v("Access-Control-Allow-Methods")]),t._v(" "),n("li",[t._v("Access-Control-Allow-Headers")])]),t._v(" "),n("p",[t._v("HTTP 请求首部字段")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("Origin")])]),t._v(" "),n("li",[n("p",[t._v("Access-Control-Request-Method")])]),t._v(" "),n("li",[n("p",[t._v("Access-Control-Request-Headers")])])]),t._v(" "),n("p",[t._v("HTTP 响应首部字段")]),t._v(" "),n("ul",[n("li",[t._v("Access-Control-Allow-Origin")]),t._v(" "),n("li",[t._v("Access-Control-Allow-Methods")]),t._v(" "),n("li",[t._v("Access-Control-Allow-Headers")]),t._v(" "),n("li",[t._v("Access-Control-Allow-Credentials (配合 XMLHttpRequest.withCredentials 使用)")]),t._v(" "),n("li",[t._v("Access-Control-Expose-Headers")]),t._v(" "),n("li",[t._v("Access-Control-Max-Age")])]),t._v(" "),n("h3",{attrs:{id:"即时通讯的实现：短轮询、长轮询、sse和-websocket-的区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#即时通讯的实现：短轮询、长轮询、sse和-websocket-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 即时通讯的实现：短轮询、长轮询、SSE和 WebSocket 的区别？")]),t._v(" "),n("p",[n("strong",[t._v("短轮询")]),t._v("：浏览器主动每隔一段时间向服务器发送 HTTP 请求，服务器收到请求后，无论数据是否有更新都会响应。特点是比较简单但需要不断建立 HTTP 连接，浪费资源，服务器压力大")]),t._v(" "),n("p",[n("strong",[t._v("长轮询")]),t._v("：浏览器首次向服务器发送 HTTP 请求，服务器收到请求后，不会直接响应而是挂起，判断服务器有更新数据后再响应；如果一直没有数据更新，则到达一定时间限制后才返回。优点是减少了不必要的 HTTP 请求，缺点是挂起也会浪费资源")]),t._v(" "),n("p",[n("strong",[t._v("长连接 SSE")]),t._v("：服务器使用"),n("strong",[t._v("流信息")]),t._v("向服务器推送信息。严格情况下，HTTP 协议无法做到服务器主动推送信息。但服务器向客户端表明这是一种流信息，会连续不断的发送，这样客户端就不会关闭连接一直等待服务器发送新的数据流，"),n("strong",[t._v("视频播放")]),t._v("就是这样的例子。优点是基于 HTTP 协议，相对节省资源，缺点是 除了 IE/Edge 浏览器其他浏览器都能兼容（SSE 是单向通信）")]),t._v(" "),n("p",[n("strong",[t._v("WebSocket")]),t._v("：是 HTML5 的新协议，允许服务器主动向客户端推送消息。优点是 WebSocket 是全双工协议，可以相互发送信息，缺点是服务端配置相对复杂")]),t._v(" "),n("p",[n("strong",[t._v("总结")])]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("前三种方式都是基于 HTTP 协议")])]),t._v(" "),n("li",[n("strong",[t._v("性能排名")]),t._v("：WebSocket > SEE > 长轮询 > 短轮询")]),t._v(" "),n("li",[n("strong",[t._v("兼容性排名")]),t._v("：短轮询 > 长轮询 > SEE > WebSocket")])]),t._v(" "),n("h3",{attrs:{id:"cookie-和-session-的区别？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" cookie 和 session 的区别？")]),t._v(" "),n("p",[t._v("Cookie 和 Session 都是用来在"),n("strong",[t._v("无状态的 HTTP 协议")]),t._v("下保持用户状态的技术，用于"),n("strong",[t._v("识别和追踪用户的会话状态")])]),t._v(" "),n("p",[n("strong",[t._v("区别")]),t._v("：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("存储位置")]),t._v("：\n"),n("ul",[n("li",[t._v("Cookie：存储在客户端，由浏览器管理")]),t._v(" "),n("li",[t._v("Session：存储在服务端，服务端通过 Session ID 来识别很管理不同用户的 Session")])])]),t._v(" "),n("li",[n("strong",[t._v("存储大小")]),t._v("：\n"),n("ul",[n("li",[t._v("Cookie：单个 Cookie 大小限制4KB")]),t._v(" "),n("li",[t._v("Session：理论上没有大小限制，但过多的 Session 会增加服务器压力")])])]),t._v(" "),n("li",[n("strong",[t._v("生命周期")]),t._v("：\n"),n("ul",[n("li",[t._v("Cookie：可以设置过期时间，即使关闭浏览器也依旧存在，直到过期或者被清除")]),t._v(" "),n("li",[t._v("Session：依赖浏览器的会话，当关闭浏览器时，Session 就结束了，也可以通过设置保持一段时间活跃")])])]),t._v(" "),n("li",[n("strong",[t._v("跨域限制")]),t._v("：\n"),n("ul",[n("li",[t._v("Cookie：遵循同源策略")]),t._v(" "),n("li",[t._v("Session：通常与特定的域和端口绑定，不会跨域共享")])])]),t._v(" "),n("li",[n("strong",[t._v("用途")]),t._v("：\n"),n("ul",[n("li",[t._v("Cookie：一般用于保存用户的信息、会话标识")]),t._v(" "),n("li",[t._v("Session：一般用于需要服务器确认用户状态的场景，如登录态")])])]),t._v(" "),n("li",[n("strong",[t._v("使用方式")]),t._v("：\n"),n("ul",[n("li",[t._v("Cookie：一般由客户端携带发送给服务器")]),t._v(" "),n("li",[t._v("Session：一般由服务端通过 Session ID 识别和管理")])])]),t._v(" "),n("li",[n("strong",[t._v("性能考虑")]),t._v("：\n"),n("ul",[n("li",[t._v("Cookie：每次 HTTP 请求都会携带 Cookie，如果数据过多可能影响性能")]),t._v(" "),n("li",[t._v("Session：不会随请求发送，但需要服务端存储跟多信息，如果数据过多可能影响性能")])])])]),t._v(" "),n("h2",{attrs:{id:"安全"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安全","aria-hidden":"true"}},[t._v("#")]),t._v(" 安全")]),t._v(" "),n("h3",{attrs:{id:"常见的-web-攻击有哪些？如何防御？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见的-web-攻击有哪些？如何防御？","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见的 Web 攻击有哪些？如何防御？")]),t._v(" "),n("h3",{attrs:{id:"描述一下-xss-和-csrf-攻击？防御方法？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#描述一下-xss-和-csrf-攻击？防御方法？","aria-hidden":"true"}},[t._v("#")]),t._v(" 描述一下 XSS 和 CSRF 攻击？防御方法？")]),t._v(" "),n("p",[n("strong",[t._v("XSS跨站脚本攻击")])]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("是什么？")])]),t._v(" "),n("ul",[n("li",[t._v("XSS 跨站脚本攻击 ，就是攻击者想办法将一段可以执行的代码注入到网页中，比如在输入框中，输入"),n("code",[t._v("<script>console.log('xxx')<\/script>")]),t._v("。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("攻击方式")]),t._v("：反射型、存储型和基于 DOM")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("防御手段")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("对输入进行过滤，对输出进行转义，前端可以使用 js-xss 这个库")])]),t._v(" "),n("li",[n("p",[t._v("资源保护：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("将重要的 cookie 标记 httponly true, 避免黑客利用脚本获取 cookie")])]),t._v(" "),n("li",[n("p",[t._v("开启 CSP 网页安全政策，建立白名单，告诉浏览器哪些资源可以加载")]),t._v(" "),n("ul",[n("li",[t._v("Content-Security-Policy: default-src 'self'; 代表 只允许加载来自同一来源（即网站自身）的资源。如果其他指令没有指定其他源，浏览器将只加载来自当前网站（'self'）的脚本、图片、样式表等资源")])])])])])])])]),t._v(" "),n("p",[n("strong",[t._v("CSRF 跨站请求伪造攻击")])]),t._v(" "),n("ol",[n("li",[n("p",[n("strong",[t._v("是什么？")])]),t._v(" "),n("ul",[n("li",[t._v("CSRF 跨站请求伪造攻击，是指黑客引诱用户打开黑客的网站，在黑客的网站中，利用用户的登录状态发起的跨站请求。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("攻击要点")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("黑客网站利用浏览器在某些情况下允许跨域携带 cookie的特点，发送请求时携带了用户信息的 cookie")]),t._v(" "),n("li",[t._v("目标站点无法鉴别请求的来源，默认会认可这个请求的合法性")])])])]),t._v(" "),n("p",[n("strong",[t._v("攻击流程")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("受害者登录 a.com 网站，并保留了登录凭证")]),t._v(" "),n("li",[t._v("攻击者诱导受害者访问 b.com 网站")]),t._v(" "),n("li",[t._v("b.com 网站向 a.com 网站发送了一个请求：a.com/action=xxx 浏览器会默认携带 a.com 的 Cookie")]),t._v(" "),n("li",[t._v("a.com 网站收到请求后，对请求进行验证，确认是受害者的凭证（Cookie），误以为是受害者自己发送的请求")]),t._v(" "),n("li",[t._v("a.com 网站根据请求执行了 action=xxx")]),t._v(" "),n("li",[t._v("攻击完成，攻击者在受害者不知情的情况下，冒充受害者，让 a.com 执行了自己定义的操作")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[n("strong",[t._v("攻击方式")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("GET 请求：利用可以跨域的 html 标签发起跨域 GET 请求"),n("code",[t._v("<a> <script> <img> <link>")]),t._v("\n-访问这个页面： "),n("img",{attrs:{src:"https://a.com/action=xxx"}}),t._v(" 会自动发起HTTP请求")])]),t._v(" "),n("li",[n("p",[t._v("POST 请求：隐藏表单发起 POST 请求")])]),t._v(" "),n("li",[n("p",[t._v("如果后台允许跨域 CORS，也可以用 ajax 发请求")])])])])]),t._v(" "),n("p",[n("strong",[t._v("为什么能被攻击？")]),t._v("\n假设用户访问 A 网站（www.exampleA.com），并设置了一个 Cookie，如下：\n"),n("code",[t._v("Set-Cookie: user_session=abc123; Domain=.exampleA.com; Path=/; Secure; HttpOnly")]),t._v("\n表示：这个 Cookie 被设置为仅在 .exampleA.com 域下有效（Domain），并只能通过 HTTPS 发送（Secure），且不能通过 JS 访问（HttpOnly）")]),t._v(" "),n("p",[t._v("此时，用户在没有登出 A 网站的情况下，被诱导访问了第三方网站 B（www.exampleB.com），B 网站有一个隐藏的 iframe 或者 img：\n"),n("code",[t._v('<img src="https://www.exampleA.com/action=xxx" style="display: none">')])]),t._v(" "),n("p",[t._v("那么，这时浏览器会自动检查是否存在有效 Cookie，并且满足了上述条件（Domain、Path、Secure），浏览器会自动将 Cookie 附加到请求中，网站 A 根据凭证 Cookie 误以为是用户操作，执行了对应行为")]),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[n("strong",[t._v("防御手段")]),t._v("：")])]),t._v(" "),n("p",[t._v("根据攻击要点和攻击方式，CSRF 有两个特点：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("攻击发生在第三方域名")]),t._v("；")]),t._v(" "),n("li",[n("strong",[t._v("攻击并不能获取到 Cookie，只是使用")])])]),t._v(" "),n("p",[t._v("针对这两点制定防护策略：")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("限制不明外域的访问：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("同源检测")]),t._v("：验证 HTTP Referer、Origin 字段；（这两个字段不能由前端自定义）")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("浏览器开启 SameSite")]),t._v("：跨域不能传 cookie，服务端也可以设置")])])])]),t._v(" "),n("li",[n("p",[t._v("提交时要求附加本域才能获取的信息：")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("使用 CSRF Token")]),t._v("：请求时附带验证信息 token，服务端需要验证 token 的有效性")])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("双重 Cookie 验证")])])])]),t._v(" "),n("p",[t._v("（如果攻击者有权限在本域发布评论（含链接、图片等，统称 UGC），那么它可以直接在本域发起攻击，这种情况下同源策略无法达到防护的作用。"),n("strong",[t._v("防止同源 CSRF 就必须使用 token 验证的方式")]),t._v("）")])])]),t._v(" "),n("p",[n("strong",[t._v("使用 Origin Header 确定源域名")])]),t._v(" "),n("p",[t._v("大部分与 CSRF 相关的请求，请求头会携带 Origin 字段，字段值是请求方的域名（不包含 path 和 query）；如果 Origin 存在，直接校验 Origin 是否安全；")]),t._v(" "),n("p",[t._v("特殊情况下，请求头不携带 Origin：")]),t._v(" "),n("ul",[n("li",[t._v("IE 11 同源策略：IE 11 不会在跨站的 CORS 请求中添加 Origin，只能通过 Referer 作为标识，因为 IE 11对同源的定义与其他浏览器有差别")]),t._v(" "),n("li",[t._v("302 重定向：302 重定向之后 Origin 不会出现在重定向的请求中，因为 302 都是定向到新的URL，浏览器会认为是敏感信息，不想暴露到新的服务器上")])]),t._v(" "),n("p",[n("strong",[t._v("使用 Referer Header 确定源域名")])]),t._v(" "),n("p",[t._v("Referer 字段用于记录该 HTTP 请求的来源地址，对于 Ajax 请求，Referer 为发起请求的页面地址；对于页面跳转，Referer 为跳转前一个页面的地址")]),t._v(" "),n("p",[t._v("但根据浏览器的 Referer 策略，攻击者可以隐藏请求的 Referer，此时请求就不会携带 Referer")]),t._v(" "),n("p",[t._v("特殊情况下，也会不携带 referer 或者 referer 不可信：")]),t._v(" "),n("ul",[n("li",[t._v("IE6、7 使用 window.location.href 进行页面跳转会丢失 referer")]),t._v(" "),n("li",[t._v("HTTPS 页面跳转到 HTTP 页面，所有浏览器的 referer 都会丢失")]),t._v(" "),n("li",[t._v("点击Flash上到达另外一个网站的时候，Referer的情况就比较杂乱，不太可信")])]),t._v(" "),n("p",[t._v("当一个请求是页面请求（比如网站的主页），而来源是搜索引擎的链接（例如百度的搜索结果），也会被当成疑似CSRF攻击。所以在判断的时候需要过滤掉页面请求情况，通常Header符合以下情况，但相应的 这类页面请求就会暴露在 CSRF 的攻击范围之内")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Accept: text/html\nMethod: GET\n")])])]),n("p",[t._v("综上所述，同源检查是一个简单的防范方法，能够防止大部分的 CSRF 攻击，但对于本域攻击（如UGC场景：发布评论等）就需要做额外防护")]),t._v(" "),n("p",[n("strong",[t._v("CSRF Token")])]),t._v(" "),n("p",[t._v("CSRF 攻击的其中一个特点，就是攻击者只是使用 Cookie 信息，而无法获取，服务器误认为攻击者发送的请求是正规请求；因此可以要求用户请求都携带一个攻击者违法获取到的Token，服务器校验请求Token，区分开正常请求和攻击请求")]),t._v(" "),n("p",[n("strong",[t._v("原理")])]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("将CSRF Token 输出到页面中")])]),t._v(" "),n("li",[n("strong",[t._v("页面请求都携带这个 Token")])]),t._v(" "),n("li",[n("strong",[t._v("服务器校验Token是否正确")])])]),t._v(" "),n("p",[t._v("示例：")]),t._v(" "),n("ol",[n("li",[t._v("用户访问网站 A（https://exampleA.com），服务端生成一个 CSRF Token，通过 Cookie 返回（或者单独接口返回）")]),t._v(" "),n("li",[t._v("前端获取 Token 并将其添加到请求头："),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("fetch('https://exampleA.com/submit', {\n method: 'POST',\n headers: {\n     'Content-Type': 'application/json',\n     'X-CSRF-Token': 'abc123', // 从 Cookie 或 接口 中提取的 Token\n },\n body: JSON.stringify({ data: 'test' }),\n")])])])])]),t._v(" "),n("p",[t._v("});")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 攻击者尝试诱导用户点击 "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('<img src="https://example.com/submit?data=test">')]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 因为 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v(" Token只有网站 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("能读取，因此从攻击者网站发起的跨域请求无法读取附加到请求上（第三方网站无法通过 JavaScript 获取用户的 Cookie 或 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 中的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v(" Token）\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" 服务器验证 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v(" Token，空或不匹配就会拒绝请求，防御成功\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("双重 Cookie"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n其实就是上述利用 csrf token 的一种\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("原理"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 后端生成 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v(" Token，通过 Set"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Cookie 发送到客户端\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 前端读取并添加到请求头，后续请求都携带该信息\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 后端验证双 cookie，确保请求头和cookie中的token 一致\n（通过特定接口获取 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSRF")]),t._v(" Token，可以避免 Cookie 方式的不足）\n\n### 网络劫持有几种？如何防范\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("定义"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：网络劫持是一种网络攻击手段，攻击者通过非法手段劫持网络通信，导致合法用户的数据流被拦截、篡改或重定向\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("网络劫持类型"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),t._v("劫持"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 定义：攻击者通过篡改 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),t._v(" 服务器的记录，将用户的域名解析道错误的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v(" 上，从而导致用户无法访问目标网站；\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 防范措施：使用可信的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),t._v(" 服务、启用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNSSEC")]),t._v("、定期检查 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),t._v(" 记录\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("会话劫持"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 定义：攻击者窃取用户的会话信息如令牌或cookie，冒充用户在目标系统中进行操作\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 防范措施：使用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTPS")]),t._v("、启用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HSTS")]),t._v("、安全会话管理和多因素认证\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("劫持"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 定义：攻击者通过伪造 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v(" 地址或篡改路由信息，将用户的流量重定向到攻击者的服务器上\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 防范措施：使用网络监控、防火墙和加密通信\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("点击劫持"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 定义：攻击者利用透明或不可见的 iframe嵌套目标网站，诱导用户在不知情的情况下点击恶意链接\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 防范措施：设置 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Frame"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Options 和 Content"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Security"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Policy 头\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v("劫持"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 定义：攻击者在用户与服务器之间的通信过程拦截、篡改或监控数据流量\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 防范措施：使用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTPS")]),t._v("、验证 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TLS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SSL")]),t._v("证书、监控日志\n\n## react\n\nuseHook\n\n## 前端框架通识\n\n### Vue 和 React 的区别\n\n从 vue 的角度出发\n\n更容易上手，可以 script 标签方式引入，虽然 react 也支持 script 引入，但是 react 不支持 template 写法\n\nvue 支持 template，也支持 jsx\n\njsx 都需要 babel 插件\n\nvue 逻辑复用方式使用 mixin，react 现在不支持了\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" based "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v("，react 为 usehooks\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("Vue 跟 React 的最大区别在于数据的 reactivity，就是响应式系统上。"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("Vue 提供响应式的数据，当数据改动时，界面就会自动更新，而 React 里面需要调用方法 setState\n\nVue 进行数据拦截"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("代理，它对侦测数据的变化更敏感、更精确，组件更新粒度更细，React 则并不知道什么时候“应该去刷新”，触发局部重新变化是由开发者手动调用 setState 完成，但是 react 是全部一起更新的。\n\n为了达到更好的性能，React 暴漏给开发者 shouldComponentUpdate 这个生命周期 hook，来避免不需要的重新渲染（"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("相比之下，Vue 由于采用依赖追踪，默认就是优化状态：你动了多少数据，就触发多少更新，不多也不少，而 React 对数据变化毫无感知，它就提供 React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("createElement 调用生成 virtual dom"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("）\n\nreact\n\n函数式，不可变数据，all "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" js\n\n事件系统使用合成事件，都代理在 document 上\n\nReact 中事件处理函数中的 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v(" 默认不指向组件实例\n\n## 浏览器\n\n### 🌟 使用加载带有 defer 与 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" 属性的脚本的区别\n\n同步脚本的执行过程：基于脚本出现在文档头部及中间位置时\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 文档停止解析（与渲染）\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 请求脚本资源\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 资源下载后立即解析脚本并执行\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 脚本解析完后恢复文档的解析\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("image4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n（绿色"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("解析、蓝色"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("脚本加载、红色"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("脚本执行）\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("defer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" defer 属性指示浏览器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("在"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("文档解析完成后，再执行脚本"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("。也就是说，脚本的执行不会阻塞文档的解析\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用 defer 加载的脚本按照它们在文档中出现的顺序执行。\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" defer 适用于那些不依赖于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 元素的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 脚本，这些脚本可以等到整个页面解析完成后再运行\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("async"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" 属性指示浏览器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("在脚本加载完成后，尽快执行脚本，无论"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("文档是否已经解析完成"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 使用 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" 加载的脚本不保证按照它们在文档中的顺序执行，它们的执行时间取决于下载完成的时间。\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" 的目的是 脚本尽快执行，并减少对文档解析的阻塞\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" 适用于不操作 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 元素且需要尽快执行的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 脚本\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("共同点"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：都利用了浏览器的并行处理能力，允许在不阻塞主线程的情况下进行脚本的加载，通过异步加载脚本提高页面加载速度\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("区别"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("加载时机"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" defer：文档解析完成后，在 "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("DOMContentLoaded")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 事件响应前"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("按文档顺序执行脚本"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("：脚本下载完成后，尽快执行，不保证顺序\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("执行顺序"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" defer：脚本按照在文档中出现的顺序执行\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("：脚本的执行顺序不确定，依赖于下载完成的时间\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("对文档解析的影响"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" defer：不会阻塞文档解析，脚本将在文档解析完成后执行\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("：可能会阻塞文档解析，尤其是在脚本较大或网络较慢的情况下\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("优先级"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：如果"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("标签同时添加"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("async")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("和"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("defer")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，浏览器优先执行"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("async")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，不支持则执行"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("defer")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("应用场景"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" defer：用于需要操作整个 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 的脚本，或者脚本的相对执行顺序很重要的时候。\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("：用于独立脚本，例如计数器或广告，这些脚本的相对执行顺序无关紧要。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20240801")]),t._v("\n\n### 🌟 什么是 preload？和 prefetch 的区别？\n\npreload 和 prefetch 都是 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 的属性，用于控制资源的加载时机，以提高页面加载性能\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("preload"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("（预加载）\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("定义"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：preload 用于告知浏览器某个资源"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("在当前页面立即需要，因此应该尽早加载"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("适用场景"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：通常用于加载当前页面渲染或执行脚本所必需的资源，如当前视图中的图片、样式表、JavaScript脚本等\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("加载时机"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：preload 的资源会在页面渲染之前加载，且通常在解析 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 时就开始加载\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("prefetch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("（预获取）\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("定义"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：prefetch 用于告知浏览器某个资源"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("在未来某个页面可能需要，应在当前页面加载完成后预先加载"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("适用场景"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：通常用于加载预计用户接下来可能访问的页面所需的资源，如导航链接所指向页面的资源\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("加载时机"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：prefetch 的资源加载时机比 preload 晚，一般在页面的主要资源加载完成后且空闲时进行加载\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   区别   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("    preload   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   prefetch    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   目的   "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   为当前页面加载资源  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  为将来某个页面加载资源  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   加载时机 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  更早，是当前页面必需的 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 较晚，是未来页面用到的 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   优先级    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   更高    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   较低    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   使用场景  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   加载当前页面的关键资源    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   预先加载用户可能访问的页面的资源 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   浏览器行为 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   根据网络和页面加载情况调整 prefetch 资源的加载行为，preload 资源更可能被立即加载 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("Prefetch 预加载"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("可以强制浏览器在不阻塞 document 的 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("onload"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("developer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mozilla"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("en"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("US")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("docs"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Web"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("GlobalEventHandlers"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("onload"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 事件的情况下请求资源，告诉浏览器这个资源将来可能需要，但是什么时间加载这个资源是由浏览器来决定的。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("preload 是告诉浏览器页面必定需要的资源，浏览器一定会加载这些资源，而 prefetch 是告诉浏览器页面可能需要的资源"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，浏览器不一定会加载这些资源，也就是，prefetch 是加速下一页的访问，而不是当前页面的访问。建议："),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("对于当前页面很有必要的资源使用 preload，对于可能在将来的页面中使用的资源使用 prefetch，比如懒加载的资源适合用 prefetch，像 nodemodules 里面的库适合用 preload"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n\n### 前端存储数据的方式有哪些？\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("Cookies"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 特点：可由服务器设置并随着 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 请求自动发送到服务器\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 大小：适合存储较小的数据量，限制"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("kb\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 生命周期：可由浏览器设置过期时间\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数据访问范围：支持跨域访问\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("sessionStorage"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 特点：仅在当前浏览器标签页（会话）有效，无法跨标签或跨浏览器访问\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 大小：适合存储 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("MB 左右的数据量\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 生命周期：关闭页面会被清除\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数据访问范围：无法跨域访问\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("localStorage"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 特点：持久化性存储\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 大小：适合存储 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("MB 左右的数据量\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 生命周期：没有过期时间直到被显式删除\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数据访问范围：无法跨域访问，在同一浏览器的同源下所有标签页和窗口共享\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("IndexedDB"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 特点：大数据结构化存储，支持异步\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 大小：理论上没有限制\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 生命周期：没有过期时间直到被显式删除\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 数据访问范围：无法跨域访问\n\n\n### 浏览器的渲染进程的线程有几种？\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GUI")]),t._v(" 渲染线程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：主要负责解析 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("，进行 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v(" 树构建和渲染（与 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 线程互斥，当执行 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 线程时，"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GUI")]),t._v(" 渲染线程会被挂起，"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GUI")]),t._v(" 更新会被保存在一个队列中等待 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 线程空闲时执行）\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 引擎线程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：负责 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 脚本解析和执行（等待 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 引擎线程的任务执行完毕后，才会从任务队列中读取任务并执行）\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("事件触发线程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：当"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 引擎执行到如 setTimeout 时，会将任务推入到事件触发线程中，当对应的事件符合条件被触发时，该线程会把事件添加道待处理的队列尾部，等待 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 引擎线程空闲时执行\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("定时器触发线程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：即 setTimeout 和 setInterval 所在线程，定时器计时完毕后，定时器触发线程会将定时器任务推入到待处理的队列中，等待 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 引擎线程空闲时执行\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("异步 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 请求线程"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("："),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XHR")]),t._v(" 连接后会通过浏览器新开一个线程请求，检测到状态变更时，如果设有回调函数，异步线程就产生状态变更事件，将回调函数推入事件队列中，等待 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 引擎线程空闲时执行\n\n### 浏览器渲染\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 静态资源并不是同时请求的，也不是解析到指定标签的时候才去请求的，浏览器会自行判断；\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 会阻塞页面的解析和渲染，同时浏览器也存在预解析，遇到阻塞可以继续解析下面的元素；\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 不阻塞 dom 树的构建解析，只会阻塞其后面元素的渲染，不会阻塞其前面元素的渲染；\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 图片既不阻塞解析，也不阻塞渲染。\n\n### 图片在浏览器展示的过程 （星巴克科技）\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 加载阶段：发现图片资源，检查缓存或者通过 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 请求加载图片文件\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 解码阶段：根据不同的图片格式使用相应的解码器，将图片数据解码成位图，位图是像素点的集合，经过光栈化转换成像素数据\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 渲染阶段：图片与网页内容一起进过布局计算、绘制、图层合并之后由 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GPU")]),t._v(" 呈现在屏幕上\n\n### 什么情况阻塞页面渲染\n\n浏览器在解析"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("标签，会暂停 dom 的构建，所以 script 标签要放到 body 标签底部\n\njs 下载和执行都会阻塞页面的渲染，"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 树解析到非异步的外联 js 时会阻塞住，在它加载并且执行完之前，不会往下解析 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 树\n\n当"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("有"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("defer")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("或者"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("async")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("标签时，则会异步下载\n\ndefer：异步并行下载，不影响 dom 的解析，dom 解析完后，在"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("DOMContentLoaded")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("事件响应前按顺序执行，有 "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("defer")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 属性的脚本会阻止 "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("DOMContentLoaded")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 事件，直到脚本被加载并且解析完成。\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("：同样是并行下载，不会影响 dom 的解析，不同的是，脚本下载完后就直接执行了，而且是无序执行，跟"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("DOMContentLoaded")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("事件无关，比较适合加载无 dom 操作的脚本代码。\n\n如果"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("标签同时添加"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("async")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("和"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("defer")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，浏览器优先执行"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("async")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，不支持则执行"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("defer")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n### 重绘和回流\n\n重绘是当节点需要更改外观而不影响布局，改变 color 就为重绘\n\n回流是布局或者几何属性需要改变\n\n回流必定发生重绘\n\n#### 如何避免触发回流和重绘\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v("：\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 避免使用 table 布局。\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 尽可能在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 树的最末端改变 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v("。\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 避免设置多层内联样式。\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 将动画效果应用到"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("position")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("属性为"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("absolute")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("或"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("fixed")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("的元素上\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 避免使用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 表达式（例如："),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("calc()")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("）\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS3")]),t._v(" 硬件加速（"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GPU")]),t._v(" 加速）\n\nJavaScript：\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 避免频繁操作样式，最好一次性重写 style 属性，或者将样式列表定义为 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 并一次性更改 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 属性\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 避免频繁操作 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("，创建一个"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("documentFragment")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，在它上面应用所有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 操作，最后再把它添加到文档中\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 也可以先为元素设置"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("display: none")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 操作不会引发回流和重绘\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 避免频繁读取会引发回流"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("重绘的属性，如果确实需要多次使用，就用一个变量缓存起来\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流\n\n### 输入 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v(" 到页面展示\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、浏览器进行 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v(" 解析，再通过 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),t._v(" 查询，获得服务器的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v(" 地址和端口号\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、浏览器用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v(" 的三次握手与服务器建立连接\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、浏览器向服务器发送 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 请求\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、服务器收到报文后处理请求，同样拼好报文再发给浏览器\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、浏览器解析报文，渲染输出页面\n\n渲染过程 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" render "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" layout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" painting"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、根据 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 结构生成 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 树\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、根据 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 生成 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、将 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v(" 整合形成 RenderTree\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、根据 RenderTree 开始渲染\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、遇到"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("标签，会执行并阻塞渲染\n\n详细补充：\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 构建 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 树（"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" tree）：从上到下解析 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 文档生成 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 节点树，也叫内容树（content tree）\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 构建 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v(" 树（"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" Object Model）：加载解析样式生成 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v(" 树\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 执行 JavaScript：加载并执行 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 代码（包括内联代码或外联 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 文件） "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 构建渲染树 （render tree）：根据 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 树和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSSOM")]),t._v(" 树生成渲染树（render tree）\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 渲染树：按顺序展示在屏幕上的一系列矩形，这些矩形带有字体、颜色和尺寸等视觉属性 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 布局（layout）：根据渲染树将节点树的每一个节点布局在屏幕的正确位置\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 绘制（painting）：遍历渲染树绘制所有节点，为每一个节点使用对应的样式\n\n之后每当一个新元素加入到这个 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 树当中，浏览器便会通过 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 引擎查遍 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 样式表，找到符合该元素的样式规则应用到这个元素上，然后再重新去绘制它。\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("补充："),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),t._v("：_从浏览器地址栏输入 url 到请求返回发生了什么？_\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("：首先会进行 url 解析， 根据 dns 系统进行 ip 查询\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),t._v("：_url 为什么要解析？_\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("：因为网络标准规定了 url "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("只能是英文字母、阿拉伯数字和一些特殊符号，常见的有")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("等等（不包括双引号），如果不转义就可能出现歧义，比如："),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("http:www.baidu.com?key=value")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("这个 url，如果 key 本身就包含 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 符号，像 ke"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value，就会出现歧义，无法知道 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 是连接 key 还是 value 的符号\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),t._v("：_url 的编码规则是什么？_\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("：\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果网络路径包含汉字，输入网址"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://zh.wikipedia.org/wiki/春节"')]),t._v("，会用到 utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" 编码\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果查询字符串包含汉字，输入网址"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/s?wd=春节"')]),t._v("，会采用 gb2312 编码，查询字符串的编码，用的是操作系统的默认编码\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 如果在已打开的网页上，直接用 Get 或 Post 方法发出 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 请求，编码规则由网页的编码决定，也就是由 html 源码中的字符集的设定决定：\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("meta http"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("equiv"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),t._v(" content"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text/html;charset=xxxx"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n百度搜索，采用 gb2312 编码\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("49.")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n谷歌搜索，采用 utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" 编码\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("34.")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("19.")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),t._v("：_如何保证都是 utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" 的编码？_\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("：使用 JavaScript 先对 url 编码，再提交给服务器\n方式：\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" 函数，适用于对整个 url "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("编码，除了常见符号以外，其他一些在网址中有特殊含义的符号如")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('" '),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" @ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" #"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("也不进行编码；输出符号的 utf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" 形式，并在每个字节前加上 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("（注意：不对 ' 单引号编码）\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" 函数，用于对 url 的组成部分进行个别编码，不用对整个 url "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("编码，因此符号如")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('" '),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" @ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\$ "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" #"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("在 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 中不被编码的符号，在 "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 中统统会被编码\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("escape")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" 函数，除了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ASCII")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("字母、数字、标点符号")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("@ \\"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" \\_ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("以外，对其他所有字符进行编码")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("注意：不对 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 号编码，实际上不用该函数进行 url 编码，作用是返回一个字符的 Unicode 编码值"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("images"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("55.")]),t._v("png"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),t._v("：_dns 查询规则是什么 \b？_\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("：主要是几个步骤：\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 查找缓存：浏览器缓存、本地 hosts 文件缓存、路由缓存和本地 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DNS")]),t._v(" 缓存\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 请求 根服务器，获取 域服务器地址\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 请求 域服务器，获取 域名的解析服务器地址\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 请求 域名的解析服务器地址，获取域名和 ip 的对应关系\n\n接着：获取 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v(" 地址后，就可以向该 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v(" 地址定位的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 服务器发起 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v(" 请求，三次握手后建立完连接，开始请求 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 文件，如果 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v(" 文件在缓存里浏览器就直接返回，没有就去后台拿\n\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Q")]),t._v("：_缓存解释一下_\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("：\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 浏览器首次加载资源成功时，服务器返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("，此时浏览器不仅下载了资源，也把 response 的 header（里面的 date 属性用来计算第二次资源向同时当前时间和 date 的时间差） 一并缓存\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 下一次加载资源时，首先要经过 强缓存 的处理，cache"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control 优先级最高，如 cache"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" no"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cache，就直接进入到 协商缓存 的步骤了，如果 cache"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" max"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xxx，就会先比较当前时间和上一次返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" 时的时间差，如果没有超过 max"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age，命中强缓存，不发请求直接从本地缓存中读取该文件（如果没有 cache"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control，就取 expires 的值比较是否过期），过期就会进入下一阶段，协商缓存\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 协商缓存阶段，则向服务器发送 header 带有 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("None"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Match 和 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Since 的请求，服务器比较 Etag，如果相同，命中协商缓存，返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("；如果不同则有改动，直接返回新的资源文件，带上新的 Etag 值并返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 协商缓存中第二重要的字段是 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Since，如果客户端发送的 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Since 值与服务端获取的文件最近改动时间一致，则命中协商缓存，返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("304")]),t._v("，不一致则返回新的 last"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("modified 和文件并返回 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n\n来源："),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("阿里面试官的”说一下从 url 输入到返回请求的过程“"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("https"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("juejin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cn"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("post"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6928677404332425223")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n### 跨域\n\n浏览器出于安全考虑，有同源策略，也就是协议"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("域名"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("端口号要相同。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、jsonp\n\n用"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("加载 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" 请求地址，把回调函数名告诉后端，让后端返回"),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("callback(data)")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("，这样就可以执行这个回调函数了，不过这个函数名是全局变量的\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CORS")]),t._v("\n\n服务端设置 "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("Access-Control-Allow-Origin")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 就可以开启 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CORS")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、postMessage\n\n### 如何实现浏览器内多个标签页之间的通信？\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("跨标签实现通信"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("postMessage"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：允许跨源通信\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("localStorage "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 事件监听"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：存储数据后触发事件监听，更新数据实现通信\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("ShareWorker"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：通过 ShareWorker 多个标签页可以共享一个线程，实现数据共享和通信\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("WebSocket"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("：Websocket 提供全双工通信渠道，实现不同标签页之间建立持久连接，可通过消息发送进行通信\n\n## 性能优化\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 减少 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 的访问次数，可以将 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 缓存到变量中\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 减少"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("重绘"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("和"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("回流"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，任何会导致"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("重绘"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("和"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("回流"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("的操作都应减少执行，可将"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("多次操作合并为一次"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 尽量采用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("事件委托"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("的方式进行事件绑定，避免大量绑定导致内存占用过多\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 层尽量扁平化，避免过多的层级嵌套，尽量使用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("特定的选择器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("来区分\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 动画尽量使用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("动画属性"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("来实现，开启 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GPU")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" 硬件加速\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 图片在加载前提前"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("指定宽高"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("或"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("脱离文档流"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，可避免加载后的重新计算导致的页面回流\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 文件在 "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<head>")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 标签中引入，"),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v(" 文件在 "),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("<body>")]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" 标签中引入，优化"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("关键渲染路径"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 加速或减少 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 请求，使用 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN")]),t._v(" 加载静态资源"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，合理使用浏览器"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("强缓存"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("和"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("协商缓存"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，小图片可以使用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("Base "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" 来代替，合理使用浏览器的"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("预指令 prefetch"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" 和"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("预加载指令 preload"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 压缩"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("混淆代码"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("删除无用代码"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("代码拆分"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("减少文件体积\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 小图片使用"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("雪碧图"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，图片选择合适的"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("质量、尺寸和格式"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("，避免流量浪费\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 减少关键资源的个数和大小（webpack 拆"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("合包，懒加载）\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 图片懒加载\n\n## 项目代码、样式规范管理\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 跟 "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UI")]),t._v(" 对接，开发相应的全局组件，在业务模块中统一使用，不得重复造轮子\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 全局 scss 变量、scss 函数管理样式\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" eslint、prettier、precommit\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 任何人如果修改了全局 scss 变量、scss 函数，都需要在文档上声明\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 制定编码规范，命名规范，并提供相关文档\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 统一 vscode 插件，统一 vscode 插件配置 json\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 定期 code review，记录不合理地方和表扬优雅的代码\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 提供项目基线版本，项目目录结构一致\n\n### Code Review\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 命名混乱\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" div 节点冗余\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" css 冗余\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 过多的 "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 全局组件带有子模块业务代码\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 注释太少，data 变量注释要带上\n\n## 工程架构能力\n\n### 脚手架\n\n开发了一款公司内部使用的脚手架\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、创建项目\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、快速启动 cz"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("customizable\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、初始化开发环境\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、执行脚本\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、版本升级\n\n### 框架搭建\n\n搭建项目基础框架\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、符合规范的组织结构\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、提供常用工具的配置 prettier、eslint、husky\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、集成内部组件库\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、配置文件读取写入\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("、自动加载全局组件"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("vuex modules\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("、eventBus 解决方案\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("、svg 图标\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("、hjson\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("、ie "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("、bable 可选链\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("、gzip\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v("、dart"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sass\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v("、jest\n\n### 微前端系统设计\n\n初衷\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、子系统增量更新\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、子系统可独立部署\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、子系统交给不同团队开发\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、不用 iframe\n\n考虑点\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、single"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("spa，systemjs 接入，single"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("spa 应用管理，systemjs 加载 umd 文件\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、api 设计，命名？兼容旧版本都需要考虑\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("、设计系统初始化的整个链路，各个模块间的联系")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("在子系统加载前要拿到一些信息"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n#### 状态管理\n\n主应用和子应用如何共享状态？\n\n自研了一个状态管理器，叫 mircoStore，类似 vuex 的使用方式，存储全局状态\n\n#### 样式管理\n\n为了避免样式冲突，每个子应用都有一个 css 命名空间，就是 id，在 singeSpaVue 的选项中传入，在调用的时候添加上\n\n#### 注册应用\n\n模块注册使用 systemjs，因为模块加载是用了 systemjs\n\nsingle"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("spa 注册应用，在回调函数中让 systemjs 加载子应用\n\n#### 全局组件复用\n\n全局组件统一在 main"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("app 上注册，也是主应用\n\n一定要加载完主应用再去加载子应用\n\n#### 抽离共同依赖\n\nwebpack externals 依赖，比如 vue 这些\n\n这些都是用 script 标签进行加载，所以这些都是全局的\n\n还有一些工具库也是通过这种方式加载，用 rollup 打包成 umd 方式\n\n#### 权限控制\n\n权限控制是主要是采用动态 addRoutes 的方式，跟单体应用略有不同\n\n在 main"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("app 加载之前，也就是在 single"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("spa 生命周期 bootstrap 中，进行资源加载\n\n资源包括了地图资源、路由资源这些，获取到这些资源之后，都放到 microStore 中\n\n在子应用的挂载前，同样也是 bootstrap 中，读取对应子应用的路由权限，动态 addRoutes\n\n## Git\n\n### Git 常用命令\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" git init：初始化一个新的 Git 仓库\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" git clone：克隆一个远程仓库到本地\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" git add：将更改的文件添加到暂存区，准备提交\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" git commit：将暂存区的文件提交到本地仓库\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" git push：将本地的提交推送到远程仓库\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v(" git pull：从远程仓库拉取最新代码"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("并合并到当前分支"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.")]),t._v(" git fetch：从远程仓库拉取最新代码，"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("但不会自动合并到当前分支"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.")]),t._v(" git merge：将两个分支合并在一起，"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("并创建新的 commit"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.")]),t._v(" git rebase：将当前分支的提交重新应用到另一个分支上，呈线性记录，"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("不会产生新的合并提交"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.")]),t._v(" git checkout：切换到指定分支\n"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.")]),t._v(" git stash：暂存当前工作区中的更改，以便在其他分支上工作")])])])])},[],!1,null,null,null);s.default=e.exports}}]);